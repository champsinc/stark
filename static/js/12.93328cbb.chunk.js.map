{"version":3,"sources":["../node_modules/antd/es/breadcrumb/BreadcrumbItem.js","../node_modules/antd/es/breadcrumb/Breadcrumb.js","../node_modules/antd/es/breadcrumb/index.js","../node_modules/react-filepond/dist/react-filepond.js","../node_modules/filepond/dist/filepond.js","../node_modules/filepond-plugin-image-exif-orientation/dist/filepond-plugin-image-exif-orientation.js","../node_modules/filepond-plugin-image-preview/dist/filepond-plugin-image-preview.js","../node_modules/filepond-plugin-file-validate-size/dist/filepond-plugin-file-validate-size.js","../node_modules/filepond-plugin-file-validate-type/dist/filepond-plugin-file-validate-type.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_extends","Object","assign","target","i","arguments","length","source","key","hasOwnProperty","call","apply","this","_defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","_possibleConstructorReturn","self","ReferenceError","_assertThisInitialized","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_setPrototypeOf","p","__rest","s","e","t","indexOf","getOwnPropertySymbols","BreadcrumbItem_BreadcrumbItem","_React$Component","BreadcrumbItem","_this","instance","Constructor","TypeError","_classCallCheck","renderBreadcrumbItem","_ref","link","getPrefixCls","_a","customizePrefixCls","prefixCls","separator","children","restProps","overlay","react","className","concat","renderBreadcrumbNode","breadcrumbItem","dropdown","placement","icon","type","protoProps","staticProps","subClass","superClass","create","value","_inherits","config_provider","__ANT_BREADCRUMB_ITEM","defaultProps","propTypes","prop_types","href","Breadcrumb_typeof","Breadcrumb_defineProperties","Breadcrumb_possibleConstructorReturn","Breadcrumb_assertThisInitialized","Breadcrumb_getPrototypeOf","Breadcrumb_setPrototypeOf","defaultItemRender","route","params","routes","paths","isLastItem","name","breadcrumbName","paramsKeys","keys","join","replace","RegExp","replacement","getBreadcrumbName","Breadcrumb_Breadcrumb","Breadcrumb","Breadcrumb_classCallCheck","genForRoutes","_ref$routes","_ref$params","_ref$itemRender","itemRender","map","path","forEach","push","menu","child","Item","renderBreadcrumb","_ref2","crumbs","_this$props","style","element","index","warning","classnames_default","Breadcrumb_inherits","__webpack_exports__","exports","File","FilePond","registerPlugin","undefined","_createClass","defineProperties","_react","__webpack_require__","_react2","__esModule","default","_filepond","isSupported","supported","getFilesFromChildren","Children","src","options","origin","file","size","metadata","filteredMethods","Component","_this2","_pond","_element","files","filter","includes","destroy","prevProps","previousFiles","currentFiles","JSON","stringify","setOptions","_this3","_props","id","allowMultiple","required","captureMethod","acceptedFileTypes","createElement","accept","multiple","capture","ref","_React$Component2","forin","cb","createObject","definition","property","attr","node","getAttribute","hasAttribute","setAttribute","slicedToArray","arr","Array","isArray","_arr","_n","_d","_e","_s","_i","next","done","err","sliceIterator","toConsumableArray","arr2","from","svgElements","isSVGElement","tag","attributes","document","createElementNS","appendChildView","parent","childViews","view","splice","removeChildView","parentNode","removeChild","getViewRect","elementRect","offset","scale","left","top","right","width","bottom","height","rect","inner","outer","childView","isRectIgnored","childViewRect","expandRect","calculateRectSize","marginBottom","marginRight","isNumber","easeInOutQuad","animator","spring","_ref$stiffness","stiffness","_ref$damping","damping","_ref$mass","mass","position","velocity","resting","api","interpolate","destination","errorMargin","Math","abs","thereYet","onupdate","oncomplete","set","get","tween","_ref$duration","duration","_ref$easing","easing","_ref$delay","delay","start","reverse","ts","createAnimator","category","def","addGetSet","overwrite","getter","setter","isDefined","defaults$1","opacity","scaleX","scaleY","translateX","translateY","rotateX","rotateY","rotateZ","originX","originY","propsHaveChanged","currentProps","newProps","prop","applyStyles","perspective","transforms","styles","elementCurrentStyle","Mixins","mixinConfig","viewProps","viewInternalAPI","viewExternalAPI","initialProps","getRect","write","listeners","viewState","events","add","fn","addEventListener","remove","removeEventListener","removeEvent","on","off","findIndex","event","animations","animation","apis","updateRect","layoutCalculated","paddingTop","parseInt","marginTop","marginLeft","offsetLeft","offsetTop","offsetWidth","offsetHeight","scrollTop","hidden","offsetParent","createView","_ref$tag","_ref$name","_ref$attributes","_ref$read","read","_ref$write","_ref$create","_ref$destroy","_ref$filterFrameActio","filterFrameActionsForChild","actions","_ref$didCreateView","didCreateView","_ref$didWriteView","didWriteView","_ref$ignoreRect","ignoreRect","_ref$ignoreRectUpdate","ignoreRectUpdate","_ref$mixins","mixins","store","window","getComputedStyle","frameRect","isResting","activeMixins","state","writers","readers","destroyers","getElement","getChildViews","sharedAPIDefinition","internalAPIDefinition","is","needle","appendChild","insertBefore","createChildView","linkView","unlinkView","registerWriter","writer","registerReader","reader","registerDestroyer","destroyer","invalidateLayout","dispatch","query","externalAPIDefinition","_read","root","internalAPI","_write","frameActions","timestamp","mixin","_destroy","mixinAPIDefinition","sort","a","b","mixinAPI","childCount","createRoute","_ref$actions","action","data","newNode","referenceNode","insertAfter","nextSibling","isEmpty","trim","str","toString","isBoolean","toBoolean","isString","toNumber","toInt","isInt","isFinite","floor","toBytes","naturalFileSize","test","isFunction","methods","process","revert","fetch","restore","load","createAction","outline","method","timeout","url","headers","withCredentials","onload","ondata","onerror","parts","split","header","isObject","getType","isNull","isAPI","conversionTable","array","splitter","boolean","int","float","parseFloat","bytes","string","serverapi","createServerAPI","object","parse","function","levels","level","shift","toFunctionReference","getValueByType","newValue","defaultValue","valueType","newValueType","convertedValue","option","createOptions","optionDefinition","currentValue","createOption","fromCamels","part","toLowerCase","createOptionActions","toUpperCase","createOptionQueries","InteractionMethod","API","DROP","BROWSE","PASTE","NONE","getUniqueId","random","substr","forEachDelayed","items","item","Promise","resolve","reject","setTimeout","arrayRemove","listener","fire","_len","args","_key","onOnce","_cb","copyObjectPropertiesToObject","excluded","getOwnPropertyNames","getOwnPropertyDescriptor","PRIVATE","createItemAPI","getNonNumeric","exec","getDecimalSeparator","toLocaleString","Type","BOOLEAN","INT","STRING","ARRAY","OBJECT","FUNCTION","ACTION","SERVER_API","REGEX","filters","applyFilterChain","utils","matchingFilters","f","initialFilter","reduce","current","then","catch","error","applyFilters","addFilter","getOptions$1","defaultOptions","allowDrop","allowBrowse","allowPaste","allowReplace","allowRevert","forceRevert","maxFiles","checkValidity","dropOnPage","dropOnElement","dropValidation","ignoredFiles","instantUpload","maxParallelUploads","server","labelDecimalSeparator","labelThousandsSeparator","decimalSeparator","thousandsStringWithSeparator","thousandsStringWithoutSeparator","getThousandsSeparator","labelIdle","labelInvalidField","labelFileWaitingForSize","labelFileSizeNotAvailable","labelFileCountSingular","labelFileCountPlural","labelFileLoading","labelFileAdded","labelFileLoadError","labelFileRemoved","labelFileRemoveError","labelFileProcessing","labelFileProcessingComplete","labelFileProcessingAborted","labelFileProcessingError","labelFileProcessingRevertError","labelTapToCancel","labelTapToRetry","labelTapToUndo","labelButtonRemoveItem","labelButtonAbortItemLoad","labelButtonRetryItemLoad","labelButtonAbortItemProcessing","labelButtonUndoItemProcessing","labelButtonRetryItemProcessing","labelButtonProcessItem","iconRemove","iconProcess","iconRetry","iconUndo","iconDone","oninit","onwarning","onaddfilestart","onaddfileprogress","onaddfile","onprocessfilestart","onprocessfileprogress","onprocessfileabort","onprocessfilerevert","onprocessfile","onremovefile","onpreparefile","onupdatefiles","beforeAddFile","beforeRemoveFile","stylePanelLayout","stylePanelAspectRatio","styleButtonRemoveItemPosition","styleButtonProcessItemPosition","styleLoadIndicatorPosition","styleProgressIndicatorPosition","getItemByQuery","find","getNumericAspectRatioFromString","aspectRatio","_aspectRatio$split","_aspectRatio$split2","w","h","getActiveItems","archived","queries","GET_ITEM","GET_ACTIVE_ITEM","GET_ACTIVE_ITEMS","GET_ITEMS","GET_ITEM_NAME","filename","GET_ITEM_SIZE","fileSize","GET_STYLES","GET_PANEL_ASPECT_RATIO","isShapeCircle","GET_ITEMS_BY_STATUS","status","GET_TOTAL_ITEMS","IS_ASYNC","insertItem","min","max","arrayInsert","isBase64DataURI","getFilenameFromURL","pop","getExtensionFromFilename","leftPad","padding","slice","getDateString","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getFileFromBlob","blob","extension","lastModifiedDate","subtype","guesstimateExtension","createBlob","arrayBuffer","mimeType","BB","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","bb","append","getBlob","Blob","getMimeTypeFromBase64DataURI","dataURI","getBlobFromBase64DataURI","byteString","atob","getBase64DataFromBase64DataURI","getByteStringFromBase64DataURI","ab","ArrayBuffer","ia","Uint8Array","charCodeAt","getBlobFromByteStringWithMimeType","getFileNameFromHeader","matches","match","getFileSizeFromHeader","getTranfserIdFromHeader","getFileInfoFromHeaders","info","rows","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","return","createFileLoader","fetchFn","complete","progress","request","loadURL","now","response","body","code","computable","total","fileinfo","setSource","getProgress","abort","isGet","sendRequest","onheaders","onprogress","ontimeout","onabort","aborted","xhr","headersReceived","encodeURI","encodeURIComponent","XMLHttpRequest","upload","lengthComputable","loaded","onreadystatechange","readyState","open","setRequestHeader","responseType","send","createResponse","createTimeoutResponse","getAllResponseHeaders","createFetchFunction","apiUrl","res","statusText","createRevertFunction","uniqueFileId","getRandomNumber","createFileProcessor","processFn","perceivedProgress","perceivedPerformanceUpdater","perceivedDuration","clear","progressFn","completeFn","tickMin","tickMax","tick","runtime","clearTimeout","createPerceivedPerformanceUpdater","getDuration","reset","getFilenameWithoutExtension","lastIndexOf","ItemStatus","INIT","IDLE","PROCESSING_QUEUED","PROCESSING","PROCESSING_COMPLETE","PROCESSING_ERROR","PROCESSING_REVERT_ERROR","LOADING","LOAD_ERROR","FileOrigin$1","INPUT","LIMBO","LOCAL","createItem","serverFileReference","released","activeLoader","activeProcessor","abortProcessingRequestComplete","setStatus","_setMetadata","silent","last","serverId","filenameWithoutExtension","fileExtension","fileType","getMetadata","deepCloneObject","v","setMetadata","extend","handler","itemAPI","abortLoad","retryLoad","requestProcessing","abortProcessing","loader","createFileStub","meta","success","result","processor","onprocess","revertFileUpload","release","archive","getItemById","itemId","getItemIndexByQuery","fetchLocal","getDomainFromURL","location","protocol","isFile","dynamicLabel","label","listUpdated","listUpdateTimeout","optionalPromise","getItemByQueryFromState","itemHandler","_ref$success","_ref$failure","failure","ABORT_ALL","DID_SET_FILES","_ref2$value","activeItems","interactionMethod","DID_UPDATE_ITEM_METADATA","_ref3","doUpload","shouldPrepareOutput","ready","ADD_ITEM","_ref4","_ref4$success","_ref4$failure","_ref4$options","count","maxFileCount","hasRoomForItem","_item","mainStatus","main","sub","handleAdd","shouldAdd","change","loadComplete","_ref5","isExternalURL","REQUEST_PREPARE_OUTPUT","_ref6","COMPLETE_LOAD_ITEM","_ref7","RETRY_ITEM_LOAD","REQUEST_ITEM_PROCESSING","itemCanBeQueuedForProcessing","PROCESS_ITEM","totalCurrentUploads","queued","processingQueue","fd","formData","FormData","createProcessorFunction","RETRY_ITEM_PROCESSING","REQUEST_REMOVE_ITEM","shouldRemove","RELEASE_ITEM","REMOVE_ITEM","removeFromView","ABORT_ITEM_LOAD","ABORT_ITEM_PROCESSING","REQUEST_REVERT_ITEM_PROCESSING","handleRevert","shouldRevert","requestRemoveResult","REVERT_ITEM_PROCESSING","isMockItem","SET_OPTIONS","_ref8","formatFilename","createElement$1","tagName","text","textNode","childNodes","nodeValue","createTextNode","polarToCartesian","centerX","centerY","radius","angleInDegrees","angleInRadians","PI","x","cos","y","sin","percentageArc","to","arcSweep","startAngle","endAngle","end","describeArc","progressIndicator","spin","svg","stroke-width","stroke-linecap","align","dataset","ringStrokeWidth","ringFrom","ringTo","coordinates","fileActionButton","title","innerHTML","disabled","removeAttribute","toNaturalFileSize","round","MB","KB","GB","removeDecimalsWhenZero","decimalCount","toFixed","updateFile","fileName","updateFileSizeOnError","fileInfo","DID_LOAD_ITEM","DID_UPDATE_ITEM_META","DID_THROW_ITEM_LOAD_ERROR","DID_THROW_ITEM_INVALID","toPercentage","didSetItemLoadProgress","fileStatus","DID_REVERT_ITEM_PROCESSING","DID_REQUEST_ITEM_PROCESSING","DID_ABORT_ITEM_PROCESSING","DID_COMPLETE_ITEM_PROCESSING","DID_UPDATE_ITEM_PROCESS_PROGRESS","DID_UPDATE_ITEM_LOAD_PROGRESS","DID_THROW_ITEM_PROCESSING_ERROR","DID_THROW_ITEM_PROCESSING_REVERT_ERROR","DID_THROW_ITEM_REMOVE_ERROR","Buttons","AbortItemLoad","RetryItemLoad","RemoveItem","ProcessItem","AbortItemProcessing","RetryItemProcessing","RevertItemProcessing","ButtonKeys","calculateFileInfoOffset","buttonRemoveItem","calculateFileVerticalCenterOffset","calculateFileHorizontalCenterOffset","getRemoveIndicatorAligment","DefaultStyle","buttonAbortItemLoad","buttonRetryItemLoad","buttonProcessItem","buttonAbortItemProcessing","buttonRetryItemProcessing","buttonRevertItemProcessing","loadProgressIndicator","processProgressIndicator","processingCompleteIndicator","IdleStyle","ProcessingStyle","StyleMap","DID_START_ITEM_LOAD","DID_START_ITEM_REMOVE","DID_LOAD_LOCAL_ITEM","DID_START_ITEM_PROCESSING","processingCompleteIndicatorView","route$3","DID_SET_LABEL_BUTTON_ABORT_ITEM_PROCESSING","DID_SET_LABEL_BUTTON_ABORT_ITEM_LOAD","DID_SET_LABEL_BUTTON_ABORT_ITEM_REMOVAL","buttonAbortItemRemoval","_ref9","_ref10","_ref11","isAsync","enabledButtons","buttonView","classList","loadIndicatorView","progressIndicatorView","currentAction","newStyles","defaultStyles","control","fileWrapper","dataContainer","DID_REMOVE_ITEM","PANEL_SPRING_PROPS","createSection","section","viewConstructor","panel","scalable","topRect","bottomRect","center","StateMap","controls","markedForRemoval","currentState","filepondItemState","route$2","DID_ADD_ITEM","list","childIndex","childRect","dragIndex","itemMargin","dragTranslation","itemHeight","t1","sqrt","easeOutCirc","getItemIndexByPosition","positionInView","l","itemRect","itemRectMid","route$1","DID_DRAG","dragCoordinates","scopeLeft","scopeTop","DID_END_DRAG","listScroller","overflowing","overflow","newHeight","attrToggle","enabledValue","updateRequiredStatus","shouldCheckValidity","setCustomValidity","browser","handleChange","input","form","resetFileInput","DID_SET_ALLOW_BROWSE","DID_SET_ALLOW_MULTIPLE","DID_SET_ACCEPTED_FILE_TYPES","DID_SET_CAPTURE_METHOD","DID_SET_REQUIRED","Key","ENTER","SPACE","updateLabelValue","clickable","querySelector","dropLabel","keyCode","preventDefault","click","caption","DID_SET_LABEL_IDLE","route$4","addBlob","DID_DROP","drip","blob$$1","requestDataTransferItems","dataTransfer","links","getLinks","getFiles","promisedFiles","isFileSystemItem","getFilesFromItem","all","returendFileGroups","group","isEntry","entry","getAsEntry","isDirectory","kind","isDirectoryEntry","getFilesInDirectory","getAsFile","totalFilesFound","readEntries","dirEntry","createReader","entries","webkitGetAsEntry","getLinksFromTransferMetaData","getLinksFromTransferURLData","getData","dragNDropObservers","eventPosition","pageLeft","pageX","pageTop","pageY","offsetX","layerX","offsetY","layerY","getDragNDropObserver","observer","newObserver","createDragNDropObserver","clients","dragenter","dragover","dragleave","drop","handlers","createHandler","addListener","client","isEventTarget","getRootNode","elementAtPosition","point","elementFromPoint","pageXOffset","pageYOffset","contains","initialTarget","setDropEffect","effect","dropEffect","onenter","overDropTarget","some","filterElement","onexit","ondrag","allowdrop","allowsTransfer","ondrop","createHopper","scope","validateItems","catchesDropsOnPage","requiresDropOnElement","scopeToObserve","createDragNDropClient","documentElement","lastState","ondragend","ondragstart","updateHopperState","hopperState","listening","listeners$1","handlePaste","clipboardData","createPaster","listen","addFilesNotificationTimeout","notificationClearTimeout","filenames","assist","message","textContent","listModified","clear$1","isUsingFilePond","activeElement","itemProcessedUndo","itemError","assistant","toCamels","charAt","calculateListItemMargin","calculateListHeight","maxItems","visual","bounds","calculateRootBoundingBoxHeight","measureHeight","cappedHeight","maxHeight","fixedHeight","exceedsMaxFiles","totalItems","totalBrowseItems","hasMaxItems","DID_SET_ALLOW_DROP","hopper","every","itemList","func","interval","immidiateOnly","dist","debounce","DID_SET_ALLOW_PASTE","paster","measure","_root$ref","panel$$1","isMultiItem","atMaxCapacity","addAction","listItemMargin","listHeight","labelHeight","currentLabelHeight","listMarginTop","listMarginBottom","visualHeight","boundsHeight","listAvailableHeight","_listAvailableHeight","isCappedHeight","panelHeight","_listAvailableHeight2","createApp$1","initialOptions","originalElement","defaultOptions$$1","initialState","actionQueue","dispatchQueue","isBlocking","actionHandlers","_queryHandles","queryHandles","getState","processActionQueue","queue","processDispatchQueue","createStore","readWriteApi","actions$$1","routeActionsToEvents","createEvent","output","eventRoutes","DID_DESTROY","DID_INIT","DID_THROW_MAX_FILES","DID_PREPARE_OUTPUT","DID_UPDATE_ITEMS","detail","pond","dispatchEvent","CustomEvent","bubbles","cancelable","composed","filtered","exposeEvent","addFile","removeFile","processFile","createOptionAPI","addFiles","sources","lastArgument","sourcePromises","delayPromises","results","getFile","processFiles","_len2","_key2","queries$$1","removeFiles","_len3","_key3","browse","appendTo","replaceElement","restoreElement","isAttachedTo","createAppObject","customOptions","app","getAttributesAsObject","attributeMapping","attribute","attributeName","mapObject","propertyMap","selector","mapping","selectorRegExp","createApp","HTMLElement","^class$","^multiple$","^capture$","^server","^process","^revert","^fetch","^restore","^load","^type$","^files$","mergedOptions","attributeOptions","nodeName","querySelectorAll","PRIVATE_METHODS","createAppAPI","replaceInString","replacements","images","text$1","zip","epub","guesstimateMimeType","createWorker","workerBlob","workerURL","URL","createObjectURL","worker","Worker","transfer","post","transferList","onmessage","postMessage","terminate","revokeObjectURL","loadImage","img","Image","renameFile","renamedFile","copyFile","registeredPlugins","createAppPlugin","plugin","additionalOptions","pluginOutline","views","operamini","apps","FileStatus","OptionTypes","getOptions","FileOrigin","fps","painter","requestAnimationFrame","delta","performance","createPainter","updateOptionTypes","hook","indexToRemove","context","matchedHooks","newHooks","newHook","plugins","opts","setOptions$1","factory","module","Marker","JPEG","APP1","EXIF","TIFF","Orientation","Unknown","getUint16","little","getUint32","isJPEG","FileReader","DataView","byteLength","marker","tags","readAsArrayBuffer","getImageOrientation","orientation","allowImageExifOrientation","IMAGE_SCALE_SPRING_PROPS","createVector","vectorSubtract","vectorDistance","vectorDot","vectorDistanceSquared","getOffsetPointOnEdge","rotation","B","C","sinA","sinB","sinC","cosC","ratio","c","getImageRectZoomFactor","imageRect","cropRect","cx","cy","imageWidth","imageHeight","rotatedCropSize","hor","ver","tl","tr","bl","getRotatedRectSize","createBitmapView","_","image","getContext","drawImage","createClipView","flip","crop","horizontal","vertical","createImageCanvasWrapper","transparencyIndicator","stage","translation","cropAspectRatio","stageZoomFactor","container","getCenteredCropRect","zoom","imageView","definitions","appendDefinitions","defs","cssText","hasNavigator","navigator","isEdgeOrIE","documentMode","userAgent","BitmapWorker","createImageBitmap","bitmap","1","2","3","4","5","6","7","8","fixImageOrientation","ctx","transform","isBitmap","calculateAverageColor","scalar","canvas","ceil","getImageData","r","g","averageColor","createImageWrapperView","ImageView","clip","imageAspectRatio","containerWidth","previewWidth","fixedPreviewHeight","minPreviewHeight","maxPreviewHeight","panelAspectRatio","clipHeight","clipWidth","createImageView","pushImage","preview","restoreOverlay","overlayShadow","overlayError","overlaySuccess","didThrowError","imageViewBin","DID_IMAGE_PREVIEW_DRAW","DID_IMAGE_PREVIEW_CONTAINER_CREATE","fileURL","loadPreviewFallback","crossOrigin","previewImageLoaded","exif","pixelDensityFactor","devicePixelRatio","previewImageRatio","createPreviewImage","close","naturalWidth","naturalHeight","getImageSize","imageBitmap","shiftImage","updateImage","_ref12","viewsToRemove","removeImageView","plugin$1","fpAPI","imagePreviewView","viewAPI","scaleItemBackground","imagePreview","shouldForcePreviewSize","previewAspectRatio","isPreviewableImage","supportsCreateImageBitmap","maxPreviewFileSize","DID_IMAGE_PREVIEW_CALCULATE_SIZE","allowImagePreview","imagePreviewHeight","imagePreviewMinHeight","imagePreviewMaxHeight","imagePreviewMaxFileSize","imagePreviewTransparencyIndicator","imagePreviewCalculateAverageImageColor","sizeMax","sizeMin","filesize","totalSizeMax","currentTotalSize","allowFileSizeValidation","maxFileSize","minFileSize","maxTotalFileSize","labelMinFileSizeExceeded","labelMinFileSize","labelMaxFileSizeExceeded","labelMaxFileSize","labelMaxTotalFileSizeExceeded","labelMaxTotalFileSize","isValidMimeType","acceptedTypes","userInputType","acceptedType","wildcard","mimeTypeGroup","wildcardGroup","mimeTypeMatchesWildCard","validateFile","typeDetector","getItemType","detectedType","validationResult","handleRejection","acceptedFileTypesMapped","acceptedFileType","allTypes","allButLastType","lastType","allowFileTypeValidation","labelFileTypeNotAllowed","fileValidateTypeLabelExpectedTypes","fileValidateTypeLabelExpectedTypesMap","fileValidateTypeDetectType"],"mappings":"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","file":"static/js/12.93328cbb.chunk.js","sourcesContent":["function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport DropDown from '../dropdown/dropdown';\nimport Icon from '../icon';\nimport { ConfigConsumer } from '../config-provider';\n\nvar BreadcrumbItem =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BreadcrumbItem, _React$Component);\n\n  function BreadcrumbItem() {\n    var _this;\n\n    _classCallCheck(this, BreadcrumbItem);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BreadcrumbItem).apply(this, arguments));\n\n    _this.renderBreadcrumbItem = function (_ref) {\n      var getPrefixCls = _ref.getPrefixCls;\n\n      var _a = _this.props,\n          customizePrefixCls = _a.prefixCls,\n          separator = _a.separator,\n          children = _a.children,\n          overlay = _a.overlay,\n          restProps = __rest(_a, [\"prefixCls\", \"separator\", \"children\", \"overlay\"]);\n\n      var prefixCls = getPrefixCls('breadcrumb', customizePrefixCls);\n      var link;\n\n      if ('href' in _this.props) {\n        link = React.createElement(\"a\", _extends({\n          className: \"\".concat(prefixCls, \"-link\")\n        }, restProps), children);\n      } else {\n        link = React.createElement(\"span\", _extends({\n          className: \"\".concat(prefixCls, \"-link\")\n        }, restProps), children);\n      } // wrap to dropDown\n\n\n      link = _this.renderBreadcrumbNode(link, prefixCls);\n\n      if (children) {\n        return React.createElement(\"span\", null, link, React.createElement(\"span\", {\n          className: \"\".concat(prefixCls, \"-separator\")\n        }, separator));\n      }\n\n      return null;\n    };\n    /**\n     * if overlay is have\n     * Wrap a DropDown\n     */\n\n\n    _this.renderBreadcrumbNode = function (breadcrumbItem, prefixCls) {\n      var overlay = _this.props.overlay;\n\n      if (overlay) {\n        return React.createElement(DropDown, {\n          overlay: overlay,\n          placement: \"bottomCenter\"\n        }, React.createElement(\"a\", {\n          className: \"\".concat(prefixCls, \"-overlay-link\")\n        }, breadcrumbItem, React.createElement(Icon, {\n          type: \"down\"\n        })));\n      }\n\n      return breadcrumbItem;\n    };\n\n    return _this;\n  }\n\n  _createClass(BreadcrumbItem, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ConfigConsumer, null, this.renderBreadcrumbItem);\n    }\n  }]);\n\n  return BreadcrumbItem;\n}(React.Component);\n\nexport { BreadcrumbItem as default };\nBreadcrumbItem.__ANT_BREADCRUMB_ITEM = true;\nBreadcrumbItem.defaultProps = {\n  separator: '/'\n};\nBreadcrumbItem.propTypes = {\n  prefixCls: PropTypes.string,\n  separator: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  href: PropTypes.string\n};","function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { cloneElement } from 'react';\nimport classNames from 'classnames';\nimport BreadcrumbItem from './BreadcrumbItem';\nimport Menu from '../menu';\nimport { ConfigConsumer } from '../config-provider';\nimport warning from '../_util/warning';\n\nfunction getBreadcrumbName(route, params) {\n  if (!route.breadcrumbName) {\n    return null;\n  }\n\n  var paramsKeys = Object.keys(params).join('|');\n  var name = route.breadcrumbName.replace(new RegExp(\":(\".concat(paramsKeys, \")\"), 'g'), function (replacement, key) {\n    return params[key] || replacement;\n  });\n  return name;\n}\n\nfunction defaultItemRender(route, params, routes, paths) {\n  var isLastItem = routes.indexOf(route) === routes.length - 1;\n  var name = getBreadcrumbName(route, params);\n  return isLastItem ? React.createElement(\"span\", null, name) : React.createElement(\"a\", {\n    href: \"#/\".concat(paths.join('/'))\n  }, name);\n}\n\nvar Breadcrumb =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Breadcrumb, _React$Component);\n\n  function Breadcrumb() {\n    var _this;\n\n    _classCallCheck(this, Breadcrumb);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Breadcrumb).apply(this, arguments));\n\n    _this.genForRoutes = function (_ref) {\n      var _ref$routes = _ref.routes,\n          routes = _ref$routes === void 0 ? [] : _ref$routes,\n          _ref$params = _ref.params,\n          params = _ref$params === void 0 ? {} : _ref$params,\n          separator = _ref.separator,\n          _ref$itemRender = _ref.itemRender,\n          itemRender = _ref$itemRender === void 0 ? defaultItemRender : _ref$itemRender;\n      var paths = [];\n      return routes.map(function (route) {\n        route.path = route.path || '';\n        var path = route.path.replace(/^\\//, '');\n        Object.keys(params).forEach(function (key) {\n          path = path.replace(\":\".concat(key), params[key]);\n        });\n\n        if (path) {\n          paths.push(path);\n        } // generated overlay by route.children\n\n\n        var overlay = null;\n\n        if (route.children && route.children.length) {\n          overlay = React.createElement(Menu, null, route.children.map(function (child) {\n            return React.createElement(Menu.Item, {\n              key: child.breadcrumbName || child.path\n            }, itemRender(child, params, routes, paths));\n          }));\n        }\n\n        return React.createElement(BreadcrumbItem, {\n          overlay: overlay,\n          separator: separator,\n          key: route.breadcrumbName || path\n        }, itemRender(route, params, routes, paths));\n      });\n    };\n\n    _this.renderBreadcrumb = function (_ref2) {\n      var getPrefixCls = _ref2.getPrefixCls;\n      var crumbs;\n      var _this$props = _this.props,\n          customizePrefixCls = _this$props.prefixCls,\n          separator = _this$props.separator,\n          style = _this$props.style,\n          className = _this$props.className,\n          routes = _this$props.routes,\n          children = _this$props.children;\n      var prefixCls = getPrefixCls('breadcrumb', customizePrefixCls);\n\n      if (routes && routes.length > 0) {\n        // generated by route\n        crumbs = _this.genForRoutes(_this.props);\n      } else if (children) {\n        crumbs = React.Children.map(children, function (element, index) {\n          if (!element) {\n            return element;\n          }\n\n          warning(element.type && element.type.__ANT_BREADCRUMB_ITEM, 'Breadcrumb', \"Only accepts Breadcrumb.Item as it's children\");\n          return cloneElement(element, {\n            separator: separator,\n            key: index\n          });\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: classNames(className, prefixCls),\n        style: style\n      }, crumbs);\n    };\n\n    return _this;\n  }\n\n  _createClass(Breadcrumb, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var props = this.props;\n      warning(!('linkRender' in props || 'nameRender' in props), 'Breadcrumb', '`linkRender` and `nameRender` are removed, please use `itemRender` instead, ' + 'see: https://u.ant.design/item-render.');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ConfigConsumer, null, this.renderBreadcrumb);\n    }\n  }]);\n\n  return Breadcrumb;\n}(React.Component);\n\nexport { Breadcrumb as default };\nBreadcrumb.defaultProps = {\n  separator: '/'\n};\nBreadcrumb.propTypes = {\n  prefixCls: PropTypes.string,\n  separator: PropTypes.node,\n  routes: PropTypes.array,\n  params: PropTypes.object\n};","import Breadcrumb from './Breadcrumb';\nimport BreadcrumbItem from './BreadcrumbItem';\nBreadcrumb.Item = BreadcrumbItem;\nexport default Breadcrumb;","/*!\n * react-filepond v5.0.0\n * A handy FilePond adapter component for React\n * \n * Copyright (c) 2018 PQINA\n * https://pqina.nl/filepond\n * \n * Licensed under the MIT license.\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.File = exports.FilePond = exports.registerPlugin = undefined;\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _filepond = require('filepond');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n} // Import required methods and styles from the FilePond module, should not need anything else\n// We need to be able to call the registerPlugin method directly so we can add plugins\n\n\nexports.registerPlugin = _filepond.registerPlugin; // Do this once\n\nvar isSupported = (0, _filepond.supported)(); // returns file sources from the <File/> child objects\n\nvar getFilesFromChildren = function getFilesFromChildren(children) {\n  return children ? _react2.default.Children.map(children, function (child) {\n    var props = child.props; // new mapping\n\n    if (props.src) {\n      var options = {};\n\n      if (props.origin) {\n        options.type = props.origin;\n      }\n\n      if (props.name) {\n        options.file = {\n          name: props.name,\n          size: props.size,\n          type: props.type\n        };\n      }\n\n      if (props.metadata) {\n        options.metadata = props.metadata;\n      }\n\n      return {\n        source: props.src,\n        options: options\n      };\n    } // deprecated mapping\n\n\n    if (props.source && props.type) {\n      return {\n        source: props.source,\n        options: {\n          type: props.type\n        }\n      };\n    }\n\n    return props.source;\n  }) : [];\n}; // filtered methods\n\n\nvar filteredMethods = ['setOptions', 'on', 'off', 'onOnce', 'appendTo', 'insertAfter', 'insertBefore', 'isAttachedTo', 'replaceElement', 'restoreElement', 'destroy']; // The React <FilePond/> wrapper\n\nvar FilePond = exports.FilePond = function (_React$Component) {\n  _inherits(FilePond, _React$Component);\n\n  function FilePond() {\n    _classCallCheck(this, FilePond);\n\n    return _possibleConstructorReturn(this, (FilePond.__proto__ || Object.getPrototypeOf(FilePond)).apply(this, arguments));\n  }\n\n  _createClass(FilePond, [{\n    key: 'componentDidMount',\n    // Will setup FilePond instance when mounted\n    value: function componentDidMount() {\n      var _this2 = this; // exit here if not supported\n\n\n      if (!isSupported) {\n        return;\n      } // Create our pond\n\n\n      this._pond = (0, _filepond.create)(this._element, Object.assign({}, this.props, {\n        files: getFilesFromChildren(this.props.children)\n      })); // Reference pond methods to FilePond component instance\n\n      Object.keys(this._pond).filter(function (key) {\n        return !filteredMethods.includes(key);\n      }).forEach(function (key) {\n        _this2[key] = _this2._pond[key];\n      });\n    } // Will clean up FilePond instance when unmounted\n\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      // exit when no pond defined\n      if (!this._pond) {\n        return;\n      }\n\n      this._pond.destroy();\n    } // Something changed\n\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps) {\n      // exit when no pond defined\n      if (!this._pond) {\n        return;\n      }\n\n      var options = Object.assign({}, this.props); // test if file list has changed\n\n      var previousFiles = getFilesFromChildren(prevProps.children);\n      var currentFiles = getFilesFromChildren(this.props.children);\n\n      if (JSON.stringify(previousFiles) !== JSON.stringify(currentFiles)) {\n        options.files = currentFiles;\n      }\n\n      this._pond.setOptions(options);\n    } // Renders basic element hook for FilePond to attach to\n\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this3 = this;\n\n      var _props = this.props,\n          id = _props.id,\n          name = _props.name,\n          className = _props.className,\n          allowMultiple = _props.allowMultiple,\n          required = _props.required,\n          captureMethod = _props.captureMethod,\n          acceptedFileTypes = _props.acceptedFileTypes;\n      return (0, _react.createElement)('div', {\n        className: 'filepond--wrapper'\n      }, (0, _react.createElement)('input', {\n        type: 'file',\n        name: name,\n        id: id,\n        accept: acceptedFileTypes,\n        multiple: allowMultiple,\n        required: required,\n        className: className,\n        capture: captureMethod,\n        ref: function ref(element) {\n          return _this3._element = element;\n        }\n      }));\n    }\n  }]);\n\n  return FilePond;\n}(_react2.default.Component); // <File/>, needs to be further extended with prop types\n\n\nvar File = exports.File = function (_React$Component2) {\n  _inherits(File, _React$Component2);\n\n  function File() {\n    _classCallCheck(this, File);\n\n    return _possibleConstructorReturn(this, (File.__proto__ || Object.getPrototypeOf(File)).apply(this, arguments));\n  }\n\n  return File;\n}(_react2.default.Component);","/*\n * FilePond 3.9.0\n * Licensed under MIT, https://opensource.org/licenses/MIT\n * Please visit https://pqina.nl/filepond for details.\n */\n\n/* eslint-disable */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : factory(global.FilePond = {});\n})(this, function (exports) {\n  'use strict';\n\n  var isNode = function isNode(value) {\n    return value instanceof HTMLElement;\n  };\n\n  var createStore = function createStore(initialState) {\n    var queries = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    var actions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : []; // internal state\n\n    var state = Object.assign({}, initialState); // contains all actions for next frame, is clear when actions are requested\n\n    var actionQueue = [];\n    var dispatchQueue = []; // returns a duplicate of the current state\n\n    var getState = function getState() {\n      return Object.assign({}, state);\n    }; // returns a duplicate of the actions array and clears the actions array\n\n\n    var processActionQueue = function processActionQueue() {\n      // create copy of actions queue\n      var queue = [].concat(actionQueue); // clear actions queue (we don't want no double actions)\n\n      actionQueue.length = 0;\n      return queue;\n    }; // processes actions that might block the main UI thread\n\n\n    var processDispatchQueue = function processDispatchQueue() {\n      // create copy of actions queue\n      var queue = [].concat(dispatchQueue); // clear actions queue (we don't want no double actions)\n\n      dispatchQueue.length = 0; // now dispatch these actions\n\n      queue.forEach(function (_ref) {\n        var type = _ref.type,\n            data = _ref.data;\n        dispatch(type, data);\n      });\n    }; // adds a new action, calls its handler and\n\n\n    var dispatch = function dispatch(type, data, isBlocking) {\n      // is blocking action\n      if (isBlocking) {\n        dispatchQueue.push({\n          type: type,\n          data: data\n        });\n        return;\n      } // if this action has a handler, handle the action\n\n\n      if (actionHandlers[type]) {\n        actionHandlers[type](data);\n      } // now add action\n\n\n      actionQueue.push({\n        type: type,\n        data: data\n      });\n    };\n\n    var query = function query(str) {\n      var _queryHandles;\n\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      return queryHandles[str] ? (_queryHandles = queryHandles)[str].apply(_queryHandles, args) : null;\n    };\n\n    var api = {\n      getState: getState,\n      processActionQueue: processActionQueue,\n      processDispatchQueue: processDispatchQueue,\n      dispatch: dispatch,\n      query: query\n    };\n    var queryHandles = {};\n    queries.forEach(function (query) {\n      queryHandles = Object.assign({}, query(state), queryHandles);\n    });\n    var actionHandlers = {};\n    actions.forEach(function (action) {\n      actionHandlers = Object.assign({}, action(dispatch, query, state), actionHandlers);\n    });\n    return api;\n  };\n\n  var defineProperty = function defineProperty(obj, property, definition) {\n    if (typeof definition === 'function') {\n      obj[property] = definition;\n      return;\n    }\n\n    Object.defineProperty(obj, property, Object.assign({}, definition));\n  };\n\n  var forin = function forin(obj, cb) {\n    for (var key in obj) {\n      if (!obj.hasOwnProperty(key)) {\n        continue;\n      }\n\n      cb(key, obj[key]);\n    }\n  };\n\n  var createObject = function createObject(definition) {\n    var obj = {};\n    forin(definition, function (property) {\n      defineProperty(obj, property, definition[property]);\n    });\n    return obj;\n  };\n\n  var attr = function attr(node, name) {\n    var value = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n    if (value === null) {\n      return node.getAttribute(name) || node.hasAttribute(name);\n    }\n\n    node.setAttribute(name, value);\n  };\n\n  var _typeof = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n  };\n\n  var slicedToArray = function () {\n    function sliceIterator(arr, i) {\n      var _arr = [];\n      var _n = true;\n      var _d = false;\n      var _e = undefined;\n\n      try {\n        for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n          _arr.push(_s.value);\n\n          if (i && _arr.length === i) break;\n        }\n      } catch (err) {\n        _d = true;\n        _e = err;\n      } finally {\n        try {\n          if (!_n && _i['return']) _i['return']();\n        } finally {\n          if (_d) throw _e;\n        }\n      }\n\n      return _arr;\n    }\n\n    return function (arr, i) {\n      if (Array.isArray(arr)) {\n        return arr;\n      } else if (Symbol.iterator in Object(arr)) {\n        return sliceIterator(arr, i);\n      } else {\n        throw new TypeError('Invalid attempt to destructure non-iterable instance');\n      }\n    };\n  }();\n\n  var toConsumableArray = function toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n        arr2[i] = arr[i];\n      }\n\n      return arr2;\n    } else {\n      return Array.from(arr);\n    }\n  };\n\n  var ns = 'http://www.w3.org/2000/svg';\n  var svgElements = ['svg', 'path']; // only svg elements used\n\n  var isSVGElement = function isSVGElement(tag) {\n    return svgElements.includes(tag);\n  };\n\n  var createElement = function createElement(tag, className) {\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    if ((typeof className === 'undefined' ? 'undefined' : _typeof(className)) === 'object') {\n      attributes = className;\n      className = null;\n    }\n\n    var element = isSVGElement(tag) ? document.createElementNS(ns, tag) : document.createElement(tag);\n\n    if (className) {\n      if (isSVGElement(tag)) {\n        attr(element, 'class', className);\n      } else {\n        element.className = className;\n      }\n    }\n\n    forin(attributes, function (name, value) {\n      attr(element, name, value);\n    });\n    return element;\n  };\n\n  var appendChild = function appendChild(parent) {\n    return function (child, index) {\n      if (typeof index !== 'undefined' && parent.children[index]) {\n        parent.insertBefore(child, parent.children[index]);\n      } else {\n        parent.appendChild(child);\n      }\n    };\n  };\n\n  var appendChildView = function appendChildView(parent, childViews) {\n    return function (view, index) {\n      if (typeof index !== 'undefined') {\n        childViews.splice(index, 0, view);\n      } else {\n        childViews.push(view);\n      }\n\n      return view;\n    };\n  };\n\n  var removeChildView = function removeChildView(parent, childViews) {\n    return function (view) {\n      // remove from child views\n      childViews.splice(childViews.indexOf(view), 1); // remove the element\n\n      if (view.element.parentNode) {\n        parent.removeChild(view.element);\n      }\n\n      return view;\n    };\n  };\n\n  var getViewRect = function getViewRect(elementRect, childViews, offset, scale) {\n    var left = offset[0] || elementRect.left;\n    var top = offset[1] || elementRect.top;\n    var right = left + elementRect.width;\n    var bottom = top + elementRect.height * (scale[1] || 1);\n    var rect = {\n      // the rectangle of the element itself\n      element: Object.assign({}, elementRect),\n      // the rectangle of the element expanded to contain its children, does not include any margins\n      inner: {\n        left: elementRect.left,\n        top: elementRect.top,\n        right: elementRect.right,\n        bottom: elementRect.bottom\n      },\n      // the rectangle of the element expanded to contain its children including own margin and child margins\n      // margins will be added after we've recalculated the size\n      outer: {\n        left: left,\n        top: top,\n        right: right,\n        bottom: bottom\n      }\n    }; // expand rect to fit all child rectangles\n\n    childViews.filter(function (childView) {\n      return !childView.isRectIgnored();\n    }).map(function (childView) {\n      return childView.rect;\n    }).forEach(function (childViewRect) {\n      expandRect(rect.inner, Object.assign({}, childViewRect.inner));\n      expandRect(rect.outer, Object.assign({}, childViewRect.outer));\n    }); // calculate inner width and height\n\n    calculateRectSize(rect.inner); // append additional margin (top and left margins are included in top and left automatically)\n\n    rect.outer.bottom += rect.element.marginBottom;\n    rect.outer.right += rect.element.marginRight; // calculate outer width and height\n\n    calculateRectSize(rect.outer);\n    return rect;\n  };\n\n  var expandRect = function expandRect(parent, child) {\n    // adjust for parent offset\n    child.top += parent.top;\n    child.right += parent.left;\n    child.bottom += parent.top;\n    child.left += parent.left;\n\n    if (child.bottom > parent.bottom) {\n      parent.bottom = child.bottom;\n    }\n\n    if (child.right > parent.right) {\n      parent.right = child.right;\n    }\n  };\n\n  var calculateRectSize = function calculateRectSize(rect) {\n    rect.width = rect.right - rect.left;\n    rect.height = rect.bottom - rect.top;\n  };\n\n  var isNumber = function isNumber(value) {\n    return typeof value === 'number';\n  };\n  /**\n   * Determines if position is at destination\n   * @param position\n   * @param destination\n   * @param velocity\n   * @param errorMargin\n   * @returns {boolean}\n   */\n\n\n  var thereYet = function thereYet(position, destination, velocity) {\n    var errorMargin = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0.001;\n    return Math.abs(position - destination) < errorMargin && Math.abs(velocity) < errorMargin;\n  };\n  /**\n   * Spring animation\n   */\n\n\n  var spring = // default options\n  function spring() // method definition\n  {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$stiffness = _ref.stiffness,\n        stiffness = _ref$stiffness === undefined ? 0.5 : _ref$stiffness,\n        _ref$damping = _ref.damping,\n        damping = _ref$damping === undefined ? 0.75 : _ref$damping,\n        _ref$mass = _ref.mass,\n        mass = _ref$mass === undefined ? 10 : _ref$mass;\n\n    var target = null;\n    var position = null;\n    var velocity = 0;\n    var resting = false; // updates spring state\n\n    var interpolate = function interpolate() {\n      // in rest, don't animate\n      if (resting) {\n        return;\n      } // need at least a target or position to do springy things\n\n\n      if (!(isNumber(target) && isNumber(position))) {\n        resting = true;\n        velocity = 0;\n        return;\n      } // calculate spring force\n\n\n      var f = -(position - target) * stiffness; // update velocity by adding force based on mass\n\n      velocity += f / mass; // update position by adding velocity\n\n      position += velocity; // slow down based on amount of damping\n\n      velocity *= damping; // we've arrived if we're near target and our velocity is near zero\n\n      if (thereYet(position, target, velocity)) {\n        position = target;\n        velocity = 0;\n        resting = true; // we done\n\n        api.onupdate(position);\n        api.oncomplete(position);\n      } else {\n        // progress update\n        api.onupdate(position);\n      }\n    };\n    /**\n     * Set new target value\n     * @param value\n     */\n\n\n    var setTarget = function setTarget(value) {\n      // if currently has no position, set target and position to this value\n      if (isNumber(value) && !isNumber(position)) {\n        position = value;\n      } // next target value will not be animated to\n\n\n      if (target === null) {\n        target = value;\n        position = value;\n      } // let start moving to target\n\n\n      target = value; // already at target\n\n      if (position === target || typeof target === 'undefined') {\n        // now resting as target is current position, stop moving\n        resting = true;\n        velocity = 0; // done!\n\n        api.onupdate(position);\n        api.oncomplete(position);\n        return;\n      }\n\n      resting = false;\n    }; // need 'api' to call onupdate callback\n\n\n    var api = createObject({\n      interpolate: interpolate,\n      target: {\n        set: setTarget,\n        get: function get() {\n          return target;\n        }\n      },\n      resting: {\n        get: function get() {\n          return resting;\n        }\n      },\n      onupdate: function onupdate(value) {},\n      oncomplete: function oncomplete(value) {}\n    });\n    return api;\n  };\n\n  var easeInOutQuad = function easeInOutQuad(t) {\n    return t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t;\n  };\n\n  var tween = // default values\n  function tween() // method definition\n  {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$duration = _ref.duration,\n        duration = _ref$duration === undefined ? 500 : _ref$duration,\n        _ref$easing = _ref.easing,\n        easing = _ref$easing === undefined ? easeInOutQuad : _ref$easing,\n        _ref$delay = _ref.delay,\n        delay = _ref$delay === undefined ? 0 : _ref$delay;\n\n    var start = null;\n    var t = void 0;\n    var p = void 0;\n    var resting = true;\n    var reverse = false;\n    var target = null;\n\n    var interpolate = function interpolate(ts) {\n      if (resting || target === null) {\n        return;\n      }\n\n      if (start === null) {\n        start = ts;\n      }\n\n      if (ts - start < delay) {\n        return;\n      }\n\n      t = ts - start - delay;\n\n      if (t < duration) {\n        p = t / duration;\n        api.onupdate((t >= 0 ? easing(reverse ? 1 - p : p) : 0) * target);\n      } else {\n        t = 1;\n        p = reverse ? 0 : 1;\n        api.onupdate(p * target);\n        api.oncomplete(p * target);\n        resting = true;\n      }\n    }; // need 'api' to call onupdate callback\n\n\n    var api = createObject({\n      interpolate: interpolate,\n      target: {\n        get: function get() {\n          return reverse ? 0 : target;\n        },\n        set: function set(value) {\n          // is initial value\n          if (target === null) {\n            target = value;\n            api.onupdate(value);\n            api.oncomplete(value);\n            return;\n          } // want to tween to a smaller value and have a current value\n\n\n          if (value < target) {\n            target = 1;\n            reverse = true;\n          } else {\n            // not tweening to a smaller value\n            reverse = false;\n            target = value;\n          } // let's go!\n\n\n          resting = false;\n          start = null;\n        }\n      },\n      resting: {\n        get: function get() {\n          return resting;\n        }\n      },\n      onupdate: function onupdate(value) {},\n      oncomplete: function oncomplete(value) {}\n    });\n    return api;\n  };\n\n  var animator = {\n    spring: spring,\n    tween: tween\n  };\n  /*\n  { type: 'spring', stiffness: .5, damping: .75, mass: 10 };\n  { translation: { type: 'spring', ... }, ... }\n  { translation: { x: { type: 'spring', ... } } }\n  */\n\n  var createAnimator = function createAnimator(definition, category, property) {\n    // default is single definition\n    // we check if transform is set, if so, we check if property is set\n    var def = definition[category] && _typeof(definition[category][property]) === 'object' ? definition[category][property] : definition[category] || definition;\n    var type = typeof def === 'string' ? def : def.type;\n    var props = (typeof def === 'undefined' ? 'undefined' : _typeof(def)) === 'object' ? Object.assign({}, def) : {};\n    return animator[type] ? animator[type](props) : null;\n  };\n\n  var addGetSet = function addGetSet(keys, obj, props) {\n    var overwrite = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    obj = Array.isArray(obj) ? obj : [obj];\n    obj.forEach(function (o) {\n      keys.forEach(function (key) {\n        var name = key;\n\n        var getter = function getter() {\n          return props[key];\n        };\n\n        var setter = function setter(value) {\n          return props[key] = value;\n        };\n\n        if ((typeof key === 'undefined' ? 'undefined' : _typeof(key)) === 'object') {\n          name = key.key;\n          getter = key.getter || getter;\n          setter = key.setter || setter;\n        }\n\n        if (o[name] && !overwrite) {\n          return;\n        }\n\n        o[name] = {\n          get: getter,\n          set: setter\n        };\n      });\n    });\n  };\n\n  var isDefined = function isDefined(value) {\n    return value != null;\n  }; // add to state,\n  // add getters and setters to internal and external api (if not set)\n  // setup animators\n\n\n  var animations = function animations(_ref) {\n    var mixinConfig = _ref.mixinConfig,\n        viewProps = _ref.viewProps,\n        viewInternalAPI = _ref.viewInternalAPI,\n        viewExternalAPI = _ref.viewExternalAPI; // initial properties\n\n    var initialProps = Object.assign({}, viewProps); // list of all active animations\n\n    var animations = []; // setup animators\n\n    forin(mixinConfig, function (property, animation) {\n      var animator = createAnimator(animation);\n\n      if (!animator) {\n        return;\n      } // when the animator updates, update the view state value\n\n\n      animator.onupdate = function (value) {\n        viewProps[property] = value;\n      }; // set animator target\n\n\n      animator.target = initialProps[property]; // when value is set, set the animator target value\n\n      var prop = {\n        key: property,\n        setter: function setter(value) {\n          // if already at target, we done!\n          if (animator.target === value) {\n            return;\n          }\n\n          animator.target = value;\n        },\n        getter: function getter() {\n          return viewProps[property];\n        }\n      }; // add getters and setters\n\n      addGetSet([prop], [viewInternalAPI, viewExternalAPI], viewProps, true); // add it to the list for easy updating from the _write method\n\n      animations.push(animator);\n    }); // expose internal write api\n\n    return {\n      write: function write(ts) {\n        var resting = true;\n        animations.forEach(function (animation) {\n          if (!animation.resting) {\n            resting = false;\n          }\n\n          animation.interpolate(ts);\n        });\n        return resting;\n      },\n      destroy: function destroy() {}\n    };\n  };\n\n  var addEvent = function addEvent(element) {\n    return function (type, fn) {\n      element.addEventListener(type, fn);\n    };\n  };\n\n  var removeEvent = function removeEvent(element) {\n    return function (type, fn) {\n      element.removeEventListener(type, fn);\n    };\n  }; // mixin\n\n\n  var listeners = function listeners(_ref) {\n    var mixinConfig = _ref.mixinConfig,\n        viewProps = _ref.viewProps,\n        viewInternalAPI = _ref.viewInternalAPI,\n        viewExternalAPI = _ref.viewExternalAPI,\n        viewState = _ref.viewState,\n        view = _ref.view;\n    var events = [];\n    var add = addEvent(view.element);\n    var remove = removeEvent(view.element);\n\n    viewExternalAPI.on = function (type, fn) {\n      events.push({\n        type: type,\n        fn: fn\n      });\n      add(type, fn);\n    };\n\n    viewExternalAPI.off = function (type, fn) {\n      events.splice(events.findIndex(function (event) {\n        return event.type === type && event.fn === fn;\n      }), 1);\n      remove(type, fn);\n    };\n\n    return {\n      write: function write() {\n        // not busy\n        return true;\n      },\n      destroy: function destroy() {\n        events.forEach(function (event) {\n          remove(event.type, event.fn);\n        });\n      }\n    };\n  }; // add to external api and link to props\n\n\n  var apis = function apis(_ref) {\n    var mixinConfig = _ref.mixinConfig,\n        viewProps = _ref.viewProps,\n        viewExternalAPI = _ref.viewExternalAPI;\n    addGetSet(mixinConfig, viewExternalAPI, viewProps);\n  }; // add to state,\n  // add getters and setters to internal and external api (if not set)\n  // set initial state based on props in viewProps\n  // apply as transforms each frame\n\n\n  var defaults$1 = {\n    opacity: 1,\n    scaleX: 1,\n    scaleY: 1,\n    translateX: 0,\n    translateY: 0,\n    rotateX: 0,\n    rotateY: 0,\n    rotateZ: 0,\n    originX: 0,\n    originY: 0\n  };\n\n  var styles = function styles(_ref) {\n    var mixinConfig = _ref.mixinConfig,\n        viewProps = _ref.viewProps,\n        viewInternalAPI = _ref.viewInternalAPI,\n        viewExternalAPI = _ref.viewExternalAPI,\n        view = _ref.view; // initial props\n\n    var initialProps = Object.assign({}, viewProps); // current props\n\n    var currentProps = {}; // we will add those properties to the external API and link them to the viewState\n\n    addGetSet(mixinConfig, [viewInternalAPI, viewExternalAPI], viewProps); // override rect on internal and external rect getter so it takes in account transforms\n\n    var getOffset = function getOffset() {\n      return [viewProps['translateX'] || 0, viewProps['translateY'] || 0];\n    };\n\n    var getScale = function getScale() {\n      return [viewProps['scaleX'] || 0, viewProps['scaleY'] || 0];\n    };\n\n    var getRect = function getRect() {\n      return view.rect ? getViewRect(view.rect, view.childViews, getOffset(), getScale()) : null;\n    };\n\n    viewInternalAPI.rect = {\n      get: getRect\n    };\n    viewExternalAPI.rect = {\n      get: getRect\n    }; // apply view props\n\n    mixinConfig.forEach(function (key) {\n      viewProps[key] = typeof initialProps[key] === 'undefined' ? defaults$1[key] : initialProps[key];\n    }); // expose api\n\n    return {\n      write: function write() {\n        // see if props have changed\n        if (!propsHaveChanged(currentProps, viewProps)) {\n          return;\n        } // moves element to correct position on screen\n\n\n        applyStyles(view.element, viewProps); // store new transforms\n\n        Object.assign(currentProps, Object.assign({}, viewProps)); // no longer busy\n\n        return true;\n      },\n      destroy: function destroy() {}\n    };\n  };\n\n  var propsHaveChanged = function propsHaveChanged(currentProps, newProps) {\n    // different amount of keys\n    if (Object.keys(currentProps).length !== Object.keys(newProps).length) {\n      return true;\n    } // lets analyze the individual props\n\n\n    for (var prop in newProps) {\n      if (newProps[prop] !== currentProps[prop]) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  var applyStyles = function applyStyles(element, _ref2) {\n    var opacity = _ref2.opacity,\n        perspective = _ref2.perspective,\n        translateX = _ref2.translateX,\n        translateY = _ref2.translateY,\n        scaleX = _ref2.scaleX,\n        scaleY = _ref2.scaleY,\n        rotateX = _ref2.rotateX,\n        rotateY = _ref2.rotateY,\n        rotateZ = _ref2.rotateZ,\n        originX = _ref2.originX,\n        originY = _ref2.originY,\n        width = _ref2.width,\n        height = _ref2.height;\n    var transforms = '';\n    var styles = ''; // handle transform origin\n\n    if (isDefined(originX) || isDefined(originY)) {\n      styles += 'transform-origin: ' + (originX || 0) + 'px ' + (originY || 0) + 'px;';\n    } // transform order is relevant\n    // 0. perspective\n\n\n    if (isDefined(perspective)) {\n      transforms += 'perspective(' + perspective + 'px) ';\n    } // 1. translate\n\n\n    if (isDefined(translateX) || isDefined(translateY)) {\n      transforms += 'translate3d(' + (translateX || 0) + 'px, ' + (translateY || 0) + 'px, 0) ';\n    } // 2. scale\n\n\n    if (isDefined(scaleX) || isDefined(scaleY)) {\n      transforms += 'scale3d(' + (isDefined(scaleX) ? scaleX : 1) + ', ' + (isDefined(scaleY) ? scaleY : 1) + ', 1) ';\n    } // 3. rotate\n\n\n    if (isDefined(rotateZ)) {\n      transforms += 'rotateZ(' + rotateZ + 'rad) ';\n    }\n\n    if (isDefined(rotateX)) {\n      transforms += 'rotateX(' + rotateX + 'rad) ';\n    }\n\n    if (isDefined(rotateY)) {\n      transforms += 'rotateY(' + rotateY + 'rad) ';\n    } // add transforms\n\n\n    if (transforms.length) {\n      styles += 'transform:' + transforms + ';';\n    } // add opacity\n\n\n    if (isDefined(opacity)) {\n      styles += 'opacity:' + opacity + ';'; // if we reach zero, we make the element inaccessible\n\n      if (opacity === 0) {\n        styles += 'visibility:hidden;';\n      } // if we're below 100% opacity this element can't be clicked\n\n\n      if (opacity < 1) {\n        styles += 'pointer-events:none;';\n      }\n    } // add height\n\n\n    if (isDefined(height)) {\n      styles += 'height:' + height + 'px;';\n    } // add width\n\n\n    if (isDefined(width)) {\n      styles += 'width:' + width + 'px;';\n    } // apply styles\n\n\n    var elementCurrentStyle = element.elementCurrentStyle || ''; // if new styles does not match current styles, lets update!\n\n    if (styles.length !== elementCurrentStyle.length || styles !== elementCurrentStyle) {\n      element.setAttribute('style', styles); // store current styles so we can compare them to new styles later on\n      // _not_ getting the style attribute is faster\n\n      element.elementCurrentStyle = styles;\n    }\n  };\n\n  var Mixins = {\n    styles: styles,\n    listeners: listeners,\n    animations: animations,\n    apis: apis\n  };\n\n  var updateRect = function updateRect() {\n    var rect = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var element = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var style = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    if (!element.layoutCalculated) {\n      rect.paddingTop = parseInt(style.paddingTop, 10) || 0;\n      rect.marginTop = parseInt(style.marginTop, 10) || 0;\n      rect.marginRight = parseInt(style.marginRight, 10) || 0;\n      rect.marginBottom = parseInt(style.marginBottom, 10) || 0;\n      rect.marginLeft = parseInt(style.marginLeft, 10) || 0;\n      element.layoutCalculated = true;\n    }\n\n    rect.left = element.offsetLeft || 0;\n    rect.top = element.offsetTop || 0;\n    rect.width = element.offsetWidth || 0;\n    rect.height = element.offsetHeight || 0;\n    rect.right = rect.left + rect.width;\n    rect.bottom = rect.top + rect.height;\n    rect.scrollTop = element.scrollTop;\n    rect.hidden = element.offsetParent === null;\n    return rect;\n  };\n\n  var createView = // default view definition\n  function createView() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$tag = _ref.tag,\n        tag = _ref$tag === undefined ? 'div' : _ref$tag,\n        _ref$name = _ref.name,\n        name = _ref$name === undefined ? null : _ref$name,\n        _ref$attributes = _ref.attributes,\n        attributes = _ref$attributes === undefined ? {} : _ref$attributes,\n        _ref$read = _ref.read,\n        read = _ref$read === undefined ? function () {} : _ref$read,\n        _ref$write = _ref.write,\n        write = _ref$write === undefined ? function () {} : _ref$write,\n        _ref$create = _ref.create,\n        create = _ref$create === undefined ? function () {} : _ref$create,\n        _ref$destroy = _ref.destroy,\n        destroy = _ref$destroy === undefined ? function () {} : _ref$destroy,\n        _ref$filterFrameActio = _ref.filterFrameActionsForChild,\n        filterFrameActionsForChild = _ref$filterFrameActio === undefined ? function (child, actions) {\n      return actions;\n    } : _ref$filterFrameActio,\n        _ref$didCreateView = _ref.didCreateView,\n        didCreateView = _ref$didCreateView === undefined ? function () {} : _ref$didCreateView,\n        _ref$didWriteView = _ref.didWriteView,\n        didWriteView = _ref$didWriteView === undefined ? function () {} : _ref$didWriteView,\n        _ref$ignoreRect = _ref.ignoreRect,\n        ignoreRect = _ref$ignoreRect === undefined ? false : _ref$ignoreRect,\n        _ref$ignoreRectUpdate = _ref.ignoreRectUpdate,\n        ignoreRectUpdate = _ref$ignoreRectUpdate === undefined ? false : _ref$ignoreRectUpdate,\n        _ref$mixins = _ref.mixins,\n        mixins = _ref$mixins === undefined ? [] : _ref$mixins;\n\n    return function ( // each view requires reference to store\n    store) {\n      var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; // root element should not be changed\n\n      var element = createElement(tag, 'filepond--' + name, attributes); // style reference should also not be changed\n\n      var style = window.getComputedStyle(element, null); // element rectangle\n\n      var rect = updateRect();\n      var frameRect = null; // rest state\n\n      var isResting = false; // pretty self explanatory\n\n      var childViews = []; // loaded mixins\n\n      var activeMixins = []; // references to created children\n\n      var ref = {}; // state used for each instance\n\n      var state = {}; // list of writers that will be called to update this view\n\n      var writers = [write // default writer\n      ];\n      var readers = [read // default reader\n      ];\n      var destroyers = [destroy // default destroy\n      ]; // core view methods\n\n      var getElement = function getElement() {\n        return element;\n      };\n\n      var getChildViews = function getChildViews() {\n        return [].concat(childViews);\n      };\n\n      var getReference = function getReference() {\n        return ref;\n      };\n\n      var createChildView = function createChildView(store) {\n        return function (view, props) {\n          return view(store, props);\n        };\n      };\n\n      var getRect = function getRect() {\n        if (frameRect) {\n          return frameRect;\n        }\n\n        frameRect = getViewRect(rect, childViews, [0, 0], [1, 1]);\n        return frameRect;\n      };\n\n      var getStyle = function getStyle() {\n        return style;\n      };\n      /**\n       * Read data from DOM\n       * @private\n       */\n\n\n      var _read = function _read() {\n        frameRect = null; // read child views\n\n        childViews.forEach(function (child) {\n          return child._read();\n        });\n        var shouldUpdate = !(ignoreRectUpdate && rect.width && rect.height);\n\n        if (shouldUpdate) {\n          updateRect(rect, element, style);\n        } // readers\n\n\n        var api = {\n          root: internalAPI,\n          props: props,\n          rect: rect\n        };\n        readers.forEach(function (reader) {\n          return reader(api);\n        });\n      };\n      /**\n       * Write data to DOM\n       * @private\n       */\n\n\n      var _write = function _write(ts) {\n        var frameActions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : []; // if no actions, we assume that the view is resting\n\n        var resting = frameActions.length === 0; // writers\n\n        writers.forEach(function (writer) {\n          var writerResting = writer({\n            props: props,\n            root: internalAPI,\n            actions: frameActions,\n            timestamp: ts\n          });\n\n          if (writerResting === false) {\n            resting = false;\n          }\n        }); // run mixins\n\n        activeMixins.forEach(function (mixin) {\n          // if one of the mixins is still busy after write operation, we are not resting\n          var mixinResting = mixin.write(ts);\n\n          if (mixinResting === false) {\n            resting = false;\n          }\n        }); // updates child views that are currently attached to the DOM\n\n        childViews.filter(function (child) {\n          return !!child.element.parentNode;\n        }).forEach(function (child) {\n          // if a child view is not resting, we are not resting\n          var childResting = child._write(ts, filterFrameActionsForChild(child, frameActions));\n\n          if (!childResting) {\n            resting = false;\n          }\n        }); // append new elements to DOM and update those\n\n        childViews //.filter(child => !child.element.parentNode)\n        .forEach(function (child, index) {\n          // skip\n          if (child.element.parentNode) {\n            return;\n          } // append to DOM\n\n\n          internalAPI.appendChild(child.element, index); // call read (need to know the size of these elements)\n\n          child._read(); // re-call write\n\n\n          child._write(ts, filterFrameActionsForChild(child, frameActions)); // we just added somthing to the dom, no rest\n\n\n          resting = false;\n        }); // update resting state\n\n        isResting = resting;\n        didWriteView({\n          props: props,\n          root: internalAPI,\n          actions: frameActions,\n          timestamp: ts\n        }); // let parent know if we are resting\n\n        return resting;\n      };\n\n      var _destroy = function _destroy() {\n        activeMixins.forEach(function (mixin) {\n          return mixin.destroy();\n        });\n        destroyers.forEach(function (destroyer) {\n          destroyer({\n            root: internalAPI,\n            props: props\n          });\n        });\n        childViews.forEach(function (child) {\n          return child._destroy();\n        });\n      }; // sharedAPI\n\n\n      var sharedAPIDefinition = {\n        element: {\n          get: getElement\n        },\n        style: {\n          get: getStyle\n        },\n        childViews: {\n          get: getChildViews\n        }\n      }; // private API definition\n\n      var internalAPIDefinition = Object.assign({}, sharedAPIDefinition, {\n        rect: {\n          get: getRect\n        },\n        // access to custom children references\n        ref: {\n          get: getReference\n        },\n        // dom modifiers\n        is: function is(needle) {\n          return name === needle;\n        },\n        appendChild: appendChild(element),\n        createChildView: createChildView(store),\n        linkView: function linkView(view) {\n          childViews.push(view);\n          return view;\n        },\n        unlinkView: function unlinkView(view) {\n          childViews.splice(childViews.indexOf(view), 1);\n        },\n        appendChildView: appendChildView(element, childViews),\n        removeChildView: removeChildView(element, childViews),\n        registerWriter: function registerWriter(writer) {\n          return writers.push(writer);\n        },\n        registerReader: function registerReader(reader) {\n          return readers.push(reader);\n        },\n        registerDestroyer: function registerDestroyer(destroyer) {\n          return destroyers.push(destroyer);\n        },\n        invalidateLayout: function invalidateLayout() {\n          return element.layoutCalculated = false;\n        },\n        // access to data store\n        dispatch: store.dispatch,\n        query: store.query\n      }); // public view API methods\n\n      var externalAPIDefinition = {\n        element: {\n          get: getElement\n        },\n        childViews: {\n          get: getChildViews\n        },\n        rect: {\n          get: getRect\n        },\n        resting: {\n          get: function get() {\n            return isResting;\n          }\n        },\n        isRectIgnored: function isRectIgnored() {\n          return ignoreRect;\n        },\n        _read: _read,\n        _write: _write,\n        _destroy: _destroy\n      }; // mixin API methods\n\n      var mixinAPIDefinition = Object.assign({}, sharedAPIDefinition, {\n        rect: {\n          get: function get() {\n            return rect;\n          }\n        }\n      }); // add mixin functionality\n\n      Object.keys(mixins).sort(function (a, b) {\n        // move styles to the back of the mixin list (so adjustments of other mixins are applied to the props correctly)\n        if (a === 'styles') {\n          return 1;\n        } else if (b === 'styles') {\n          return -1;\n        }\n\n        return 0;\n      }).forEach(function (key) {\n        var mixinAPI = Mixins[key]({\n          mixinConfig: mixins[key],\n          viewProps: props,\n          viewState: state,\n          viewInternalAPI: internalAPIDefinition,\n          viewExternalAPI: externalAPIDefinition,\n          view: createObject(mixinAPIDefinition)\n        });\n\n        if (mixinAPI) {\n          activeMixins.push(mixinAPI);\n        }\n      }); // construct private api\n\n      var internalAPI = createObject(internalAPIDefinition); // create the view\n\n      create({\n        root: internalAPI,\n        props: props\n      }); // append created child views to root node\n\n      var childCount = element.children.length; // need to know the current child count so appending happens in correct order\n\n      childViews.forEach(function (child, index) {\n        internalAPI.appendChild(child.element, childCount + index);\n      }); // call did create\n\n      didCreateView(internalAPI); // expose public api\n\n      return createObject(externalAPIDefinition, props);\n    };\n  };\n\n  var createPainter = function createPainter(read, write) {\n    var fps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 60;\n    var name = '__framePainter'; // set global painter\n\n    if (window[name]) {\n      window[name].readers.push(read);\n      window[name].writers.push(write);\n      return;\n    }\n\n    window[name] = {\n      readers: [read],\n      writers: [write]\n    };\n    var painter = window[name];\n    var interval = 1000 / fps;\n    var last = null;\n    var frame = null;\n\n    var tick = function tick(ts) {\n      // queue next tick\n      frame = window.requestAnimationFrame(tick); // limit fps\n\n      if (!last) {\n        last = ts;\n      }\n\n      var delta = ts - last;\n\n      if (delta <= interval) {\n        // skip frame\n        return;\n      } // align next frame\n\n\n      last = ts - delta % interval; // update view\n\n      painter.readers.forEach(function (read) {\n        return read();\n      });\n      painter.writers.forEach(function (write) {\n        return write(ts);\n      });\n    };\n\n    tick(performance.now());\n    return {\n      pause: function pause() {\n        window.cancelAnimationFrame(frame);\n      }\n    };\n  };\n\n  var createRoute = function createRoute(routes, fn) {\n    return function (_ref) {\n      var root = _ref.root,\n          props = _ref.props,\n          _ref$actions = _ref.actions,\n          actions = _ref$actions === undefined ? [] : _ref$actions,\n          timestamp = _ref.timestamp;\n      actions.filter(function (action) {\n        return routes[action.type];\n      }).forEach(function (action) {\n        return routes[action.type]({\n          root: root,\n          props: props,\n          action: action.data,\n          timestamp: timestamp\n        });\n      });\n\n      if (fn) {\n        fn({\n          root: root,\n          props: props,\n          actions: actions,\n          timestamp: timestamp\n        });\n      }\n    };\n  };\n\n  var insertBefore = function insertBefore(newNode, referenceNode) {\n    return referenceNode.parentNode.insertBefore(newNode, referenceNode);\n  };\n\n  var insertAfter = function insertAfter(newNode, referenceNode) {\n    return referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);\n  };\n\n  var isArray = function isArray(value) {\n    return Array.isArray(value);\n  };\n\n  var isEmpty = function isEmpty(value) {\n    return value == null;\n  };\n\n  var trim = function trim(str) {\n    return str.trim();\n  };\n\n  var toString = function toString(value) {\n    return '' + value;\n  };\n\n  var toArray$1 = function toArray(value) {\n    var splitter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ',';\n\n    if (isEmpty(value)) {\n      return [];\n    }\n\n    if (isArray(value)) {\n      return value;\n    }\n\n    return toString(value).split(splitter).map(trim).filter(function (str) {\n      return str.length;\n    });\n  };\n\n  var isBoolean = function isBoolean(value) {\n    return typeof value === 'boolean';\n  };\n\n  var toBoolean = function toBoolean(value) {\n    return isBoolean(value) ? value : value === 'true';\n  };\n\n  var isString = function isString(value) {\n    return typeof value === 'string';\n  };\n\n  var toNumber = function toNumber(value) {\n    return isNumber(value) ? value : isString(value) ? toString(value).replace(/[a-z]+/gi, '') : 0;\n  };\n\n  var toInt = function toInt(value) {\n    return parseInt(toNumber(value), 10);\n  };\n\n  var toFloat = function toFloat(value) {\n    return parseFloat(toNumber(value));\n  };\n\n  var isInt = function isInt(value) {\n    return isNumber(value) && isFinite(value) && Math.floor(value) === value;\n  };\n\n  var toBytes = function toBytes(value) {\n    // is in bytes\n    if (isInt(value)) {\n      return value;\n    } // is natural file size\n\n\n    var naturalFileSize = toString(value).trim(); // if is value in megabytes\n\n    if (/MB$/i.test(naturalFileSize)) {\n      naturalFileSize = naturalFileSize.replace(/MB$i/, '').trim();\n      return toInt(naturalFileSize) * 1000 * 1000;\n    } // if is value in kilobytes\n\n\n    if (/KB/i.test(naturalFileSize)) {\n      naturalFileSize = naturalFileSize.replace(/KB$i/, '').trim();\n      return toInt(naturalFileSize) * 1000;\n    }\n\n    return toInt(naturalFileSize);\n  };\n\n  var isFunction = function isFunction(value) {\n    return typeof value === 'function';\n  };\n\n  var toFunctionReference = function toFunctionReference(string) {\n    var ref = self;\n    var levels = string.split('.');\n    var level = null;\n\n    while (level = levels.shift()) {\n      ref = ref[level];\n\n      if (!ref) {\n        return null;\n      }\n    }\n\n    return ref;\n  };\n\n  var methods = {\n    process: 'POST',\n    revert: 'DELETE',\n    fetch: 'GET',\n    restore: 'GET',\n    load: 'GET'\n  };\n\n  var createServerAPI = function createServerAPI(outline) {\n    var api = {};\n    api.url = isString(outline) ? outline : outline.url || '';\n    api.timeout = outline.timeout ? parseInt(outline.timeout, 10) : 0;\n    forin(methods, function (key) {\n      api[key] = createAction(key, outline[key], methods[key], api.timeout);\n    }); // special treatment for remove\n\n    api.remove = outline.remove || null;\n    return api;\n  };\n\n  var createAction = function createAction(name, outline, method, timeout) {\n    // is explicitely set to null so disable\n    if (outline === null) {\n      return null;\n    } // if is custom function, done! Dev handles everything.\n\n\n    if (typeof outline === 'function') {\n      return outline;\n    } // build action object\n\n\n    var action = {\n      url: method === 'GET' ? '?' + name + '=' : '',\n      method: method,\n      headers: {},\n      withCredentials: false,\n      timeout: timeout,\n      onload: null,\n      ondata: null,\n      onerror: null\n    }; // is a single url\n\n    if (isString(outline)) {\n      action.url = outline;\n      return action;\n    } // overwrite\n\n\n    Object.assign(action, outline); // see if should reformat headers;\n\n    if (isString(action.headers)) {\n      var parts = action.headers.split(/:(.+)/);\n      action.headers = {\n        header: parts[0],\n        value: parts[1]\n      };\n    } // if is bool withCredentials\n\n\n    action.withCredentials = toBoolean(action.withCredentials);\n    return action;\n  };\n\n  var toServerAPI = function toServerAPI(value) {\n    return createServerAPI(value);\n  };\n\n  var isNull = function isNull(value) {\n    return value === null;\n  };\n\n  var isObject = function isObject(value) {\n    return (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && value !== null;\n  };\n\n  var isAPI = function isAPI(value) {\n    return isObject(value) && isString(value.url) && isObject(value.process) && isObject(value.revert) && isObject(value.restore) && isObject(value.fetch);\n  };\n\n  var getType = function getType(value) {\n    if (isArray(value)) {\n      return 'array';\n    }\n\n    if (isNull(value)) {\n      return 'null';\n    }\n\n    if (isInt(value)) {\n      return 'int';\n    }\n\n    if (/^[0-9]+ ?(?:GB|MB|KB)$/gi.test(value)) {\n      return 'bytes';\n    }\n\n    if (isAPI(value)) {\n      return 'api';\n    }\n\n    return typeof value === 'undefined' ? 'undefined' : _typeof(value);\n  };\n\n  var replaceSingleQuotes = function replaceSingleQuotes(str) {\n    return str.replace(/{\\s*'/g, '{\"').replace(/'\\s*}/g, '\"}').replace(/'\\s*:/g, '\":').replace(/:\\s*'/g, ':\"').replace(/,\\s*'/g, ',\"').replace(/'\\s*,/g, '\",');\n  };\n\n  var conversionTable = {\n    array: toArray$1,\n    boolean: toBoolean,\n    int: function int(value) {\n      return getType(value) === 'bytes' ? toBytes(value) : toInt(value);\n    },\n    float: toFloat,\n    bytes: toBytes,\n    string: function string(value) {\n      return isFunction(value) ? value : toString(value);\n    },\n    serverapi: toServerAPI,\n    object: function object(value) {\n      try {\n        return JSON.parse(replaceSingleQuotes(value));\n      } catch (e) {\n        return null;\n      }\n    },\n    function: function _function(value) {\n      return toFunctionReference(value);\n    }\n  };\n\n  var convertTo = function convertTo(value, type) {\n    return conversionTable[type](value);\n  };\n\n  var getValueByType = function getValueByType(newValue, defaultValue, valueType) {\n    // can always assign default value\n    if (newValue === defaultValue) {\n      return newValue;\n    } // get the type of the new value\n\n\n    var newValueType = getType(newValue); // is valid type?\n\n    if (newValueType !== valueType) {\n      // is string input, let's attempt to convert\n      var convertedValue = convertTo(newValue, valueType); // what is the type now\n\n      newValueType = getType(convertedValue); // no valid conversions found\n\n      if (convertedValue === null) {\n        throw 'Trying to assign value with incorrect type to \"' + option + '\", allowed type: \"' + valueType + '\"';\n      } else {\n        newValue = convertedValue;\n      }\n    } // assign new value\n\n\n    return newValue;\n  };\n\n  var createOption = function createOption(defaultValue, valueType) {\n    var currentValue = defaultValue;\n    return {\n      enumerable: true,\n      get: function get() {\n        return currentValue;\n      },\n      set: function set(newValue) {\n        currentValue = getValueByType(newValue, defaultValue, valueType);\n      }\n    };\n  };\n\n  var createOptions = function createOptions(options) {\n    var obj = {};\n    forin(options, function (prop) {\n      var optionDefinition = options[prop];\n      obj[prop] = createOption(optionDefinition[0], optionDefinition[1]);\n    });\n    return createObject(obj);\n  };\n\n  var createInitialState = function createInitialState(options) {\n    return {\n      // model\n      items: [],\n      // timeout used for calling update items\n      listUpdateTimeout: null,\n      // queue of items waiting to be processed\n      processingQueue: [],\n      // options\n      options: createOptions(options)\n    };\n  };\n\n  var fromCamels = function fromCamels(string) {\n    var separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '-';\n    return string.split(/(?=[A-Z])/).map(function (part) {\n      return part.toLowerCase();\n    }).join(separator);\n  };\n\n  var createOptionAPI = function createOptionAPI(store, options) {\n    var obj = {};\n    forin(options, function (key) {\n      obj[key] = {\n        get: function get() {\n          return store.getState().options[key];\n        },\n        set: function set(value) {\n          store.dispatch('SET_' + fromCamels(key, '_').toUpperCase(), {\n            value: value\n          });\n        }\n      };\n    });\n    return obj;\n  };\n\n  var createOptionActions = function createOptionActions(options) {\n    return function (dispatch, query, state) {\n      var obj = {};\n      forin(options, function (key) {\n        var name = fromCamels(key, '_').toUpperCase();\n\n        obj['SET_' + name] = function (action) {\n          try {\n            state.options[key] = action.value;\n          } catch (e) {} // nope, failed\n          // we successfully set the value of this option\n\n\n          dispatch('DID_SET_' + name, {\n            value: state.options[key]\n          });\n        };\n      });\n      return obj;\n    };\n  };\n\n  var createOptionQueries = function createOptionQueries(options) {\n    return function (state) {\n      var obj = {};\n      forin(options, function (key) {\n        obj['GET_' + fromCamels(key, '_').toUpperCase()] = function (action) {\n          return state.options[key];\n        };\n      });\n      return obj;\n    };\n  };\n\n  var InteractionMethod = {\n    API: 1,\n    DROP: 2,\n    BROWSE: 3,\n    PASTE: 4,\n    NONE: 5\n  };\n\n  var getUniqueId = function getUniqueId() {\n    return Math.random().toString(36).substr(2, 9);\n  };\n\n  var forEachDelayed = function forEachDelayed(items, cb) {\n    var delay = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 75;\n    return items.map(function (item, index) {\n      return new Promise(function (resolve, reject) {\n        setTimeout(function () {\n          cb(item);\n          resolve();\n        }, delay * index);\n      });\n    });\n  };\n\n  var arrayRemove = function arrayRemove(arr, index) {\n    return arr.splice(index, 1);\n  };\n\n  var on = function on() {\n    var listeners = [];\n\n    var off = function off(event, cb) {\n      arrayRemove(listeners, listeners.findIndex(function (listener) {\n        return listener.event === event && (listener.cb === cb || !cb);\n      }));\n    };\n\n    return {\n      fire: function fire(event) {\n        for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n\n        listeners.filter(function (listener) {\n          return listener.event === event;\n        }).map(function (listener) {\n          return listener.cb;\n        }).forEach(function (cb) {\n          setTimeout(function () {\n            cb.apply(undefined, args);\n          }, 0);\n        });\n      },\n      on: function on(event, cb) {\n        listeners.push({\n          event: event,\n          cb: cb\n        });\n      },\n      onOnce: function onOnce(event, _cb) {\n        listeners.push({\n          event: event,\n          cb: function cb() {\n            off(event, _cb);\n\n            _cb.apply(undefined, arguments);\n          }\n        });\n      },\n      off: off\n    };\n  };\n\n  var copyObjectPropertiesToObject = function copyObjectPropertiesToObject(src, target, excluded) {\n    Object.getOwnPropertyNames(src).filter(function (property) {\n      return !excluded.includes(property);\n    }).forEach(function (key) {\n      return Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(src, key));\n    });\n  };\n\n  var PRIVATE = ['fire', 'process', 'revert', 'load', 'on', 'off', 'onOnce', 'retryLoad', 'extend', 'archive', 'archived', 'release', 'released', 'requestProcessing'];\n\n  var createItemAPI = function createItemAPI(item) {\n    var api = {};\n    copyObjectPropertiesToObject(item, api, PRIVATE);\n    return api;\n  };\n\n  var removeReleasedItems = function removeReleasedItems(items) {\n    items.forEach(function (item, index) {\n      if (item.released) {\n        arrayRemove(items, index);\n      }\n    });\n  };\n\n  var getNonNumeric = function getNonNumeric(str) {\n    return /[^0-9]+/.exec(str);\n  };\n\n  var getDecimalSeparator = function getDecimalSeparator() {\n    return getNonNumeric(1.1.toLocaleString())[0];\n  };\n\n  var getThousandsSeparator = function getThousandsSeparator() {\n    // Added for browsers that do not return the thousands separator (happend on native browser Android 4.4.4)\n    // We check against the normal toString output and if they're the same return a comma when decimal separator is a dot\n    var decimalSeparator = getDecimalSeparator();\n    var thousandsStringWithSeparator = 1000.0.toLocaleString();\n    var thousandsStringWithoutSeparator = 1000.0.toString();\n\n    if (thousandsStringWithSeparator !== thousandsStringWithoutSeparator) {\n      return getNonNumeric(thousandsStringWithSeparator)[0];\n    }\n\n    return decimalSeparator === '.' ? ',' : '.';\n  };\n\n  var Type = {\n    BOOLEAN: 'boolean',\n    INT: 'int',\n    STRING: 'string',\n    ARRAY: 'array',\n    OBJECT: 'object',\n    FUNCTION: 'function',\n    ACTION: 'action',\n    SERVER_API: 'serverapi',\n    REGEX: 'regex'\n  }; // all registered filters\n\n  var filters = []; // loops over matching filters and passes options to each filter, returning the mapped results\n\n  var applyFilterChain = function applyFilterChain(key, value, utils) {\n    return new Promise(function (resolve, reject) {\n      // find matching filters for this key\n      var matchingFilters = filters.filter(function (f) {\n        return f.key === key;\n      }).map(function (f) {\n        return f.cb;\n      }); // resolve now\n\n      if (matchingFilters.length === 0) {\n        resolve(value);\n        return;\n      } // first filter to kick things of\n\n\n      var initialFilter = matchingFilters.shift(); // chain filters\n\n      matchingFilters.reduce( // loop over promises passing value to next promise\n      function (current, next) {\n        return current.then(function (value) {\n          return next(value, utils);\n        });\n      }, // call initial filter, will return a promise\n      initialFilter(value, utils) // all executed\n      ).then(function (value) {\n        return resolve(value);\n      }).catch(function (error) {\n        return reject(error);\n      });\n    });\n  };\n\n  var applyFilters = function applyFilters(key, value, utils) {\n    return filters.filter(function (f) {\n      return f.key === key;\n    }).map(function (f) {\n      return f.cb(value, utils);\n    });\n  }; // adds a new filter to the list\n\n\n  var addFilter = function addFilter(key, cb) {\n    return filters.push({\n      key: key,\n      cb: cb\n    });\n  };\n\n  var extendDefaultOptions = function extendDefaultOptions(additionalOptions) {\n    return Object.assign(defaultOptions, additionalOptions);\n  };\n\n  var getOptions$1 = function getOptions() {\n    return Object.assign({}, defaultOptions);\n  };\n\n  var setOptions$1 = function setOptions(opts) {\n    forin(opts, function (key, value) {\n      // key does not exist, so this option cannot be set\n      if (!defaultOptions[key]) {\n        return;\n      }\n\n      defaultOptions[key][0] = getValueByType(value, defaultOptions[key][0], defaultOptions[key][1]);\n    });\n  }; // default options on app\n\n\n  var defaultOptions = {\n    // the id to add to the root element\n    id: [null, Type.STRING],\n    // input field name to use\n    name: ['filepond', Type.STRING],\n    // classname to put on wrapper\n    className: [null, Type.STRING],\n    // is the field required\n    required: [false, Type.BOOLEAN],\n    // Allow media capture when value is set\n    captureMethod: [null, Type.STRING],\n    // - \"camera\", \"microphone\" or \"camcorder\",\n    // - Does not work with multiple on apple devices\n    // - If set, acceptedFileTypes must be made to match with media wildcard \"image/*\", \"audio/*\" or \"video/*\"\n    // Feature toggles\n    allowDrop: [true, Type.BOOLEAN],\n    // Allow dropping of files\n    allowBrowse: [true, Type.BOOLEAN],\n    // Allow browsing the file system\n    allowPaste: [true, Type.BOOLEAN],\n    // Allow pasting files\n    allowMultiple: [false, Type.BOOLEAN],\n    // Allow multiple files (disabled by default, as multiple attribute is also required on input to allow multiple)\n    allowReplace: [true, Type.BOOLEAN],\n    // Allow dropping a file on other file to replace it (only works when multiple is set to false)\n    allowRevert: [true, Type.BOOLEAN],\n    // Allows user to revert file upload\n    // Revert mode\n    forceRevert: [false, Type.BOOLEAN],\n    // Set to 'force' to require the file to be reverted before removal\n    // Input requirements\n    maxFiles: [null, Type.INT],\n    // Max number of files\n    checkValidity: [false, Type.BOOLEAN],\n    // Enables custom validity messages\n    // Drag 'n Drop related\n    dropOnPage: [false, Type.BOOLEAN],\n    // Allow dropping of files anywhere on page (prevents browser from opening file if dropped outside of Up)\n    dropOnElement: [true, Type.BOOLEAN],\n    // Drop needs to happen on element (set to false to also load drops outside of Up)\n    dropValidation: [false, Type.BOOLEAN],\n    // Enable or disable validating files on drop\n    ignoredFiles: [['.ds_store', 'thumbs.db', 'desktop.ini'], Type.ARRAY],\n    // Upload related\n    instantUpload: [true, Type.BOOLEAN],\n    // Should upload files immidiately on drop\n    maxParallelUploads: [2, Type.INT],\n    // Maximum files to upload in parallel\n    // The server api end points to use for uploading (see docs)\n    server: [null, Type.SERVER_API],\n    // Labels and status messages\n    labelDecimalSeparator: [getDecimalSeparator(), Type.STRING],\n    // Default is locale separator\n    labelThousandsSeparator: [getThousandsSeparator(), Type.STRING],\n    // Default is locale separator\n    labelIdle: ['Drag & Drop your files or <span class=\"filepond--label-action\">Browse</span>', Type.STRING],\n    labelInvalidField: ['Field contains invalid files', Type.STRING],\n    labelFileWaitingForSize: ['Waiting for size', Type.STRING],\n    labelFileSizeNotAvailable: ['Size not available', Type.STRING],\n    labelFileCountSingular: ['file in list', Type.STRING],\n    labelFileCountPlural: ['files in list', Type.STRING],\n    labelFileLoading: ['Loading', Type.STRING],\n    labelFileAdded: ['Added', Type.STRING],\n    // assistive only\n    labelFileLoadError: ['Error during load', Type.STRING],\n    labelFileRemoved: ['Removed', Type.STRING],\n    // assistive only\n    labelFileRemoveError: ['Error during remove', Type.STRING],\n    labelFileProcessing: ['Uploading', Type.STRING],\n    labelFileProcessingComplete: ['Upload complete', Type.STRING],\n    labelFileProcessingAborted: ['Upload cancelled', Type.STRING],\n    labelFileProcessingError: ['Error during upload', Type.STRING],\n    labelFileProcessingRevertError: ['Error during revert', Type.STRING],\n    labelTapToCancel: ['tap to cancel', Type.STRING],\n    labelTapToRetry: ['tap to retry', Type.STRING],\n    labelTapToUndo: ['tap to undo', Type.STRING],\n    labelButtonRemoveItem: ['Remove', Type.STRING],\n    labelButtonAbortItemLoad: ['Abort', Type.STRING],\n    labelButtonRetryItemLoad: ['Retry', Type.STRING],\n    labelButtonAbortItemProcessing: ['Cancel', Type.STRING],\n    labelButtonUndoItemProcessing: ['Undo', Type.STRING],\n    labelButtonRetryItemProcessing: ['Retry', Type.STRING],\n    labelButtonProcessItem: ['Upload', Type.STRING],\n    // make sure width and height plus viewpox are even numbers so icons are nicely centered\n    iconRemove: ['<svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M11.586 13l-2.293 2.293a1 1 0 0 0 1.414 1.414L13 14.414l2.293 2.293a1 1 0 0 0 1.414-1.414L14.414 13l2.293-2.293a1 1 0 0 0-1.414-1.414L13 11.586l-2.293-2.293a1 1 0 0 0-1.414 1.414L11.586 13z\" fill=\"currentColor\" fill-rule=\"nonzero\"/></svg>', Type.STRING],\n    iconProcess: ['<svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M14 10.414v3.585a1 1 0 0 1-2 0v-3.585l-1.293 1.293a1 1 0 0 1-1.414-1.415l3-3a1 1 0 0 1 1.414 0l3 3a1 1 0 0 1-1.414 1.415L14 10.414zM9 18a1 1 0 0 1 0-2h8a1 1 0 0 1 0 2H9z\" fill=\"currentColor\" fill-rule=\"evenodd\"/></svg>', Type.STRING],\n    iconRetry: ['<svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10.81 9.185l-.038.02A4.997 4.997 0 0 0 8 13.683a5 5 0 0 0 5 5 5 5 0 0 0 5-5 1 1 0 0 1 2 0A7 7 0 1 1 9.722 7.496l-.842-.21a.999.999 0 1 1 .484-1.94l3.23.806c.535.133.86.675.73 1.21l-.804 3.233a.997.997 0 0 1-1.21.73.997.997 0 0 1-.73-1.21l.23-.928v-.002z\" fill=\"currentColor\" fill-rule=\"nonzero\"/></svg>', Type.STRING],\n    iconUndo: ['<svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M9.185 10.81l.02-.038A4.997 4.997 0 0 1 13.683 8a5 5 0 0 1 5 5 5 5 0 0 1-5 5 1 1 0 0 0 0 2A7 7 0 1 0 7.496 9.722l-.21-.842a.999.999 0 1 0-1.94.484l.806 3.23c.133.535.675.86 1.21.73l3.233-.803a.997.997 0 0 0 .73-1.21.997.997 0 0 0-1.21-.73l-.928.23-.002-.001z\" fill=\"currentColor\" fill-rule=\"nonzero\"/></svg>', Type.STRING],\n    iconDone: ['<svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M18.293 9.293a1 1 0 0 1 1.414 1.414l-7.002 7a1 1 0 0 1-1.414 0l-3.998-4a1 1 0 1 1 1.414-1.414L12 15.586l6.294-6.293z\" fill=\"currentColor\" fill-rule=\"nonzero\"/></svg>', Type.STRING],\n    // event handlers\n    oninit: [null, Type.FUNCTION],\n    onwarning: [null, Type.FUNCTION],\n    onerror: [null, Type.FUNCTION],\n    onaddfilestart: [null, Type.FUNCTION],\n    onaddfileprogress: [null, Type.FUNCTION],\n    onaddfile: [null, Type.FUNCTION],\n    onprocessfilestart: [null, Type.FUNCTION],\n    onprocessfileprogress: [null, Type.FUNCTION],\n    onprocessfileabort: [null, Type.FUNCTION],\n    onprocessfilerevert: [null, Type.FUNCTION],\n    onprocessfile: [null, Type.FUNCTION],\n    onremovefile: [null, Type.FUNCTION],\n    onpreparefile: [null, Type.FUNCTION],\n    onupdatefiles: [null, Type.FUNCTION],\n    // hooks\n    beforeAddFile: [null, Type.FUNCTION],\n    beforeRemoveFile: [null, Type.FUNCTION],\n    // styles\n    stylePanelLayout: [null, Type.STRING],\n    // null 'integrated', 'compact', 'circle'\n    stylePanelAspectRatio: [null, Type.STRING],\n    // null or '3:2' or 1\n    styleButtonRemoveItemPosition: ['left', Type.STRING],\n    styleButtonProcessItemPosition: ['right', Type.STRING],\n    styleLoadIndicatorPosition: ['right', Type.STRING],\n    styleProgressIndicatorPosition: ['right', Type.STRING],\n    // custom initial files array\n    files: [[], Type.ARRAY]\n  };\n\n  var getItemByQuery = function getItemByQuery(items, query) {\n    // just return first index\n    if (isEmpty(query)) {\n      return items[0] || null;\n    } // query is index\n\n\n    if (isInt(query)) {\n      return items[query] || null;\n    } // if query is item, get the id\n\n\n    if ((typeof query === 'undefined' ? 'undefined' : _typeof(query)) === 'object') {\n      query = query.id;\n    } // assume query is a string and return item by id\n\n\n    return items.find(function (item) {\n      return item.id === query;\n    }) || null;\n  };\n\n  var getNumericAspectRatioFromString = function getNumericAspectRatioFromString(aspectRatio) {\n    if (isEmpty(aspectRatio)) {\n      return aspectRatio;\n    }\n\n    if (/:/.test(aspectRatio)) {\n      var _aspectRatio$split = aspectRatio.split(':'),\n          _aspectRatio$split2 = slicedToArray(_aspectRatio$split, 2),\n          w = _aspectRatio$split2[0],\n          h = _aspectRatio$split2[1];\n\n      return h / w;\n    }\n\n    return parseFloat(aspectRatio);\n  };\n\n  var getActiveItems = function getActiveItems(items) {\n    return items.filter(function (item) {\n      return !item.archived;\n    });\n  };\n\n  var queries = function queries(state) {\n    return {\n      GET_ITEM: function GET_ITEM(query) {\n        return getItemByQuery(state.items, query);\n      },\n      GET_ACTIVE_ITEM: function GET_ACTIVE_ITEM(query) {\n        return getItemByQuery(getActiveItems(state.items), query);\n      },\n      GET_ACTIVE_ITEMS: function GET_ACTIVE_ITEMS(query) {\n        return getActiveItems(state.items);\n      },\n      GET_ITEMS: function GET_ITEMS(query) {\n        return state.items;\n      },\n      GET_ITEM_NAME: function GET_ITEM_NAME(query) {\n        var item = getItemByQuery(state.items, query);\n        return item ? item.filename : null;\n      },\n      GET_ITEM_SIZE: function GET_ITEM_SIZE(query) {\n        var item = getItemByQuery(state.items, query);\n        return item ? item.fileSize : null;\n      },\n      GET_STYLES: function GET_STYLES() {\n        return Object.keys(state.options).filter(function (key) {\n          return /^style/.test(key);\n        }).map(function (option) {\n          return {\n            name: option,\n            value: state.options[option]\n          };\n        });\n      },\n      GET_PANEL_ASPECT_RATIO: function GET_PANEL_ASPECT_RATIO() {\n        var isShapeCircle = /circle/.test(state.options.stylePanelLayout);\n        var aspectRatio = isShapeCircle ? 1 : getNumericAspectRatioFromString(state.options.stylePanelAspectRatio);\n        return aspectRatio;\n      },\n      GET_ITEMS_BY_STATUS: function GET_ITEMS_BY_STATUS(status) {\n        return getActiveItems(state.items).filter(function (item) {\n          return item.status === status;\n        });\n      },\n      GET_TOTAL_ITEMS: function GET_TOTAL_ITEMS() {\n        return getActiveItems(state.items).length;\n      },\n      IS_ASYNC: function IS_ASYNC() {\n        return isObject(state.options.server) && (isObject(state.options.server.process) || isFunction(state.options.server.process));\n      }\n    };\n  };\n\n  var hasRoomForItem = function hasRoomForItem(state) {\n    var count = getActiveItems(state.items).length; // if cannot have multiple items, to add one item it should currently not contain items\n\n    if (!state.options.allowMultiple) {\n      return count === 0;\n    } // if allows multiple items, we check if a max item count has been set, if not, there's no limit\n\n\n    var maxFileCount = state.options.maxFiles;\n\n    if (maxFileCount === null) {\n      return true;\n    } // we check if the current count is smaller than the max count, if so, another file can still be added\n\n\n    if (count < maxFileCount) {\n      return true;\n    } // no more room for another file\n\n\n    return false;\n  };\n\n  var limit = function limit(value, min, max) {\n    return Math.max(Math.min(max, value), min);\n  };\n\n  var arrayInsert = function arrayInsert(arr, index, item) {\n    return arr.splice(index, 0, item);\n  };\n\n  var insertItem = function insertItem(items, item, index) {\n    if (isEmpty(item)) {\n      return null;\n    } // if index is undefined, append\n\n\n    if (typeof index === 'undefined') {\n      items.push(item);\n      return item;\n    } // limit the index to the size of the items array\n\n\n    index = limit(index, 0, items.length); // add item to array\n\n    arrayInsert(items, index, item); // expose\n\n    return item;\n  };\n\n  var isBase64DataURI = function isBase64DataURI(str) {\n    return /^\\s*data:([a-z]+\\/[a-z0-9-+.]+(;[a-z-]+=[a-z0-9-]+)?)?(;base64)?,([a-z0-9!$&',()*+;=\\-._~:@\\/?%\\s]*)\\s*$/i.test(str);\n  };\n\n  var getFilenameFromURL = function getFilenameFromURL(url) {\n    return url.split('/').pop().split('?').shift();\n  };\n\n  var getExtensionFromFilename = function getExtensionFromFilename(name) {\n    return name.split('.').pop();\n  };\n\n  var guesstimateExtension = function guesstimateExtension(type) {\n    // if no extension supplied, exit here\n    if (typeof type !== 'string') {\n      return '';\n    } // get subtype\n\n\n    var subtype = type.split('/').pop(); // is svg subtype\n\n    if (/svg/.test(subtype)) {\n      return 'svg';\n    }\n\n    if (/zip|compressed/.test(subtype)) {\n      return 'zip';\n    }\n\n    if (/plain/.test(subtype)) {\n      return 'txt';\n    }\n\n    if (/msword/.test(subtype)) {\n      return 'doc';\n    } // if is valid subtype\n\n\n    if (/[a-z]+/.test(subtype)) {\n      // always use jpg extension\n      if (subtype === 'jpeg') {\n        return 'jpg';\n      } // return subtype\n\n\n      return subtype;\n    }\n\n    return '';\n  };\n\n  var leftPad = function leftPad(value) {\n    var padding = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    return (padding + value).slice(-padding.length);\n  };\n\n  var getDateString = function getDateString() {\n    var date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Date();\n    return date.getFullYear() + '-' + leftPad(date.getMonth() + 1, '00') + '-' + leftPad(date.getDate(), '00') + '_' + leftPad(date.getHours(), '00') + '-' + leftPad(date.getMinutes(), '00') + '-' + leftPad(date.getSeconds(), '00');\n  };\n\n  var getFileFromBlob = function getFileFromBlob(blob, filename) {\n    var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    var extension = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n    var file = typeof type === 'string' ? blob.slice(0, blob.size, type) : blob.slice(0, blob.size, blob.type);\n    file.lastModifiedDate = new Date(); // if blob has name property, use as filename if no filename supplied\n\n    if (!isString(filename)) {\n      filename = getDateString();\n    } // if filename supplied but no extension and filename has extension\n\n\n    if (filename && extension === null && getExtensionFromFilename(filename)) {\n      file.name = filename;\n    } else {\n      extension = extension || guesstimateExtension(file.type);\n      file.name = filename + (extension ? '.' + extension : '');\n    }\n\n    return file;\n  };\n\n  var getBlobBuilder = function getBlobBuilder() {\n    return window.BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder;\n  };\n\n  var createBlob = function createBlob(arrayBuffer, mimeType) {\n    var BB = getBlobBuilder();\n\n    if (BB) {\n      var bb = new BB();\n      bb.append(arrayBuffer);\n      return bb.getBlob(mimeType);\n    }\n\n    return new Blob([arrayBuffer], {\n      type: mimeType\n    });\n  };\n\n  var getBlobFromByteStringWithMimeType = function getBlobFromByteStringWithMimeType(byteString, mimeType) {\n    var ab = new ArrayBuffer(byteString.length);\n    var ia = new Uint8Array(ab);\n\n    for (var i = 0; i < byteString.length; i++) {\n      ia[i] = byteString.charCodeAt(i);\n    }\n\n    return createBlob(ab, mimeType);\n  };\n\n  var getMimeTypeFromBase64DataURI = function getMimeTypeFromBase64DataURI(dataURI) {\n    return (/^data:(.+);/.exec(dataURI) || [])[1] || null;\n  };\n\n  var getBase64DataFromBase64DataURI = function getBase64DataFromBase64DataURI(dataURI) {\n    // get data part of string (remove data:image/jpeg...,)\n    var data = dataURI.split(',')[1]; // remove any whitespace as that causes InvalidCharacterError in IE\n\n    return data.replace(/\\s/g, '');\n  };\n\n  var getByteStringFromBase64DataURI = function getByteStringFromBase64DataURI(dataURI) {\n    return atob(getBase64DataFromBase64DataURI(dataURI));\n  };\n\n  var getBlobFromBase64DataURI = function getBlobFromBase64DataURI(dataURI) {\n    var mimeType = getMimeTypeFromBase64DataURI(dataURI);\n    var byteString = getByteStringFromBase64DataURI(dataURI);\n    return getBlobFromByteStringWithMimeType(byteString, mimeType);\n  };\n\n  var getFileFromBase64DataURI = function getFileFromBase64DataURI(dataURI, filename, extension) {\n    return getFileFromBlob(getBlobFromBase64DataURI(dataURI), filename, null, extension);\n  };\n\n  var getFileNameFromHeader = function getFileNameFromHeader(header) {\n    var matches = header.match(/(?:filename=\"(.+)\")|(?:filename=(.+))/) || [];\n    return matches[1] || matches[2];\n  };\n\n  var getFileSizeFromHeader = function getFileSizeFromHeader(header) {\n    if (/content-length:/i.test(header)) {\n      var size = header.match(/[0-9]+/)[0];\n      return size ? parseInt(size, 10) : null;\n    }\n\n    return null;\n  };\n\n  var getTranfserIdFromHeader = function getTranfserIdFromHeader(header) {\n    if (/x-content-transfer-id:/i.test(header)) {\n      var id = (header.split(':')[1] || '').trim();\n      return id || null;\n    }\n\n    return null;\n  };\n\n  var getFileInfoFromHeaders = function getFileInfoFromHeaders(headers) {\n    var info = {\n      source: null,\n      name: null,\n      size: null\n    };\n    var rows = headers.split('\\n');\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var header = _step.value;\n        var name = getFileNameFromHeader(header);\n\n        if (name) {\n          info.name = name;\n          continue;\n        }\n\n        var size = getFileSizeFromHeader(header);\n\n        if (size) {\n          info.size = size;\n          continue;\n        }\n\n        var source = getTranfserIdFromHeader(header);\n\n        if (source) {\n          info.source = source;\n          continue;\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    return info;\n  };\n\n  var createFileLoader = function createFileLoader(fetchFn) {\n    var state = {\n      source: null,\n      complete: false,\n      progress: 0,\n      size: null,\n      timestamp: null,\n      duration: 0,\n      request: null\n    };\n\n    var getProgress = function getProgress() {\n      return state.progress;\n    };\n\n    var abort = function abort() {\n      if (!state.request) {\n        return;\n      }\n\n      state.request.abort();\n    }; // load source\n\n\n    var load = function load() {\n      // get quick reference\n      var source = state.source;\n      api.fire('init', source); // Load Files\n\n      if (source instanceof File) {\n        api.fire('load', source);\n      } else if (source instanceof Blob) {\n        // Load blobs, set default name to current date\n        api.fire('load', getFileFromBlob(source, source.name));\n      } else if (isBase64DataURI(source)) {\n        // Load base 64, set default name to current date\n        api.fire('load', getFileFromBase64DataURI(source));\n      } else {\n        // Deal as if is external URL, let's load it!\n        loadURL(source);\n      }\n    }; // loads a url\n\n\n    var loadURL = function loadURL(url) {\n      // is remote url and no fetch method supplied\n      if (!fetchFn) {\n        api.fire('error', {\n          type: 'error',\n          body: \"Can't load URL\",\n          code: 400\n        });\n        return;\n      } // set request start\n\n\n      state.timestamp = Date.now(); // load file\n\n      state.request = fetchFn(url, function (response) {\n        // update duration\n        state.duration = Date.now() - state.timestamp; // done!\n\n        state.complete = true; // turn blob response into a file\n\n        if (response instanceof Blob) {\n          response = getFileFromBlob(response, getFilenameFromURL(url));\n        }\n\n        api.fire('load', response instanceof Blob ? response : response.body);\n      }, function (error) {\n        api.fire('error', typeof error === 'string' ? {\n          type: 'error',\n          code: 0,\n          body: error\n        } : error);\n      }, function (computable, current, total) {\n        // collected some meta data already\n        if (total) {\n          state.size = total;\n        } // update duration\n\n\n        state.duration = Date.now() - state.timestamp; // if we can't compute progress, we're not going to fire progress events\n\n        if (!computable) {\n          state.progress = null;\n          return;\n        } // update progress percentage\n\n\n        state.progress = current / total; // expose\n\n        api.fire('progress', state.progress);\n      }, function () {\n        api.fire('abort');\n      }, function (response) {\n        var fileinfo = getFileInfoFromHeaders(typeof response === 'string' ? response : response.headers);\n        api.fire('meta', {\n          size: state.size || fileinfo.size,\n          filename: fileinfo.name,\n          source: fileinfo.source\n        });\n      });\n    };\n\n    var api = Object.assign({}, on(), {\n      setSource: function setSource(source) {\n        return state.source = source;\n      },\n      getProgress: getProgress,\n      // file load progress\n      abort: abort,\n      // abort file load\n      load: load // start load\n\n    });\n    return api;\n  };\n\n  var isGet = function isGet(method) {\n    return /GET|HEAD/.test(method);\n  };\n\n  var sendRequest = function sendRequest(data, url, options) {\n    var api = {\n      onheaders: function onheaders() {},\n      onprogress: function onprogress() {},\n      onload: function onload() {},\n      ontimeout: function ontimeout() {},\n      onerror: function onerror() {},\n      onabort: function onabort() {},\n      abort: function abort() {\n        aborted = true;\n        xhr.abort();\n      }\n    }; // timeout identifier, only used when timeout is defined\n\n    var aborted = false;\n    var headersReceived = false; // set default options\n\n    options = Object.assign({\n      method: 'POST',\n      headers: {},\n      withCredentials: false\n    }, options); // encode url\n\n    url = encodeURI(url); // if method is GET, add any received data to url\n\n    if (isGet(options.method) && data) {\n      url = '' + url + encodeURIComponent(typeof data === 'string' ? data : JSON.stringify(data));\n    } // create request\n\n\n    var xhr = new XMLHttpRequest(); // progress of load\n\n    var process = isGet(options.method) ? xhr : xhr.upload;\n\n    process.onprogress = function (e) {\n      // no progress event when aborted ( onprogress is called once after abort() )\n      if (aborted) {\n        return;\n      }\n\n      api.onprogress(e.lengthComputable, e.loaded, e.total);\n    }; // tries to get header info to the app as fast as possible\n\n\n    xhr.onreadystatechange = function () {\n      // not interesting in these states ('unsent' and 'openend' as they don't give us any additional info)\n      if (xhr.readyState < 2) {\n        return;\n      } // no server response\n\n\n      if (xhr.readyState === 4 && xhr.status === 0) {\n        return;\n      }\n\n      if (headersReceived) {\n        return;\n      }\n\n      headersReceived = true; // we've probably received some useful data in response headers\n\n      api.onheaders(xhr);\n    }; // load successful\n\n\n    xhr.onload = function () {\n      // is classified as valid response\n      if (xhr.status >= 200 && xhr.status < 300) {\n        api.onload(xhr);\n      } else {\n        api.onerror(xhr);\n      }\n    }; // error during load\n\n\n    xhr.onerror = function () {\n      return api.onerror(xhr);\n    }; // request aborted\n\n\n    xhr.onabort = function () {\n      aborted = true;\n      api.onabort();\n    }; // request timeout\n\n\n    xhr.ontimeout = function () {\n      return api.ontimeout(xhr);\n    }; // open up open up!\n\n\n    xhr.open(options.method, url, true); // set timeout if defined (do it after open so IE11 plays ball)\n\n    if (isInt(options.timeout)) {\n      xhr.timeout = options.timeout;\n    } // add headers\n\n\n    Object.keys(options.headers).forEach(function (key) {\n      xhr.setRequestHeader(key, options.headers[key]);\n    }); // set type of response\n\n    if (options.responseType) {\n      xhr.responseType = options.responseType;\n    } // set credentials\n\n\n    if (options.withCredentials) {\n      xhr.withCredentials = true;\n    } // let's send our data\n\n\n    xhr.send(data);\n    return api;\n  };\n\n  var createResponse = function createResponse(type, code, body, headers) {\n    return {\n      type: type,\n      code: code,\n      body: body,\n      headers: headers\n    };\n  };\n\n  var createTimeoutResponse = function createTimeoutResponse(cb) {\n    return function (xhr) {\n      cb(createResponse('error', 0, 'Timeout', xhr.getAllResponseHeaders()));\n    };\n  };\n\n  var createFetchFunction = function createFetchFunction() {\n    var apiUrl = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var action = arguments[1]; // custom handler (should also handle file, load, error, progress and abort)\n\n    if (typeof action === 'function') {\n      return action;\n    } // no action supplied\n\n\n    if (!action || !isString(action.url)) {\n      return null;\n    } // set onload hanlder\n\n\n    var onload = action.onload || function (res) {\n      return res;\n    };\n\n    var onerror = action.onerror || function (res) {\n      return null;\n    }; // internal handler\n\n\n    return function (url, load, error, progress, abort, headers) {\n      // do local or remote request based on if the url is external\n      var request = sendRequest(url, apiUrl + action.url, Object.assign({}, action, {\n        responseType: 'blob'\n      }));\n\n      request.onload = function (xhr) {\n        // get headers\n        var headers = xhr.getAllResponseHeaders(); // get filename\n\n        var filename = getFileInfoFromHeaders(headers).name || getFilenameFromURL(url); // create response\n\n        load(createResponse('load', xhr.status, getFileFromBlob(onload(xhr.response), filename), headers));\n      };\n\n      request.onerror = function (xhr) {\n        error(createResponse('error', xhr.status, onerror(xhr.response) || xhr.statusText, xhr.getAllResponseHeaders()));\n      };\n\n      request.onheaders = function (xhr) {\n        headers(createResponse('headers', xhr.status, null, xhr.getAllResponseHeaders()));\n      };\n\n      request.ontimeout = createTimeoutResponse(error);\n      request.onprogress = progress;\n      request.onabort = abort; // should return request\n\n      return request;\n    };\n  };\n  /*\n  function signature:\n  (file, metadata, load, error, progress, abort) => {\n    return {\n    abort:() => {}\n  }\n  }\n  */\n\n\n  var createProcessorFunction = function createProcessorFunction() {\n    var apiUrl = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var action = arguments[1];\n    var name = arguments[2]; // custom handler (should also handle file, load, error, progress and abort)\n\n    if (typeof action === 'function') {\n      return function () {\n        for (var _len = arguments.length, params = Array(_len), _key = 0; _key < _len; _key++) {\n          params[_key] = arguments[_key];\n        }\n\n        return action.apply(undefined, [name].concat(params));\n      };\n    } // no action supplied\n\n\n    if (!action || !isString(action.url)) {\n      return null;\n    } // internal handler\n\n\n    return function (file, metadata, load, error, progress, abort) {\n      // set onload hanlder\n      var ondata = action.ondata || function (fd) {\n        return fd;\n      };\n\n      var onload = action.onload || function (res) {\n        return res;\n      };\n\n      var onerror = action.onerror || function (res) {\n        return null;\n      }; // no file received\n\n\n      if (!file) return; // create formdata object\n\n      var formData = new FormData(); // add metadata under same name\n\n      if (isObject(metadata)) {\n        formData.append(name, JSON.stringify(metadata));\n      } // Turn into an array of objects so no matter what the input, we can handle it the same way\n\n\n      (file instanceof Blob ? [{\n        name: null,\n        file: file\n      }] : file).forEach(function (item) {\n        formData.append(name, item.file, item.name === null ? item.file.name : '' + item.name + item.file.name);\n      }); // send request object\n\n      var request = sendRequest(ondata(formData), apiUrl + action.url, action);\n\n      request.onload = function (xhr) {\n        load(createResponse('load', xhr.status, onload(xhr.response), xhr.getAllResponseHeaders()));\n      };\n\n      request.onerror = function (xhr) {\n        error(createResponse('error', xhr.status, onerror(xhr.response) || xhr.statusText, xhr.getAllResponseHeaders()));\n      };\n\n      request.ontimeout = createTimeoutResponse(error);\n      request.onprogress = progress;\n      request.onabort = abort; // should return request\n\n      return request;\n    };\n  };\n  /*\n  function signature:\n  (uniqueFileId, load, error) => { }\n  */\n\n\n  var createRevertFunction = function createRevertFunction() {\n    var apiUrl = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var action = arguments[1]; // is custom implementation\n\n    if (typeof action === 'function') {\n      return action;\n    } // no action supplied, return stub function, interface will work, but file won't be removed\n\n\n    if (!action || !isString(action.url)) {\n      return function (uniqueFileId, load) {\n        return load();\n      };\n    } // set onload hanlder\n\n\n    var onload = action.onload || function (res) {\n      return res;\n    };\n\n    var onerror = action.onerror || function (res) {\n      return null;\n    }; // internal implementation\n\n\n    return function (uniqueFileId, load, error) {\n      var request = sendRequest(uniqueFileId, apiUrl + action.url, action // contains method, headers and withCredentials properties\n      );\n\n      request.onload = function (xhr) {\n        load(createResponse('load', xhr.status, onload(xhr.response), xhr.getAllResponseHeaders()));\n      };\n\n      request.onerror = function (xhr) {\n        error(createResponse('error', xhr.status, onerror(xhr.response) || xhr.statusText, xhr.getAllResponseHeaders()));\n      };\n\n      request.ontimeout = createTimeoutResponse(error);\n      return request;\n    };\n  };\n\n  var getRandomNumber = function getRandomNumber() {\n    var min = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var max = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    return min + Math.random() * (max - min);\n  };\n\n  var createPerceivedPerformanceUpdater = function createPerceivedPerformanceUpdater(cb) {\n    var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1000;\n    var tickMin = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 25;\n    var tickMax = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 250;\n    var timeout = null;\n    var start = Date.now();\n\n    var tick = function tick() {\n      var runtime = Date.now() - start;\n      var delay = getRandomNumber(tickMin, tickMax);\n\n      if (runtime + delay > duration) {\n        delay = runtime + delay - duration;\n      }\n\n      var progress = runtime / duration;\n\n      if (progress >= 1) {\n        cb(1);\n        return;\n      }\n\n      cb(progress);\n      timeout = setTimeout(tick, delay);\n    };\n\n    tick();\n    return {\n      clear: function clear() {\n        clearTimeout(timeout);\n      }\n    };\n  };\n\n  var createFileProcessor = function createFileProcessor(processFn) {\n    var state = {\n      complete: false,\n      perceivedProgress: 0,\n      perceivedPerformanceUpdater: null,\n      progress: null,\n      timestamp: null,\n      perceivedDuration: 0,\n      duration: 0,\n      request: null,\n      response: null\n    };\n\n    var process = function process(file, metadata) {\n      var progressFn = function progressFn() {\n        // we've not yet started the real download, stop here\n        // the request might not go through, for instance, there might be some server trouble\n        // if state.progress is null, the server does not allow computing progress and we show the spinner instead\n        if (state.duration === 0 || state.progress === null) {\n          return;\n        } // as we're now processing, fire the progress event\n\n\n        api.fire('progress', api.getProgress());\n      };\n\n      var completeFn = function completeFn() {\n        state.complete = true;\n        api.fire('load-perceived', state.response.body);\n      }; // let's start processing\n\n\n      api.fire('start'); // set request start\n\n      state.timestamp = Date.now(); // create perceived performance progress indicator\n\n      state.perceivedPerformanceUpdater = createPerceivedPerformanceUpdater(function (progress) {\n        state.perceivedProgress = progress;\n        state.perceivedDuration = Date.now() - state.timestamp;\n        progressFn(); // if fake progress is done, and a response has been received,\n        // and we've not yet called the complete method\n\n        if (state.response && state.perceivedProgress === 1 && !state.complete) {\n          // we done!\n          completeFn();\n        }\n      }, // random delay as in a list of files you start noticing\n      // files uploading at the exact same speed\n      getRandomNumber(750, 1500)); // remember request so we can abort it later\n\n      state.request = processFn( // the file to process\n      file, // the metadata to send along\n      metadata, // callbacks (load, error, progress, abort)\n      // load expects the body to be a server id if\n      // you want to make use of revert\n      function (response) {\n        // we put the response in state so we can access\n        // it outside of this method\n        state.response = isObject(response) ? response : {\n          type: 'load',\n          code: 200,\n          body: '' + response,\n          headers: {}\n        }; // update duration\n\n        state.duration = Date.now() - state.timestamp; // force progress to 1 as we're now done\n\n        state.progress = 1; // actual load is done let's share results\n\n        api.fire('load', state.response.body); // we are really done\n        // if perceived progress is 1 ( wait for perceived progress to complete )\n        // or if server does not support progress ( null )\n\n        if (state.perceivedProgress === 1) {\n          completeFn();\n        }\n      }, // error is expected to be an object with type, code, body\n      function (error) {\n        // cancel updater\n        state.perceivedPerformanceUpdater.clear(); // update others about this error\n\n        api.fire('error', isObject(error) ? error : {\n          type: 'error',\n          code: 0,\n          body: '' + error\n        });\n      }, // actual processing progress\n      function (computable, current, total) {\n        // update actual duration\n        state.duration = Date.now() - state.timestamp; // update actual progress\n\n        state.progress = computable ? current / total : null;\n        progressFn();\n      }, // abort does not expect a value\n      function () {\n        // stop updater\n        state.perceivedPerformanceUpdater.clear(); // fire the abort event so we can switch visuals\n\n        api.fire('abort', state.response ? state.response.body : null);\n      });\n    };\n\n    var abort = function abort() {\n      // no request running, can't abort\n      if (!state.request) {\n        return;\n      } // stop updater\n\n\n      state.perceivedPerformanceUpdater.clear(); // abort actual request\n\n      state.request.abort(); // if has response object, we've completed the request\n\n      state.complete = true;\n    };\n\n    var reset = function reset() {\n      abort();\n      state.complete = false;\n      state.perceivedProgress = 0;\n      state.progress = 0;\n      state.timestamp = null;\n      state.perceivedDuration = 0;\n      state.duration = 0;\n      state.request = null;\n      state.response = null;\n    };\n\n    var getProgress = function getProgress() {\n      return state.progress ? Math.min(state.progress, state.perceivedProgress) : null;\n    };\n\n    var getDuration = function getDuration() {\n      return Math.min(state.duration, state.perceivedDuration);\n    };\n\n    var api = Object.assign({}, on(), {\n      process: process,\n      // start processing file\n      abort: abort,\n      // abort active process request\n      getProgress: getProgress,\n      getDuration: getDuration,\n      reset: reset\n    });\n    return api;\n  };\n\n  var getFilenameWithoutExtension = function getFilenameWithoutExtension(name) {\n    return name.substr(0, name.lastIndexOf('.')) || name;\n  };\n\n  var ItemStatus = {\n    INIT: 1,\n    IDLE: 2,\n    PROCESSING_QUEUED: 9,\n    PROCESSING: 3,\n    PROCESSING_COMPLETE: 5,\n    PROCESSING_ERROR: 6,\n    PROCESSING_REVERT_ERROR: 10,\n    LOADING: 7,\n    LOAD_ERROR: 8\n  };\n\n  var createFileStub = function createFileStub(source) {\n    var data = [source.name, source.size, source.type]; // is blob or base64, then we need to set the name\n\n    if (source instanceof Blob || isBase64DataURI(source)) {\n      data[0] = source.name || getDateString();\n    } else if (isBase64DataURI(source)) {\n      // if is base64 data uri we need to determine the average size and type\n      data[1] = source.length;\n      data[2] = getMimeTypeFromBase64DataURI(source);\n    } else if (isString(source)) {\n      // url\n      data[0] = getFilenameFromURL(source);\n      data[1] = 0;\n      data[2] = 'application/octet-stream';\n    }\n\n    return {\n      name: data[0],\n      size: data[1],\n      type: data[2]\n    };\n  };\n\n  var FileOrigin$1 = {\n    INPUT: 1,\n    LIMBO: 2,\n    LOCAL: 3\n  };\n\n  var deepCloneObject = function deepCloneObject(src) {\n    if (!isObject(src)) return src;\n    var target = isArray(src) ? [] : {};\n\n    for (var key in src) {\n      if (!src.hasOwnProperty(key)) continue;\n      var v = src[key];\n      target[key] = v && isObject(v) ? deepCloneObject(v) : v;\n    }\n\n    return target;\n  };\n\n  var createItem = function createItem() {\n    var origin = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    var serverFileReference = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    var file = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null; // unique id for this item, is used to identify the item across views\n\n    var id = getUniqueId();\n    /**\n     * Internal item state\n     */\n\n    var state = {\n      // is archived\n      archived: false,\n      // removed from view\n      released: false,\n      // original source\n      source: null,\n      // file model reference\n      file: file,\n      // id of file on server\n      serverFileReference: serverFileReference,\n      // current item status\n      status: serverFileReference ? ItemStatus.PROCESSING_COMPLETE : ItemStatus.INIT,\n      // active processes\n      activeLoader: null,\n      activeProcessor: null\n    }; // callback used when abort processing is called to link back to the resolve method\n\n    var abortProcessingRequestComplete = null;\n    /**\n     * Externally added item metadata\n     */\n\n    var metadata = {}; // item data\n\n    var setStatus = function setStatus(status) {\n      return state.status = status;\n    }; // fire event unless the item has been archived\n\n\n    var fire = function fire(event) {\n      for (var _len = arguments.length, params = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        params[_key - 1] = arguments[_key];\n      }\n\n      if (state.released) return;\n      api.fire.apply(api, [event].concat(params));\n    }; // file data\n\n\n    var getFileExtension = function getFileExtension() {\n      return getExtensionFromFilename(state.file.name);\n    };\n\n    var getFileType = function getFileType() {\n      return state.file.type;\n    };\n\n    var getFileSize = function getFileSize() {\n      return state.file.size;\n    };\n\n    var getFile = function getFile() {\n      return state.file;\n    }; //\n    // logic to load a file\n    //\n\n\n    var load = function load(source, loader, onload) {\n      // remember the original item source\n      state.source = source; // file stub is already there\n\n      if (state.file) {\n        fire('load-skip');\n        return;\n      } // set a stub file object while loading the actual data\n\n\n      state.file = createFileStub(source); // starts loading\n\n      loader.on('init', function () {\n        fire('load-init');\n      }); // we'eve received a size indication, let's update the stub\n\n      loader.on('meta', function (meta) {\n        // set size of file stub\n        state.file.size = meta.size; // set name of file stub\n\n        state.file.filename = meta.filename; // if has received source, we done\n\n        if (meta.source) {\n          origin = FileOrigin$1.LIMBO;\n          state.serverFileReference = meta.source;\n          state.status = ItemStatus.PROCESSING_COMPLETE;\n        } // size has been updated\n\n\n        fire('load-meta');\n      }); // the file is now loading we need to update the progress indicators\n\n      loader.on('progress', function (progress) {\n        setStatus(ItemStatus.LOADING);\n        fire('load-progress', progress);\n      }); // an error was thrown while loading the file, we need to switch to error state\n\n      loader.on('error', function (error) {\n        setStatus(ItemStatus.LOAD_ERROR);\n        fire('load-request-error', error);\n      }); // user or another process aborted the file load (cannot retry)\n\n      loader.on('abort', function () {\n        setStatus(ItemStatus.INIT);\n        fire('load-abort');\n      }); // done loading\n\n      loader.on('load', function (file) {\n        // as we've now loaded the file the loader is no longer required\n        state.activeLoader = null; // called when file has loaded succesfully\n\n        var success = function success(result) {\n          // set (possibly) transformed file\n          state.file = result.size > 0 ? result : state.file; // file received\n\n          if (origin === FileOrigin$1.LIMBO && state.serverFileReference) {\n            setStatus(ItemStatus.PROCESSING_COMPLETE);\n          } else {\n            setStatus(ItemStatus.IDLE);\n          }\n\n          fire('load');\n        };\n\n        var error = function error(result) {\n          // set original file\n          state.file = file;\n          fire('load-meta');\n          setStatus(ItemStatus.LOAD_ERROR);\n          fire('load-file-error', result);\n        }; // if we already have a server file reference, we don't need to call the onload method\n\n\n        if (state.serverFileReference) {\n          success(file);\n          return;\n        } // no server id, let's give this file the full treatment\n\n\n        onload(file, success, error);\n      }); // set loader source data\n\n      loader.setSource(source); // set as active loader\n\n      state.activeLoader = loader; // load the source data\n\n      loader.load();\n    };\n\n    var retryLoad = function retryLoad() {\n      if (!state.activeLoader) {\n        return;\n      }\n\n      state.activeLoader.load();\n    };\n\n    var abortLoad = function abortLoad() {\n      if (!state.activeLoader) {\n        return;\n      }\n\n      state.activeLoader.abort();\n    }; //\n    // logic to process a file\n    //\n\n\n    var process = function process(processor, onprocess) {\n      // now processing\n      setStatus(ItemStatus.PROCESSING); // reset abort callback\n\n      abortProcessingRequestComplete = null; // if no file loaded we'll wait for the load event\n\n      if (!(state.file instanceof Blob)) {\n        api.on('load', function () {\n          process(processor, onprocess);\n        });\n        return;\n      } // setup processor\n\n\n      processor.on('load', function (serverFileReference) {\n        // need this id to be able to revert the upload\n        state.serverFileReference = serverFileReference;\n      });\n      processor.on('load-perceived', function (serverFileReference) {\n        // no longer required\n        state.activeProcessor = null; // need this id to be able to rever the upload\n\n        state.serverFileReference = serverFileReference;\n        setStatus(ItemStatus.PROCESSING_COMPLETE);\n        fire('process-complete', serverFileReference);\n      });\n      processor.on('start', function () {\n        fire('process-start');\n      });\n      processor.on('error', function (error) {\n        state.activeProcessor = null;\n        setStatus(ItemStatus.PROCESSING_ERROR);\n        fire('process-error', error);\n      });\n      processor.on('abort', function (serverFileReference) {\n        state.activeProcessor = null; // if file was uploaded but processing was cancelled during perceived processor time store file reference\n\n        state.serverFileReference = serverFileReference;\n        setStatus(ItemStatus.IDLE);\n        fire('process-abort'); // has timeout so doesn't interfere with remove action\n\n        if (abortProcessingRequestComplete) {\n          abortProcessingRequestComplete();\n        }\n      });\n      processor.on('progress', function (progress) {\n        fire('process-progress', progress);\n      }); // when successfully transformed\n\n      var success = function success(file) {\n        // if was archived in the mean time, don't process\n        if (state.archived) return; // process file!\n\n        processor.process(file, Object.assign({}, metadata));\n      }; // something went wrong during transform phase\n\n\n      var error = function error(result) {}; // start processing the file\n\n\n      onprocess(state.file, success, error); // set as active processor\n\n      state.activeProcessor = processor;\n    };\n\n    var requestProcessing = function requestProcessing() {\n      setStatus(ItemStatus.PROCESSING_QUEUED);\n    };\n\n    var abortProcessing = function abortProcessing() {\n      return new Promise(function (resolve) {\n        if (!state.activeProcessor) {\n          setStatus(ItemStatus.IDLE);\n          fire('process-abort');\n          resolve();\n          return;\n        }\n\n        abortProcessingRequestComplete = function abortProcessingRequestComplete() {\n          resolve();\n        };\n\n        state.activeProcessor.abort();\n      });\n    }; //\n    // logic to revert a processed file\n    //\n\n\n    var revert = function revert(revertFileUpload, forceRevert) {\n      return new Promise(function (resolve, reject) {\n        // cannot revert without a server id for this process\n        if (state.serverFileReference === null) {\n          resolve();\n          return;\n        } // revert the upload (fire and forget)\n\n\n        revertFileUpload(state.serverFileReference, function () {\n          // reset file server id as now it's no available on the server\n          state.serverFileReference = null;\n          resolve();\n        }, function (error) {\n          // don't set error state when reverting is optional, it will always resolve\n          if (!forceRevert) {\n            resolve();\n            return;\n          } // oh no errors\n\n\n          setStatus(ItemStatus.PROCESSING_REVERT_ERROR);\n          fire('process-revert-error');\n          reject(error);\n        }); // fire event\n\n        setStatus(ItemStatus.IDLE);\n        fire('process-revert');\n      });\n    }; // exposed methods\n\n\n    var _setMetadata = function _setMetadata(key, value, silent) {\n      var keys = key.split('.');\n      var root = keys[0];\n      var last = keys.pop();\n      var data = metadata;\n      keys.forEach(function (key) {\n        return data = data[key];\n      }); // compare old value against new value, if they're the same, we're not updating\n\n      if (JSON.stringify(data[last]) === JSON.stringify(value)) {\n        return;\n      } // update value\n\n\n      data[last] = value;\n      if (silent) return;\n      fire('metadata-update', {\n        key: root,\n        value: metadata[root]\n      });\n    };\n\n    var getMetadata = function getMetadata(key) {\n      return deepCloneObject(key ? metadata[key] : metadata);\n    };\n\n    var api = Object.assign({\n      id: {\n        get: function get() {\n          return id;\n        }\n      },\n      origin: {\n        get: function get() {\n          return origin;\n        }\n      },\n      serverId: {\n        get: function get() {\n          return state.serverFileReference;\n        }\n      },\n      status: {\n        get: function get() {\n          return state.status;\n        }\n      },\n      filename: {\n        get: function get() {\n          return state.file.name;\n        }\n      },\n      filenameWithoutExtension: {\n        get: function get() {\n          return getFilenameWithoutExtension(state.file.name);\n        }\n      },\n      fileExtension: {\n        get: getFileExtension\n      },\n      fileType: {\n        get: getFileType\n      },\n      fileSize: {\n        get: getFileSize\n      },\n      file: {\n        get: getFile\n      },\n      source: {\n        get: function get() {\n          return state.source;\n        }\n      },\n      getMetadata: getMetadata,\n      setMetadata: function setMetadata(key, value, silent) {\n        if (isObject(key)) {\n          var data = key;\n          Object.keys(data).forEach(function (key) {\n            _setMetadata(key, data[key], value);\n          });\n          return key;\n        }\n\n        _setMetadata(key, value, silent);\n\n        return value;\n      },\n      extend: function extend(name, handler) {\n        return itemAPI[name] = handler;\n      },\n      abortLoad: abortLoad,\n      retryLoad: retryLoad,\n      requestProcessing: requestProcessing,\n      abortProcessing: abortProcessing,\n      load: load,\n      process: process,\n      revert: revert\n    }, on(), {\n      release: function release() {\n        return state.released = true;\n      },\n      released: {\n        get: function get() {\n          return state.released;\n        }\n      },\n      archive: function archive() {\n        return state.archived = true;\n      },\n      archived: {\n        get: function get() {\n          return state.archived;\n        }\n      }\n    }); // create it here instead of returning it instantly so we can extend it later\n\n    var itemAPI = createObject(api);\n    return itemAPI;\n  };\n\n  var getItemIndexByQuery = function getItemIndexByQuery(items, query) {\n    // just return first index\n    if (isEmpty(query)) {\n      return 0;\n    } // invalid queries\n\n\n    if (!isString(query)) {\n      return -1;\n    } // return item by id (or -1 if not found)\n\n\n    return items.findIndex(function (item) {\n      return item.id === query;\n    });\n  };\n\n  var getItemById = function getItemById(items, itemId) {\n    var index = getItemIndexByQuery(items, itemId);\n\n    if (index < 0) {\n      return;\n    }\n\n    return items[index] || null;\n  };\n\n  var fetchLocal = function fetchLocal(url, load, error, progress, abort, headers) {\n    var request = sendRequest(null, url, {\n      method: 'GET',\n      responseType: 'blob'\n    });\n\n    request.onload = function (xhr) {\n      // get headers\n      var headers = xhr.getAllResponseHeaders(); // get filename\n\n      var filename = getFileInfoFromHeaders(headers).name || getFilenameFromURL(url); // create response\n\n      load(createResponse('load', xhr.status, getFileFromBlob(xhr.response, filename), headers));\n    };\n\n    request.onerror = function (xhr) {\n      error(createResponse('error', xhr.status, xhr.statusText, xhr.getAllResponseHeaders()));\n    };\n\n    request.onheaders = function (xhr) {\n      headers(createResponse('headers', xhr.status, null, xhr.getAllResponseHeaders()));\n    };\n\n    request.ontimeout = createTimeoutResponse(error);\n    request.onprogress = progress;\n    request.onabort = abort; // should return request\n\n    return request;\n  };\n\n  var getDomainFromURL = function getDomainFromURL(url) {\n    if (url.indexOf('//') === 0) {\n      url = location.protocol + url;\n    }\n\n    return url.toLowerCase().replace('blob:', '').replace(/([a-z])?:\\/\\//, '$1').split('/')[0];\n  };\n\n  var isExternalURL = function isExternalURL(url) {\n    return (url.indexOf(':') > -1 || url.indexOf('//') > -1) && getDomainFromURL(location.href) !== getDomainFromURL(url);\n  };\n\n  var isFile = function isFile(value) {\n    return value instanceof File || value instanceof Blob && value.name;\n  };\n\n  var dynamicLabel = function dynamicLabel(label) {\n    return function () {\n      return isFunction(label) ? label.apply(undefined, arguments) : label;\n    };\n  };\n\n  var isMockItem = function isMockItem(item) {\n    return !isFile(item.file);\n  };\n\n  var listUpdated = function listUpdated(dispatch, state) {\n    clearTimeout(state.listUpdateTimeout);\n    state.listUpdateTimeout = setTimeout(function () {\n      dispatch('DID_UPDATE_ITEMS', {\n        items: getActiveItems(state.items)\n      });\n    }, 0);\n  };\n\n  var optionalPromise = function optionalPromise(fn) {\n    for (var _len = arguments.length, params = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      params[_key - 1] = arguments[_key];\n    }\n\n    return new Promise(function (resolve) {\n      if (!fn) {\n        return resolve(true);\n      }\n\n      var result = fn.apply(undefined, params);\n\n      if (result == null) {\n        return resolve(true);\n      }\n\n      if (typeof result === 'boolean') {\n        return resolve(result);\n      }\n\n      if (typeof result.then === 'function') {\n        result.then(resolve);\n      }\n    });\n  }; // returns item based on state\n\n\n  var getItemByQueryFromState = function getItemByQueryFromState(state, itemHandler) {\n    return function () {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          query = _ref.query,\n          _ref$success = _ref.success,\n          success = _ref$success === undefined ? function () {} : _ref$success,\n          _ref$failure = _ref.failure,\n          failure = _ref$failure === undefined ? function () {} : _ref$failure;\n\n      var item = getItemByQuery(state.items, query);\n\n      if (!item) {\n        failure({\n          error: createResponse('error', 0, 'Item not found'),\n          file: null\n        });\n        return;\n      }\n\n      itemHandler(item, success, failure);\n    };\n  };\n\n  var actions = function actions(dispatch, query, state) {\n    return {\n      /**\n       * Aborts all ongoing processes\n       */\n      ABORT_ALL: function ABORT_ALL() {\n        getActiveItems(state.items).forEach(function (item) {\n          item.abortLoad();\n          item.abortProcessing();\n        });\n      },\n\n      /**\n       * Sets initial files\n       */\n      DID_SET_FILES: function DID_SET_FILES(_ref2) {\n        var _ref2$value = _ref2.value,\n            value = _ref2$value === undefined ? [] : _ref2$value; // map values to file objects\n\n        var files = value.map(function (file) {\n          return {\n            source: file.source ? file.source : file,\n            options: file.options\n          };\n        }); // loop over files, if file is in list, leave it be, if not, remove\n        // test if items should be moved\n\n        var activeItems = getActiveItems(state.items);\n        activeItems.forEach(function (item) {\n          // if item not is in new value, remove\n          if (!files.find(function (file) {\n            return file.source === item.source || file.source === item.file;\n          })) {\n            dispatch('REMOVE_ITEM', {\n              query: item\n            });\n          }\n        }); // add new files\n\n        activeItems = getActiveItems(state.items);\n        files.forEach(function (file, index) {\n          // if file is already in list\n          if (activeItems.find(function (item) {\n            return item.source === file.source || item.file === file.source;\n          })) return; // not in list, add\n\n          dispatch('ADD_ITEM', Object.assign({}, file, {\n            interactionMethod: InteractionMethod.NONE,\n            index: index\n          }));\n        });\n      },\n      DID_UPDATE_ITEM_METADATA: function DID_UPDATE_ITEM_METADATA(_ref3) {\n        var id = _ref3.id;\n        var item = getItemById(state.items, id); // only revert and attempt to upload when we're uploading to a server\n\n        if (!query('IS_ASYNC')) {\n          // should we update the output data\n          applyFilterChain('SHOULD_PREPARE_OUTPUT', false, {\n            item: item,\n            query: query\n          }).then(function (shouldPrepareOutput) {\n            if (!shouldPrepareOutput) {\n              return;\n            }\n\n            dispatch('REQUEST_PREPARE_OUTPUT', {\n              query: id,\n              item: item,\n              ready: function ready(file) {\n                dispatch('DID_PREPARE_OUTPUT', {\n                  id: id,\n                  file: file\n                });\n              }\n            }, true);\n          });\n          return;\n        } // for async scenarios\n\n\n        var upload = function upload() {\n          // we push this forward a bit so the interface is updated correctly\n          setTimeout(function () {\n            dispatch('REQUEST_ITEM_PROCESSING', {\n              query: id\n            });\n          }, 32);\n        };\n\n        var revert = function revert(doUpload) {\n          item.revert(createRevertFunction(state.options.server.url, state.options.server.revert), query('GET_FORCE_REVERT')).then(doUpload ? upload : function () {}).catch(function () {});\n        };\n\n        var abort = function abort(doUpload) {\n          item.abortProcessing().then(doUpload ? upload : function () {});\n        }; // if we should re-upload the file immidiately\n\n\n        if (item.status === ItemStatus.PROCESSING_COMPLETE) {\n          return revert(state.options.instantUpload);\n        } // if currently uploading, cancel upload\n\n\n        if (item.status === ItemStatus.PROCESSING) {\n          return abort(state.options.instantUpload);\n        }\n\n        if (state.options.instantUpload) {\n          upload();\n        }\n      },\n\n      /**\n       * @param source\n       * @param index\n       * @param interactionMethod\n       */\n      ADD_ITEM: function ADD_ITEM(_ref4) {\n        var source = _ref4.source,\n            index = _ref4.index,\n            interactionMethod = _ref4.interactionMethod,\n            _ref4$success = _ref4.success,\n            success = _ref4$success === undefined ? function () {} : _ref4$success,\n            _ref4$failure = _ref4.failure,\n            failure = _ref4$failure === undefined ? function () {} : _ref4$failure,\n            _ref4$options = _ref4.options,\n            options = _ref4$options === undefined ? {} : _ref4$options; // if no source supplied\n\n        if (isEmpty(source)) {\n          failure({\n            error: createResponse('error', 0, 'No source'),\n            file: null\n          });\n          return;\n        } // filter out invalid file items, used to filter dropped directory contents\n\n\n        if (isFile(source) && state.options.ignoredFiles.includes(source.name.toLowerCase())) {\n          // fail silently\n          return;\n        } // test if there's still room in the list of files\n\n\n        if (!hasRoomForItem(state)) {\n          // if multiple allowed, we can't replace\n          // or if only a single item is allowed but we're not allowed to replace it we exit\n          if (state.options.allowMultiple || !state.options.allowMultiple && !state.options.allowReplace) {\n            var error = createResponse('warning', 0, 'Max files');\n            dispatch('DID_THROW_MAX_FILES', {\n              source: source,\n              error: error\n            });\n            failure({\n              error: error,\n              file: null\n            });\n            return;\n          } // let's replace the item\n          // id of first item we're about to remove\n\n\n          var _item = getActiveItems(state.items)[0]; // if has been processed remove it from the server as well\n\n          if (_item.status === ItemStatus.PROCESSING_COMPLETE || _item.status === ItemStatus.PROCESSING_REVERT_ERROR) {\n            var forceRevert = query('GET_FORCE_REVERT');\n\n            _item.revert(createRevertFunction(state.options.server.url, state.options.server.revert), forceRevert).then(function () {\n              if (!forceRevert) return; // try to add now\n\n              dispatch('ADD_ITEM', {\n                source: source,\n                index: index,\n                interactionMethod: interactionMethod,\n                success: success,\n                failure: failure,\n                options: options\n              });\n            }).catch(function () {}); // no need to handle this catch state for now\n\n\n            if (forceRevert) return;\n          } // remove first item as it will be replaced by this item\n\n\n          dispatch('REMOVE_ITEM', {\n            query: _item.id\n          });\n        } // where did the file originate\n\n\n        var origin = options.type === 'local' ? FileOrigin$1.LOCAL : options.type === 'limbo' ? FileOrigin$1.LIMBO : FileOrigin$1.INPUT; // create a new blank item\n\n        var item = createItem( // where did this file come from\n        origin, // an input file never has a server file reference\n        origin === FileOrigin$1.INPUT ? null : source, // file mock data, if defined\n        options.file); // set initial meta data\n\n        Object.keys(options.metadata || {}).forEach(function (key) {\n          item.setMetadata(key, options.metadata[key]);\n        }); // created the item, let plugins add methods\n\n        applyFilters('DID_CREATE_ITEM', item, {\n          query: query,\n          dispatch: dispatch\n        }); // add item to list\n\n        insertItem(state.items, item, index); // get a quick reference to the item id\n\n        var id = item.id; // observe item events\n\n        item.on('load-init', function () {\n          dispatch('DID_START_ITEM_LOAD', {\n            id: id\n          });\n        });\n        item.on('load-meta', function () {\n          dispatch('DID_UPDATE_ITEM_META', {\n            id: id\n          });\n        });\n        item.on('load-progress', function (progress) {\n          dispatch('DID_UPDATE_ITEM_LOAD_PROGRESS', {\n            id: id,\n            progress: progress\n          });\n        });\n        item.on('load-request-error', function (error) {\n          var mainStatus = dynamicLabel(state.options.labelFileLoadError)(error); // is client error, no way to recover\n\n          if (error.code >= 400 && error.code < 500) {\n            dispatch('DID_THROW_ITEM_INVALID', {\n              id: id,\n              error: error,\n              status: {\n                main: mainStatus,\n                sub: error.code + ' (' + error.body + ')'\n              }\n            }); // reject the file so can be dealt with through API\n\n            failure({\n              error: error,\n              file: createItemAPI(item)\n            });\n            return;\n          } // is possible server error, so might be possible to retry\n\n\n          dispatch('DID_THROW_ITEM_LOAD_ERROR', {\n            id: id,\n            error: error,\n            status: {\n              main: mainStatus,\n              sub: state.options.labelTapToRetry\n            }\n          });\n        });\n        item.on('load-file-error', function (error) {\n          dispatch('DID_THROW_ITEM_INVALID', Object.assign({}, error, {\n            id: id\n          }));\n        });\n        item.on('load-abort', function () {\n          dispatch('REMOVE_ITEM', {\n            query: id\n          });\n        });\n        item.on('load-skip', function () {\n          dispatch('COMPLETE_LOAD_ITEM', {\n            query: id,\n            item: item,\n            data: {\n              source: source,\n              success: success\n            }\n          });\n        });\n        item.on('load', function () {\n          var handleAdd = function handleAdd(shouldAdd) {\n            // no should not add this file\n            if (!shouldAdd) {\n              dispatch('REMOVE_ITEM', {\n                query: id\n              });\n              return;\n            } // now interested in metadata updates\n\n\n            item.on('metadata-update', function (change) {\n              dispatch('DID_UPDATE_ITEM_METADATA', {\n                id: id,\n                change: change\n              });\n            }); // let plugins decide if the output data should be prepared at this point\n            // means we'll do this and wait for idle state\n\n            applyFilterChain('SHOULD_PREPARE_OUTPUT', false, {\n              item: item,\n              query: query\n            }).then(function (shouldPrepareOutput) {\n              var loadComplete = function loadComplete() {\n                dispatch('COMPLETE_LOAD_ITEM', {\n                  query: id,\n                  item: item,\n                  data: {\n                    source: source,\n                    success: success\n                  }\n                });\n                listUpdated(dispatch, state);\n              }; // exit\n\n\n              if (shouldPrepareOutput) {\n                // wait for idle state and then run PREPARE_OUTPUT\n                dispatch('REQUEST_PREPARE_OUTPUT', {\n                  query: id,\n                  item: item,\n                  ready: function ready(file) {\n                    dispatch('DID_PREPARE_OUTPUT', {\n                      id: id,\n                      file: file\n                    });\n                    loadComplete();\n                  }\n                }, true);\n                return;\n              }\n\n              loadComplete();\n            });\n          }; // item loaded, allow plugins to\n          // - read data (quickly)\n          // - add metadata\n\n\n          applyFilterChain('DID_LOAD_ITEM', item, {\n            query: query,\n            dispatch: dispatch\n          }).then(function () {\n            optionalPromise(query('GET_BEFORE_ADD_FILE'), createItemAPI(item)).then(handleAdd);\n          }).catch(function () {\n            handleAdd(false);\n          });\n        });\n        item.on('process-start', function () {\n          dispatch('DID_START_ITEM_PROCESSING', {\n            id: id\n          });\n        });\n        item.on('process-progress', function (progress) {\n          dispatch('DID_UPDATE_ITEM_PROCESS_PROGRESS', {\n            id: id,\n            progress: progress\n          });\n        });\n        item.on('process-error', function (error) {\n          dispatch('DID_THROW_ITEM_PROCESSING_ERROR', {\n            id: id,\n            error: error,\n            status: {\n              main: dynamicLabel(state.options.labelFileProcessingError)(error),\n              sub: state.options.labelTapToRetry\n            }\n          });\n        });\n        item.on('process-revert-error', function (error) {\n          dispatch('DID_THROW_ITEM_PROCESSING_REVERT_ERROR', {\n            id: id,\n            error: error,\n            status: {\n              main: dynamicLabel(state.options.labelFileProcessingRevertError)(error),\n              sub: state.options.labelTapToRetry\n            }\n          });\n        });\n        item.on('process-complete', function (serverFileReference) {\n          dispatch('DID_COMPLETE_ITEM_PROCESSING', {\n            id: id,\n            error: null,\n            serverFileReference: serverFileReference\n          });\n        });\n        item.on('process-abort', function () {\n          dispatch('DID_ABORT_ITEM_PROCESSING', {\n            id: id\n          });\n        });\n        item.on('process-revert', function () {\n          dispatch('DID_REVERT_ITEM_PROCESSING', {\n            id: id\n          });\n        }); // let view know the item has been inserted\n\n        dispatch('DID_ADD_ITEM', {\n          id: id,\n          index: index,\n          interactionMethod: interactionMethod\n        });\n        listUpdated(dispatch, state); // start loading the source\n\n        var _ref5 = state.options.server || {},\n            url = _ref5.url,\n            load = _ref5.load,\n            restore = _ref5.restore,\n            fetch = _ref5.fetch;\n\n        item.load(source, // this creates a function that loads the file based on the type of file (string, base64, blob, file) and location of file (local, remote, limbo)\n        createFileLoader(origin === FileOrigin$1.INPUT ? // input\n        isString(source) && isExternalURL(source) ? createFetchFunction(url, fetch) // remote url\n        : fetchLocal // local url\n        : // limbo or local\n        origin === FileOrigin$1.LIMBO ? createFetchFunction(url, restore) // limbo\n        : createFetchFunction(url, load) // local\n        ), // called when the file is loaded so it can be piped through the filters\n        function (file, success, error) {\n          // let's process the file\n          applyFilterChain('LOAD_FILE', file, {\n            query: query\n          }).then(success).catch(error);\n        });\n      },\n      REQUEST_PREPARE_OUTPUT: function REQUEST_PREPARE_OUTPUT(_ref6) {\n        var item = _ref6.item,\n            ready = _ref6.ready; // allow plugins to alter the file data\n\n        applyFilterChain('PREPARE_OUTPUT', item.file, {\n          query: query,\n          item: item\n        }).then(function (result) {\n          applyFilterChain('COMPLETE_PREPARE_OUTPUT', result, {\n            query: query,\n            item: item\n          }).then(function (result) {\n            ready(result);\n          });\n        });\n      },\n      COMPLETE_LOAD_ITEM: function COMPLETE_LOAD_ITEM(_ref7) {\n        var item = _ref7.item,\n            data = _ref7.data;\n        var success = data.success,\n            source = data.source; // let interface know the item has loaded\n\n        dispatch('DID_LOAD_ITEM', {\n          id: item.id,\n          error: null,\n          serverFileReference: item.origin === FileOrigin$1.INPUT ? null : source\n        }); // item has been successfully loaded and added to the\n        // list of items so can now be safely returned for use\n\n        success(createItemAPI(item)); // if this is a local server file we need to show a different state\n\n        if (item.origin === FileOrigin$1.LOCAL) {\n          dispatch('DID_LOAD_LOCAL_ITEM', {\n            id: item.id\n          });\n          return;\n        } // if is a temp server file we prevent async upload call here (as the file is already on the server)\n\n\n        if (item.origin === FileOrigin$1.LIMBO) {\n          dispatch('DID_COMPLETE_ITEM_PROCESSING', {\n            id: item.id,\n            error: null,\n            serverFileReference: source\n          });\n          return;\n        } // id we are allowed to upload the file immidiately, lets do it\n\n\n        if (query('IS_ASYNC') && state.options.instantUpload) {\n          dispatch('REQUEST_ITEM_PROCESSING', {\n            query: item.id\n          });\n        }\n      },\n      RETRY_ITEM_LOAD: getItemByQueryFromState(state, function (item) {\n        // try loading the source one more time\n        item.retryLoad();\n      }),\n      REQUEST_ITEM_PROCESSING: getItemByQueryFromState(state, function (item, success, failure) {\n        // cannot be queued (or is already queued)\n        var itemCanBeQueuedForProcessing = // waiting for something\n        item.status === ItemStatus.IDLE || // processing went wrong earlier\n        item.status === ItemStatus.PROCESSING_ERROR; // not ready to be processed\n\n        if (!itemCanBeQueuedForProcessing) {\n          var process = function process() {\n            setTimeout(function () {\n              dispatch('REQUEST_ITEM_PROCESSING', {\n                query: item,\n                success: success,\n                failure: failure\n              });\n            }, 32);\n          }; // if already done processing or tried to revert but didn't work, try again\n\n\n          if (item.status === ItemStatus.PROCESSING_COMPLETE || item.status === ItemStatus.PROCESSING_REVERT_ERROR) {\n            item.revert(createRevertFunction(state.options.server.url, state.options.server.revert), query('GET_FORCE_REVERT')).then(process).catch(function () {}); // don't continue with processing if something went wrong\n          } else if (item.status === ItemStatus.PROCESSING) {\n            item.abortProcessing().then(process);\n          }\n\n          return;\n        } // already queued for processing\n\n\n        if (item.status === ItemStatus.PROCESSING_QUEUED) return;\n        item.requestProcessing();\n        dispatch('DID_REQUEST_ITEM_PROCESSING', {\n          id: item.id\n        });\n        dispatch('PROCESS_ITEM', {\n          query: item,\n          success: success,\n          failure: failure\n        }, true);\n      }),\n      PROCESS_ITEM: getItemByQueryFromState(state, function (item, success, failure) {\n        var maxParallelUploads = query('GET_MAX_PARALLEL_UPLOADS');\n        var totalCurrentUploads = query('GET_ITEMS_BY_STATUS', ItemStatus.PROCESSING).length; // queue and wait till queue is freed up\n\n        if (totalCurrentUploads === maxParallelUploads) {\n          // queue for later processing\n          state.processingQueue.push({\n            item: item,\n            success: success,\n            failure: failure\n          }); // stop it!\n\n          return;\n        } // if was not queued or is already processing exit here\n\n\n        if (item.status === ItemStatus.PROCESSING) return; // we done function\n\n        item.onOnce('process-complete', function () {\n          // done!\n          success(createItemAPI(item)); // process queueud items\n\n          var queued = state.processingQueue.shift();\n          if (!queued) return;\n          dispatch('PROCESS_ITEM', {\n            query: queued.item,\n            success: queued.success,\n            failure: queued.failure\n          }, true);\n        }); // we error function\n\n        item.onOnce('process-error', function (error) {\n          failure({\n            error: error,\n            file: createItemAPI(item)\n          });\n        }); // start file processing\n\n        item.process(createFileProcessor(createProcessorFunction(state.options.server.url, state.options.server.process, state.options.name)), // called when the file is about to be processed so it can be piped through the transform filters\n        function (file, success, error) {\n          // allow plugins to alter the file data\n          applyFilterChain('PREPARE_OUTPUT', file, {\n            query: query,\n            item: item\n          }).then(function (file) {\n            dispatch('DID_PREPARE_OUTPUT', {\n              id: item.id,\n              file: file\n            });\n            success(file);\n          }).catch(error);\n        });\n      }),\n      RETRY_ITEM_PROCESSING: getItemByQueryFromState(state, function (item) {\n        dispatch('REQUEST_ITEM_PROCESSING', {\n          query: item\n        });\n      }),\n      REQUEST_REMOVE_ITEM: getItemByQueryFromState(state, function (item) {\n        optionalPromise(query('GET_BEFORE_REMOVE_FILE'), createItemAPI(item)).then(function (shouldRemove) {\n          if (!shouldRemove) {\n            return;\n          }\n\n          dispatch('REMOVE_ITEM', {\n            query: item\n          });\n        });\n      }),\n      RELEASE_ITEM: getItemByQueryFromState(state, function (item) {\n        item.release();\n      }),\n      REMOVE_ITEM: getItemByQueryFromState(state, function (item, success) {\n        var removeFromView = function removeFromView() {\n          // get id reference\n          var id = item.id; // archive the item, this does not remove it from the list\n\n          getItemById(state.items, id).archive(); // tell the view the item has been removed\n\n          dispatch('DID_REMOVE_ITEM', {\n            id: id,\n            item: item\n          }); // now the list has been modified\n\n          listUpdated(dispatch, state); // correctly removed\n\n          success(createItemAPI(item));\n        }; // if this is a local file and the server.remove function has been configured, send source there so dev can remove file from server\n\n\n        var server = state.options.server;\n\n        if (item.origin === FileOrigin$1.LOCAL && server && isFunction(server.remove)) {\n          dispatch('DID_START_ITEM_REMOVE', {\n            id: item.id\n          });\n          server.remove(item.source, function () {\n            return removeFromView();\n          }, function (status) {\n            dispatch('DID_THROW_ITEM_REMOVE_ERROR', {\n              id: item.id,\n              error: createResponse('error', 0, status, null),\n              status: {\n                main: dynamicLabel(state.options.labelFileRemoveError)(status),\n                sub: state.options.labelTapToRetry\n              }\n            });\n          });\n        } else {\n          removeFromView();\n        }\n      }),\n      ABORT_ITEM_LOAD: getItemByQueryFromState(state, function (item) {\n        item.abortLoad();\n      }),\n      ABORT_ITEM_PROCESSING: getItemByQueryFromState(state, function (item) {\n        // test if is already processed\n        if (item.serverId) {\n          dispatch('REVERT_ITEM_PROCESSING', {\n            id: item.id\n          });\n          return;\n        } // abort\n\n\n        item.abortProcessing().then(function () {\n          var shouldRemove = state.options.instantUpload;\n\n          if (shouldRemove) {\n            dispatch('REMOVE_ITEM', {\n              query: item.id\n            });\n          }\n        });\n      }),\n      REQUEST_REVERT_ITEM_PROCESSING: getItemByQueryFromState(state, function (item) {\n        // not instant uploading, revert immidiately\n        if (!state.options.instantUpload) {\n          dispatch('REVERT_ITEM_PROCESSING', {\n            query: item\n          });\n          return;\n        } // if we're instant uploading the file will also be removed if we revert,\n        // so if a before remove file hook is defined we need to run it now\n\n\n        var handleRevert = function handleRevert(shouldRevert) {\n          if (!shouldRevert) return;\n          dispatch('REVERT_ITEM_PROCESSING', {\n            query: item\n          });\n        };\n\n        var fn = query('GET_BEFORE_REMOVE_FILE');\n\n        if (!fn) {\n          return handleRevert(true);\n        }\n\n        var requestRemoveResult = fn(createItemAPI(item));\n\n        if (requestRemoveResult == null) {\n          // undefined or null\n          return handleRevert(true);\n        }\n\n        if (typeof requestRemoveResult === 'boolean') {\n          return handleRevert(requestRemoveResult);\n        }\n\n        if (typeof requestRemoveResult.then === 'function') {\n          requestRemoveResult.then(handleRevert);\n        }\n      }),\n      REVERT_ITEM_PROCESSING: getItemByQueryFromState(state, function (item) {\n        item.revert(createRevertFunction(state.options.server.url, state.options.server.revert), query('GET_FORCE_REVERT')).then(function () {\n          var shouldRemove = state.options.instantUpload || isMockItem(item);\n\n          if (shouldRemove) {\n            dispatch('REMOVE_ITEM', {\n              query: item.id\n            });\n          }\n        }).catch(function () {});\n      }),\n      SET_OPTIONS: function SET_OPTIONS(_ref8) {\n        var options = _ref8.options;\n        forin(options, function (key, value) {\n          dispatch('SET_' + fromCamels(key, '_').toUpperCase(), {\n            value: value\n          });\n        });\n      }\n    };\n  };\n\n  var formatFilename = function formatFilename(name) {\n    return name;\n  };\n\n  var createElement$1 = function createElement(tagName) {\n    return document.createElement(tagName);\n  };\n\n  var text = function text(node, value) {\n    var textNode = node.childNodes[0];\n\n    if (!textNode) {\n      textNode = document.createTextNode(value);\n      node.appendChild(textNode);\n    } else if (value !== textNode.nodeValue) {\n      textNode.nodeValue = value;\n    }\n  };\n\n  var polarToCartesian = function polarToCartesian(centerX, centerY, radius, angleInDegrees) {\n    var angleInRadians = (angleInDegrees % 360 - 90) * Math.PI / 180.0;\n    return {\n      x: centerX + radius * Math.cos(angleInRadians),\n      y: centerY + radius * Math.sin(angleInRadians)\n    };\n  };\n\n  var describeArc = function describeArc(x, y, radius, startAngle, endAngle, arcSweep) {\n    var start = polarToCartesian(x, y, radius, endAngle);\n    var end = polarToCartesian(x, y, radius, startAngle);\n    return ['M', start.x, start.y, 'A', radius, radius, 0, arcSweep, 0, end.x, end.y].join(' ');\n  };\n\n  var percentageArc = function percentageArc(x, y, radius, from, to) {\n    var arcSweep = 1;\n\n    if (to > from && to - from <= 0.5) {\n      arcSweep = 0;\n    }\n\n    if (from > to && from - to >= 0.5) {\n      arcSweep = 0;\n    }\n\n    return describeArc(x, y, radius, Math.min(0.9999, from) * 360, Math.min(0.9999, to) * 360, arcSweep);\n  };\n\n  var create$7 = function create(_ref) {\n    var root = _ref.root,\n        props = _ref.props; // start at 0\n\n    props.spin = false;\n    props.progress = 0;\n    props.opacity = 0; // svg\n\n    var svg = createElement('svg');\n    root.ref.path = createElement('path', {\n      'stroke-width': 2,\n      'stroke-linecap': 'round'\n    });\n    svg.appendChild(root.ref.path);\n    root.ref.svg = svg;\n    root.appendChild(svg);\n  };\n\n  var write$5 = function write(_ref2) {\n    var root = _ref2.root,\n        props = _ref2.props;\n\n    if (props.opacity === 0) {\n      return;\n    }\n\n    if (props.align) {\n      root.element.dataset.align = props.align;\n    } // get width of stroke\n\n\n    var ringStrokeWidth = parseInt(attr(root.ref.path, 'stroke-width'), 10); // calculate size of ring\n\n    var size = root.rect.element.width * 0.5; // ring state\n\n    var ringFrom = 0;\n    var ringTo = 0; // now in busy mode\n\n    if (props.spin) {\n      ringFrom = 0;\n      ringTo = 0.5;\n    } else {\n      ringFrom = 0;\n      ringTo = props.progress;\n    } // get arc path\n\n\n    var coordinates = percentageArc(size, size, size - ringStrokeWidth, ringFrom, ringTo); // update progress bar\n\n    attr(root.ref.path, 'd', coordinates); // hide while contains 0 value\n\n    attr(root.ref.path, 'stroke-opacity', props.spin || props.progress > 0 ? 1 : 0);\n  };\n\n  var progressIndicator = createView({\n    tag: 'div',\n    name: 'progress-indicator',\n    ignoreRectUpdate: true,\n    ignoreRect: true,\n    create: create$7,\n    write: write$5,\n    mixins: {\n      apis: ['progress', 'spin', 'align'],\n      styles: ['opacity'],\n      animations: {\n        opacity: {\n          type: 'tween',\n          duration: 500\n        },\n        progress: {\n          type: 'spring',\n          stiffness: 0.95,\n          damping: 0.65,\n          mass: 10\n        }\n      }\n    }\n  });\n\n  var create$8 = function create(_ref) {\n    var root = _ref.root,\n        props = _ref.props;\n    root.element.title = props.label;\n    root.element.innerHTML = props.icon || '';\n    props.disabled = false;\n  };\n\n  var write$6 = function write(_ref2) {\n    var root = _ref2.root,\n        props = _ref2.props;\n\n    if (props.opacity === 0 && !props.disabled) {\n      props.disabled = true;\n      attr(root.element, 'disabled', 'disabled');\n    } else if (props.opacity > 0 && props.disabled) {\n      props.disabled = false;\n      root.element.removeAttribute('disabled');\n    }\n  };\n\n  var fileActionButton = createView({\n    tag: 'button',\n    attributes: {\n      type: 'button'\n    },\n    ignoreRect: true,\n    ignoreRectUpdate: true,\n    name: 'file-action-button',\n    mixins: {\n      apis: ['label'],\n      styles: ['translateX', 'translateY', 'scaleX', 'scaleY', 'opacity'],\n      animations: {\n        scaleX: 'spring',\n        scaleY: 'spring',\n        translateX: 'spring',\n        translateY: 'spring',\n        opacity: {\n          type: 'tween',\n          duration: 250\n        }\n      },\n      listeners: true\n    },\n    create: create$8,\n    write: write$6\n  });\n\n  var toNaturalFileSize = function toNaturalFileSize(bytes) {\n    var decimalSeparator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '.'; // nope, no negative byte sizes\n\n    bytes = Math.round(Math.abs(bytes)); // just bytes\n\n    if (bytes < 1000) {\n      return bytes + ' bytes';\n    } // kilobytes\n\n\n    if (bytes < MB) {\n      return Math.floor(bytes / KB) + ' KB';\n    } // megabytes\n\n\n    if (bytes < GB) {\n      return removeDecimalsWhenZero(bytes / MB, 1, decimalSeparator) + ' MB';\n    } // gigabytes\n\n\n    return removeDecimalsWhenZero(bytes / GB, 2, decimalSeparator) + ' GB';\n  };\n\n  var KB = 1000;\n  var MB = 1000000;\n  var GB = 1000000000;\n\n  var removeDecimalsWhenZero = function removeDecimalsWhenZero(value, decimalCount, separator) {\n    return value.toFixed(decimalCount).split('.').filter(function (part) {\n      return part !== '0';\n    }).join(separator);\n  };\n\n  var create$9 = function create(_ref) {\n    var root = _ref.root,\n        props = _ref.props; // filename\n\n    var fileName = createElement$1('span');\n    fileName.className = 'filepond--file-info-main'; // hide for screenreaders\n    // the file is contained in a fieldset with legend that contains the filename\n    // no need to read it twice\n\n    attr(fileName, 'aria-hidden', 'true');\n    root.appendChild(fileName);\n    root.ref.fileName = fileName; // filesize\n\n    var fileSize = createElement$1('span');\n    fileSize.className = 'filepond--file-info-sub';\n    root.appendChild(fileSize);\n    root.ref.fileSize = fileSize; // set initial values\n\n    text(fileSize, root.query('GET_LABEL_FILE_WAITING_FOR_SIZE'));\n    text(fileName, formatFilename(root.query('GET_ITEM_NAME', props.id)));\n  };\n\n  var updateFile = function updateFile(_ref2) {\n    var root = _ref2.root,\n        props = _ref2.props;\n    text(root.ref.fileSize, toNaturalFileSize(root.query('GET_ITEM_SIZE', props.id)));\n    text(root.ref.fileName, formatFilename(root.query('GET_ITEM_NAME', props.id)));\n  };\n\n  var updateFileSizeOnError = function updateFileSizeOnError(_ref3) {\n    var root = _ref3.root,\n        props = _ref3.props; // if size is available don't fallback to unknown size message\n\n    if (isInt(root.query('GET_ITEM_SIZE', props.id))) {\n      return;\n    }\n\n    text(root.ref.fileSize, root.query('GET_LABEL_FILE_SIZE_NOT_AVAILABLE'));\n  };\n\n  var fileInfo = createView({\n    name: 'file-info',\n    ignoreRect: true,\n    ignoreRectUpdate: true,\n    write: createRoute({\n      DID_LOAD_ITEM: updateFile,\n      DID_UPDATE_ITEM_META: updateFile,\n      DID_THROW_ITEM_LOAD_ERROR: updateFileSizeOnError,\n      DID_THROW_ITEM_INVALID: updateFileSizeOnError\n    }),\n    didCreateView: function didCreateView(root) {\n      applyFilters('CREATE_VIEW', Object.assign({}, root, {\n        view: root\n      }));\n    },\n    create: create$9,\n    mixins: {\n      styles: ['translateX', 'translateY'],\n      animations: {\n        translateX: 'spring',\n        translateY: 'spring'\n      }\n    }\n  });\n\n  var toPercentage = function toPercentage(value) {\n    return Math.round(value * 100);\n  };\n\n  var create$10 = function create(_ref) {\n    var root = _ref.root; // main status\n\n    var main = createElement$1('span');\n    main.className = 'filepond--file-status-main';\n    root.appendChild(main);\n    root.ref.main = main; // sub status\n\n    var sub = createElement$1('span');\n    sub.className = 'filepond--file-status-sub';\n    root.appendChild(sub);\n    root.ref.sub = sub;\n    didSetItemLoadProgress({\n      root: root,\n      action: {\n        progress: null\n      }\n    });\n  };\n\n  var didSetItemLoadProgress = function didSetItemLoadProgress(_ref2) {\n    var root = _ref2.root,\n        action = _ref2.action;\n    var title = action.progress === null ? root.query('GET_LABEL_FILE_LOADING') : root.query('GET_LABEL_FILE_LOADING') + ' ' + toPercentage(action.progress) + '%';\n    text(root.ref.main, title);\n    text(root.ref.sub, root.query('GET_LABEL_TAP_TO_CANCEL'));\n  };\n\n  var didSetItemProcessProgress = function didSetItemProcessProgress(_ref3) {\n    var root = _ref3.root,\n        action = _ref3.action;\n    var title = action.progress === null ? root.query('GET_LABEL_FILE_PROCESSING') : root.query('GET_LABEL_FILE_PROCESSING') + ' ' + toPercentage(action.progress) + '%';\n    text(root.ref.main, title);\n    text(root.ref.sub, root.query('GET_LABEL_TAP_TO_CANCEL'));\n  };\n\n  var didRequestItemProcessing = function didRequestItemProcessing(_ref4) {\n    var root = _ref4.root;\n    text(root.ref.main, root.query('GET_LABEL_FILE_PROCESSING'));\n    text(root.ref.sub, root.query('GET_LABEL_TAP_TO_CANCEL'));\n  };\n\n  var didAbortItemProcessing = function didAbortItemProcessing(_ref5) {\n    var root = _ref5.root;\n    text(root.ref.main, root.query('GET_LABEL_FILE_PROCESSING_ABORTED'));\n    text(root.ref.sub, root.query('GET_LABEL_TAP_TO_RETRY'));\n  };\n\n  var didCompleteItemProcessing$1 = function didCompleteItemProcessing(_ref6) {\n    var root = _ref6.root;\n    text(root.ref.main, root.query('GET_LABEL_FILE_PROCESSING_COMPLETE'));\n    text(root.ref.sub, root.query('GET_LABEL_TAP_TO_UNDO'));\n  };\n\n  var clear = function clear(_ref7) {\n    var root = _ref7.root;\n    text(root.ref.main, '');\n    text(root.ref.sub, '');\n  };\n\n  var error = function error(_ref8) {\n    var root = _ref8.root,\n        action = _ref8.action;\n    text(root.ref.main, action.status.main);\n    text(root.ref.sub, action.status.sub);\n  };\n\n  var fileStatus = createView({\n    name: 'file-status',\n    ignoreRect: true,\n    ignoreRectUpdate: true,\n    write: createRoute({\n      DID_LOAD_ITEM: clear,\n      DID_REVERT_ITEM_PROCESSING: clear,\n      DID_REQUEST_ITEM_PROCESSING: didRequestItemProcessing,\n      DID_ABORT_ITEM_PROCESSING: didAbortItemProcessing,\n      DID_COMPLETE_ITEM_PROCESSING: didCompleteItemProcessing$1,\n      DID_UPDATE_ITEM_PROCESS_PROGRESS: didSetItemProcessProgress,\n      DID_UPDATE_ITEM_LOAD_PROGRESS: didSetItemLoadProgress,\n      DID_THROW_ITEM_LOAD_ERROR: error,\n      DID_THROW_ITEM_INVALID: error,\n      DID_THROW_ITEM_PROCESSING_ERROR: error,\n      DID_THROW_ITEM_PROCESSING_REVERT_ERROR: error,\n      DID_THROW_ITEM_REMOVE_ERROR: error\n    }),\n    didCreateView: function didCreateView(root) {\n      applyFilters('CREATE_VIEW', Object.assign({}, root, {\n        view: root\n      }));\n    },\n    create: create$10,\n    mixins: {\n      styles: ['translateX', 'translateY', 'opacity'],\n      animations: {\n        opacity: {\n          type: 'tween',\n          duration: 250\n        },\n        translateX: 'spring',\n        translateY: 'spring'\n      }\n    }\n  });\n  /**\n   * Button definitions for the file view\n   */\n\n  var Buttons = {\n    AbortItemLoad: {\n      label: 'GET_LABEL_BUTTON_ABORT_ITEM_LOAD',\n      action: 'ABORT_ITEM_LOAD',\n      className: 'filepond--action-abort-item-load',\n      align: 'LOAD_INDICATOR_POSITION' // right\n\n    },\n    RetryItemLoad: {\n      label: 'GET_LABEL_BUTTON_RETRY_ITEM_LOAD',\n      action: 'RETRY_ITEM_LOAD',\n      icon: 'GET_ICON_RETRY',\n      className: 'filepond--action-retry-item-load',\n      align: 'BUTTON_PROCESS_ITEM_POSITION' // right\n\n    },\n    RemoveItem: {\n      label: 'GET_LABEL_BUTTON_REMOVE_ITEM',\n      action: 'REQUEST_REMOVE_ITEM',\n      icon: 'GET_ICON_REMOVE',\n      className: 'filepond--action-remove-item',\n      align: 'BUTTON_REMOVE_ITEM_POSITION' // left\n\n    },\n    ProcessItem: {\n      label: 'GET_LABEL_BUTTON_PROCESS_ITEM',\n      action: 'REQUEST_ITEM_PROCESSING',\n      icon: 'GET_ICON_PROCESS',\n      className: 'filepond--action-process-item',\n      align: 'BUTTON_PROCESS_ITEM_POSITION' // right\n\n    },\n    AbortItemProcessing: {\n      label: 'GET_LABEL_BUTTON_ABORT_ITEM_PROCESSING',\n      action: 'ABORT_ITEM_PROCESSING',\n      className: 'filepond--action-abort-item-processing',\n      align: 'BUTTON_PROCESS_ITEM_POSITION' // right\n\n    },\n    RetryItemProcessing: {\n      label: 'GET_LABEL_BUTTON_RETRY_ITEM_PROCESSING',\n      action: 'RETRY_ITEM_PROCESSING',\n      icon: 'GET_ICON_RETRY',\n      className: 'filepond--action-retry-item-processing',\n      align: 'BUTTON_PROCESS_ITEM_POSITION' // right\n\n    },\n    RevertItemProcessing: {\n      label: 'GET_LABEL_BUTTON_UNDO_ITEM_PROCESSING',\n      action: 'REQUEST_REVERT_ITEM_PROCESSING',\n      icon: 'GET_ICON_UNDO',\n      className: 'filepond--action-revert-item-processing',\n      align: 'BUTTON_PROCESS_ITEM_POSITION' // right\n\n    }\n  }; // make a list of buttons, we can then remove buttons from this list if they're disabled\n\n  var ButtonKeys = [];\n  forin(Buttons, function (key) {\n    ButtonKeys.push(key);\n  });\n\n  var calculateFileInfoOffset = function calculateFileInfoOffset(root) {\n    return root.ref.buttonRemoveItem.rect.element.width + root.ref.buttonRemoveItem.rect.element.left;\n  }; // Force on full pixels so text stays crips\n\n\n  var calculateFileVerticalCenterOffset = function calculateFileVerticalCenterOffset(root) {\n    return Math.floor(root.ref.buttonRemoveItem.rect.element.height / 4);\n  };\n\n  var calculateFileHorizontalCenterOffset = function calculateFileHorizontalCenterOffset(root) {\n    return Math.floor(root.ref.buttonRemoveItem.rect.element.left / 2);\n  };\n\n  var getLoadIndicatorAlignment = function getLoadIndicatorAlignment(root) {\n    return root.query('GET_STYLE_LOAD_INDICATOR_POSITION');\n  };\n\n  var getProcessIndicatorAlignment = function getProcessIndicatorAlignment(root) {\n    return root.query('GET_STYLE_PROGRESS_INDICATOR_POSITION');\n  };\n\n  var getRemoveIndicatorAligment = function getRemoveIndicatorAligment(root) {\n    return root.query('GET_STYLE_BUTTON_REMOVE_ITEM_POSITION');\n  };\n\n  var DefaultStyle = {\n    buttonAbortItemLoad: {\n      opacity: 0\n    },\n    buttonRetryItemLoad: {\n      opacity: 0\n    },\n    buttonRemoveItem: {\n      opacity: 0\n    },\n    buttonProcessItem: {\n      opacity: 0\n    },\n    buttonAbortItemProcessing: {\n      opacity: 0\n    },\n    buttonRetryItemProcessing: {\n      opacity: 0\n    },\n    buttonRevertItemProcessing: {\n      opacity: 0\n    },\n    loadProgressIndicator: {\n      opacity: 0,\n      align: getLoadIndicatorAlignment\n    },\n    processProgressIndicator: {\n      opacity: 0,\n      align: getProcessIndicatorAlignment\n    },\n    processingCompleteIndicator: {\n      opacity: 0,\n      scaleX: 0.75,\n      scaleY: 0.75\n    },\n    info: {\n      translateX: 0,\n      translateY: 0,\n      opacity: 0\n    },\n    status: {\n      translateX: 0,\n      translateY: 0,\n      opacity: 0\n    }\n  };\n  var IdleStyle = {\n    buttonRemoveItem: {\n      opacity: 1\n    },\n    buttonProcessItem: {\n      opacity: 1\n    },\n    info: {\n      translateX: calculateFileInfoOffset\n    },\n    status: {\n      translateX: calculateFileInfoOffset\n    }\n  };\n  var ProcessingStyle = {\n    buttonAbortItemProcessing: {\n      opacity: 1\n    },\n    processProgressIndicator: {\n      opacity: 1\n    },\n    status: {\n      opacity: 1\n    }\n  };\n  var StyleMap = {\n    DID_THROW_ITEM_INVALID: {\n      buttonRemoveItem: {\n        opacity: 1\n      },\n      info: {\n        translateX: calculateFileInfoOffset\n      },\n      status: {\n        translateX: calculateFileInfoOffset,\n        opacity: 1\n      }\n    },\n    DID_START_ITEM_LOAD: {\n      buttonAbortItemLoad: {\n        opacity: 1\n      },\n      loadProgressIndicator: {\n        opacity: 1\n      },\n      status: {\n        opacity: 1\n      }\n    },\n    DID_THROW_ITEM_LOAD_ERROR: {\n      buttonRetryItemLoad: {\n        opacity: 1\n      },\n      buttonRemoveItem: {\n        opacity: 1\n      },\n      info: {\n        translateX: calculateFileInfoOffset\n      },\n      status: {\n        opacity: 1\n      }\n    },\n    DID_START_ITEM_REMOVE: {\n      processProgressIndicator: {\n        opacity: 1,\n        align: getRemoveIndicatorAligment\n      },\n      info: {\n        translateX: calculateFileInfoOffset\n      },\n      status: {\n        opacity: 0\n      }\n    },\n    DID_THROW_ITEM_REMOVE_ERROR: {\n      processProgressIndicator: {\n        opacity: 0,\n        align: getRemoveIndicatorAligment\n      },\n      buttonRemoveItem: {\n        opacity: 1\n      },\n      info: {\n        translateX: calculateFileInfoOffset\n      },\n      status: {\n        opacity: 1,\n        translateX: calculateFileInfoOffset\n      }\n    },\n    DID_LOAD_ITEM: IdleStyle,\n    DID_LOAD_LOCAL_ITEM: {\n      buttonRemoveItem: {\n        opacity: 1\n      },\n      info: {\n        translateX: calculateFileInfoOffset\n      },\n      status: {\n        translateX: calculateFileInfoOffset\n      }\n    },\n    DID_START_ITEM_PROCESSING: ProcessingStyle,\n    DID_REQUEST_ITEM_PROCESSING: ProcessingStyle,\n    DID_UPDATE_ITEM_PROCESS_PROGRESS: ProcessingStyle,\n    DID_COMPLETE_ITEM_PROCESSING: {\n      buttonRevertItemProcessing: {\n        opacity: 1\n      },\n      info: {\n        opacity: 1\n      },\n      status: {\n        opacity: 1\n      }\n    },\n    DID_THROW_ITEM_PROCESSING_ERROR: {\n      buttonRemoveItem: {\n        opacity: 1\n      },\n      buttonRetryItemProcessing: {\n        opacity: 1\n      },\n      status: {\n        opacity: 1\n      },\n      info: {\n        translateX: calculateFileInfoOffset\n      }\n    },\n    DID_THROW_ITEM_PROCESSING_REVERT_ERROR: {\n      buttonRevertItemProcessing: {\n        opacity: 1\n      },\n      status: {\n        opacity: 1\n      },\n      info: {\n        opacity: 1\n      }\n    },\n    DID_ABORT_ITEM_PROCESSING: {\n      buttonRemoveItem: {\n        opacity: 1\n      },\n      buttonProcessItem: {\n        opacity: 1\n      },\n      info: {\n        translateX: calculateFileInfoOffset\n      },\n      status: {\n        opacity: 1\n      }\n    },\n    DID_REVERT_ITEM_PROCESSING: IdleStyle\n  }; // complete indicator view\n\n  var processingCompleteIndicatorView = createView({\n    create: function create(_ref) {\n      var root = _ref.root;\n      root.element.innerHTML = root.query('GET_ICON_DONE');\n    },\n    name: 'processing-complete-indicator',\n    ignoreRect: true,\n    mixins: {\n      styles: ['scaleX', 'scaleY', 'opacity'],\n      animations: {\n        scaleX: 'spring',\n        scaleY: 'spring',\n        opacity: {\n          type: 'tween',\n          duration: 250\n        }\n      }\n    }\n  });\n  /**\n   * Creates the file view\n   */\n\n  var create$6 = function create(_ref2) {\n    var root = _ref2.root,\n        props = _ref2.props;\n    var id = props.id; // allow reverting upload\n\n    var allowRevert = root.query('GET_ALLOW_REVERT'); // is instant uploading, need this to determine the icon of the undo button\n\n    var instantUpload = root.query('GET_INSTANT_UPLOAD'); // is async set up\n\n    var isAsync = root.query('IS_ASYNC'); // enabled buttons array\n\n    var enabledButtons = isAsync ? ButtonKeys.concat() : ButtonKeys.filter(function (key) {\n      return !/Process/.test(key);\n    }); // remove last button (revert) if not allowed\n\n    if (isAsync && !allowRevert) {\n      enabledButtons.splice(-1, 1);\n      var map = StyleMap['DID_COMPLETE_ITEM_PROCESSING'];\n      map.info.translateX = calculateFileHorizontalCenterOffset;\n      map.info.translateY = calculateFileVerticalCenterOffset;\n      map.status.translateY = calculateFileVerticalCenterOffset;\n      map.processingCompleteIndicator = {\n        opacity: 1,\n        scaleX: 1,\n        scaleY: 1\n      };\n    } // update icon and label for revert button when instant uploading\n\n\n    if (instantUpload && allowRevert) {\n      Buttons['RevertItemProcessing'].label = 'GET_LABEL_BUTTON_REMOVE_ITEM';\n      Buttons['RevertItemProcessing'].icon = 'GET_ICON_REMOVE';\n    } // create the button views\n\n\n    forin(Buttons, function (key, definition) {\n      // create button\n      var buttonView = root.createChildView(fileActionButton, {\n        label: root.query(definition.label),\n        icon: root.query(definition.icon),\n        opacity: 0\n      }); // should be appended?\n\n      if (enabledButtons.includes(key)) {\n        root.appendChildView(buttonView);\n      } // add position attribute\n\n\n      buttonView.element.dataset.align = root.query('GET_STYLE_' + definition.align); // add class\n\n      buttonView.element.classList.add(definition.className); // handle interactions\n\n      buttonView.on('click', function () {\n        root.dispatch(definition.action, {\n          query: id\n        });\n      }); // set reference\n\n      root.ref['button' + key] = buttonView;\n    }); // create file info view\n\n    root.ref.info = root.appendChildView(root.createChildView(fileInfo, {\n      id: id\n    })); // create file status view\n\n    root.ref.status = root.appendChildView(root.createChildView(fileStatus, {\n      id: id\n    })); // checkmark\n\n    root.ref.processingCompleteIndicator = root.appendChildView(root.createChildView(processingCompleteIndicatorView));\n    root.ref.processingCompleteIndicator.element.dataset.align = root.query('GET_STYLE_BUTTON_PROCESS_ITEM_POSITION'); // add progress indicators\n\n    var loadIndicatorView = root.appendChildView(root.createChildView(progressIndicator, {\n      opacity: 0,\n      align: root.query('GET_STYLE_LOAD_INDICATOR_POSITION')\n    }));\n    loadIndicatorView.element.classList.add('filepond--load-indicator');\n    root.ref.loadProgressIndicator = loadIndicatorView;\n    var progressIndicatorView = root.appendChildView(root.createChildView(progressIndicator, {\n      opacity: 0,\n      align: root.query('GET_STYLE_PROGRESS_INDICATOR_POSITION')\n    }));\n    progressIndicatorView.element.classList.add('filepond--process-indicator');\n    root.ref.processProgressIndicator = progressIndicatorView;\n  };\n\n  var write$4 = function write(_ref3) {\n    var root = _ref3.root,\n        actions = _ref3.actions,\n        props = _ref3.props; // route actions\n\n    route$3({\n      root: root,\n      actions: actions,\n      props: props\n    }); // select last state change action\n\n    var action = [].concat(toConsumableArray(actions)).filter(function (action) {\n      return /^DID_/.test(action.type);\n    }).reverse().find(function (action) {\n      return StyleMap[action.type];\n    }); // no need to set same state twice\n\n    if (!action || action && action.type === root.ref.currentAction) {\n      return;\n    } // set current state\n\n\n    root.ref.currentAction = action.type;\n    var newStyles = StyleMap[root.ref.currentAction];\n    forin(DefaultStyle, function (name, defaultStyles) {\n      // get reference to control\n      var control = root.ref[name]; // loop over all styles for this control\n\n      forin(defaultStyles, function (key, defaultValue) {\n        var value = newStyles[name] && typeof newStyles[name][key] !== 'undefined' ? newStyles[name][key] : defaultValue;\n        control[key] = typeof value === 'function' ? value(root) : value;\n      });\n    });\n  };\n\n  var route$3 = createRoute({\n    DID_SET_LABEL_BUTTON_ABORT_ITEM_PROCESSING: function DID_SET_LABEL_BUTTON_ABORT_ITEM_PROCESSING(_ref4) {\n      var root = _ref4.root,\n          action = _ref4.action;\n      root.ref.buttonAbortItemProcessing.label = action.value;\n    },\n    DID_SET_LABEL_BUTTON_ABORT_ITEM_LOAD: function DID_SET_LABEL_BUTTON_ABORT_ITEM_LOAD(_ref5) {\n      var root = _ref5.root,\n          action = _ref5.action;\n      root.ref.buttonAbortItemLoad.label = action.value;\n    },\n    DID_SET_LABEL_BUTTON_ABORT_ITEM_REMOVAL: function DID_SET_LABEL_BUTTON_ABORT_ITEM_REMOVAL(_ref6) {\n      var root = _ref6.root,\n          action = _ref6.action;\n      root.ref.buttonAbortItemRemoval.label = action.value;\n    },\n    DID_REQUEST_ITEM_PROCESSING: function DID_REQUEST_ITEM_PROCESSING(_ref7) {\n      var root = _ref7.root;\n      root.ref.processProgressIndicator.spin = true;\n      root.ref.processProgressIndicator.progress = 0;\n    },\n    DID_START_ITEM_LOAD: function DID_START_ITEM_LOAD(_ref8) {\n      var root = _ref8.root;\n      root.ref.loadProgressIndicator.spin = true;\n      root.ref.loadProgressIndicator.progress = 0;\n    },\n    DID_START_ITEM_REMOVE: function DID_START_ITEM_REMOVE(_ref9) {\n      var root = _ref9.root;\n      root.ref.processProgressIndicator.spin = true;\n      root.ref.processProgressIndicator.progress = 0;\n    },\n    DID_UPDATE_ITEM_LOAD_PROGRESS: function DID_UPDATE_ITEM_LOAD_PROGRESS(_ref10) {\n      var root = _ref10.root,\n          action = _ref10.action;\n      root.ref.loadProgressIndicator.spin = false;\n      root.ref.loadProgressIndicator.progress = action.progress;\n    },\n    DID_UPDATE_ITEM_PROCESS_PROGRESS: function DID_UPDATE_ITEM_PROCESS_PROGRESS(_ref11) {\n      var root = _ref11.root,\n          action = _ref11.action;\n      root.ref.processProgressIndicator.spin = false;\n      root.ref.processProgressIndicator.progress = action.progress;\n    }\n  });\n  var file = createView({\n    create: create$6,\n    write: write$4,\n    didCreateView: function didCreateView(root) {\n      applyFilters('CREATE_VIEW', Object.assign({}, root, {\n        view: root\n      }));\n    },\n    name: 'file'\n  });\n  /**\n   * Creates the file view\n   */\n\n  var create$5 = function create(_ref) {\n    var root = _ref.root,\n        props = _ref.props; // filename\n\n    root.ref.fileName = createElement$1('legend');\n    root.appendChild(root.ref.fileName); // file view\n\n    root.ref.file = root.appendChildView(root.createChildView(file, {\n      id: props.id\n    })); // create data container\n\n    var dataContainer = createElement$1('input');\n    dataContainer.type = 'hidden';\n    dataContainer.name = root.query('GET_NAME');\n    root.ref.data = dataContainer;\n    root.appendChild(dataContainer);\n  };\n  /**\n   * Data storage\n   */\n\n\n  var didLoadItem = function didLoadItem(_ref2) {\n    var root = _ref2.root,\n        action = _ref2.action,\n        props = _ref2.props;\n    root.ref.data.value = action.serverFileReference; // updates the legend of the fieldset so screenreaders can better group buttons\n\n    text(root.ref.fileName, formatFilename(root.query('GET_ITEM_NAME', props.id)));\n  };\n\n  var didRemoveItem = function didRemoveItem(_ref3) {\n    var root = _ref3.root;\n    root.ref.data.removeAttribute('value');\n  };\n\n  var didCompleteItemProcessing = function didCompleteItemProcessing(_ref4) {\n    var root = _ref4.root,\n        action = _ref4.action;\n    root.ref.data.value = action.serverFileReference;\n  };\n\n  var didRevertItemProcessing = function didRevertItemProcessing(_ref5) {\n    var root = _ref5.root;\n    root.ref.data.removeAttribute('value');\n  };\n\n  var fileWrapper = createView({\n    create: create$5,\n    ignoreRect: true,\n    write: createRoute({\n      DID_LOAD_ITEM: didLoadItem,\n      DID_REMOVE_ITEM: didRemoveItem,\n      DID_COMPLETE_ITEM_PROCESSING: didCompleteItemProcessing,\n      DID_REVERT_ITEM_PROCESSING: didRevertItemProcessing\n    }),\n    didCreateView: function didCreateView(root) {\n      applyFilters('CREATE_VIEW', Object.assign({}, root, {\n        view: root\n      }));\n    },\n    tag: 'fieldset',\n    name: 'file-wrapper'\n  });\n  var PANEL_SPRING_PROPS = {\n    type: 'spring',\n    damping: 0.6,\n    mass: 7\n  };\n\n  var create$11 = function create(_ref) {\n    var root = _ref.root,\n        props = _ref.props;\n    [{\n      name: 'top'\n    }, {\n      name: 'center',\n      props: {\n        translateY: null,\n        scaleY: null\n      },\n      mixins: {\n        animations: {\n          scaleY: PANEL_SPRING_PROPS\n        },\n        styles: ['translateY', 'scaleY']\n      }\n    }, {\n      name: 'bottom',\n      props: {\n        translateY: null\n      },\n      mixins: {\n        animations: {\n          translateY: PANEL_SPRING_PROPS\n        },\n        styles: ['translateY']\n      }\n    }].forEach(function (section) {\n      createSection(root, section, props.name);\n    });\n    root.element.classList.add('filepond--' + props.name);\n    root.ref.scalable = null;\n  };\n\n  var createSection = function createSection(root, section, className) {\n    var viewConstructor = createView({\n      name: 'panel-' + section.name + ' filepond--' + className,\n      mixins: section.mixins,\n      ignoreRectUpdate: true\n    });\n    var view = root.createChildView(viewConstructor, section.props);\n    root.ref[section.name] = root.appendChildView(view);\n  };\n\n  var write$7 = function write(_ref2) {\n    var root = _ref2.root,\n        props = _ref2.props; // update scalable state\n\n    if (root.ref.scalable === null || props.scalable !== root.ref.scalable) {\n      root.ref.scalable = isBoolean(props.scalable) ? props.scalable : true;\n      root.element.dataset.scalable = root.ref.scalable;\n    } // no height, can't set\n\n\n    if (!props.height) {\n      return;\n    } // get child rects\n\n\n    var topRect = root.ref.top.rect.element;\n    var bottomRect = root.ref.bottom.rect.element; // make sure height never is smaller than bottom and top seciton heights combined (will probably never happen, but who knows)\n\n    var height = Math.max(topRect.height + bottomRect.height, props.height); // offset center part\n\n    root.ref.center.translateY = topRect.height; // scale center part\n    // use math ceil to prevent transparent lines because of rounding errors\n\n    root.ref.center.scaleY = (height - topRect.height - bottomRect.height) / 100; // offset bottom part\n\n    root.ref.bottom.translateY = height - bottomRect.height;\n  };\n\n  var panel = createView({\n    name: 'panel',\n    write: write$7,\n    create: create$11,\n    ignoreRect: true,\n    mixins: {\n      apis: ['height', 'scalable']\n    }\n  });\n  /**\n   * Creates the file view\n   */\n\n  var create$4 = function create(_ref) {\n    var root = _ref.root,\n        props = _ref.props; // file view\n\n    root.ref.controls = root.appendChildView(root.createChildView(fileWrapper, {\n      id: props.id\n    })); // file panel\n\n    root.ref.panel = root.appendChildView(root.createChildView(panel, {\n      name: 'item-panel'\n    })); // default start height\n\n    root.ref.panel.height = 0; // by default not marked for removal\n\n    props.markedForRemoval = false;\n  };\n\n  var StateMap = {\n    DID_START_ITEM_LOAD: 'busy',\n    DID_UPDATE_ITEM_LOAD_PROGRESS: 'loading',\n    DID_THROW_ITEM_INVALID: 'load-invalid',\n    DID_THROW_ITEM_LOAD_ERROR: 'load-error',\n    DID_LOAD_ITEM: 'idle',\n    DID_THROW_ITEM_REMOVE_ERROR: 'remove-error',\n    DID_START_ITEM_REMOVE: 'busy',\n    DID_START_ITEM_PROCESSING: 'busy',\n    DID_REQUEST_ITEM_PROCESSING: 'busy',\n    DID_UPDATE_ITEM_PROCESS_PROGRESS: 'processing',\n    DID_COMPLETE_ITEM_PROCESSING: 'processing-complete',\n    DID_THROW_ITEM_PROCESSING_ERROR: 'processing-error',\n    DID_THROW_ITEM_PROCESSING_REVERT_ERROR: 'processing-revert-error',\n    DID_ABORT_ITEM_PROCESSING: 'cancelled',\n    DID_REVERT_ITEM_PROCESSING: 'idle'\n  };\n\n  var write$3 = function write(_ref2) {\n    var root = _ref2.root,\n        actions = _ref2.actions,\n        props = _ref2.props; // update panel height\n\n    root.ref.panel.height = root.ref.controls.rect.inner.height; // set own height\n\n    var aspectRatio = root.query('GET_PANEL_ASPECT_RATIO');\n    var allowMultiple = root.query('GET_ALLOW_MULTIPLE');\n\n    if (aspectRatio && !allowMultiple) {\n      root.height = root.rect.element.width * aspectRatio;\n    } else {\n      root.height = root.ref.controls.rect.inner.height;\n    } // select last state change action\n\n\n    var action = [].concat(toConsumableArray(actions)).filter(function (action) {\n      return /^DID_/.test(action.type);\n    }).reverse().find(function (action) {\n      return StateMap[action.type];\n    }); // no need to set same state twice\n\n    if (!action || action && action.type === props.currentState) {\n      return;\n    } // set current state\n\n\n    props.currentState = action.type; // set state\n\n    root.element.dataset.filepondItemState = StateMap[props.currentState] || '';\n  };\n\n  var item = createView({\n    create: create$4,\n    write: write$3,\n    destroy: function destroy(_ref3) {\n      var root = _ref3.root,\n          props = _ref3.props;\n      root.dispatch('RELEASE_ITEM', {\n        query: props.id\n      });\n    },\n    tag: 'li',\n    name: 'item',\n    mixins: {\n      apis: ['id', 'markedForRemoval'],\n      styles: ['translateX', 'translateY', 'scaleX', 'scaleY', 'opacity', 'height'],\n      animations: {\n        scaleX: 'spring',\n        scaleY: 'spring',\n        translateX: 'spring',\n        translateY: 'spring',\n        opacity: {\n          type: 'tween',\n          duration: 150\n        }\n      }\n    }\n  });\n\n  var create$3 = function create(_ref) {\n    var root = _ref.root; // need to set role to list as otherwise it won't be read as a list by VoiceOver\n\n    attr(root.element, 'role', 'list');\n  };\n  /**\n   * Inserts a new item\n   * @param root\n   * @param action\n   */\n\n\n  var addItemView = function addItemView(_ref2) {\n    var root = _ref2.root,\n        action = _ref2.action;\n    var id = action.id,\n        index = action.index,\n        interactionMethod = action.interactionMethod;\n    var animation = {\n      opacity: 0\n    };\n\n    if (interactionMethod === InteractionMethod.NONE) {\n      animation.translateY = null;\n    }\n\n    if (interactionMethod === InteractionMethod.DROP) {\n      animation.scaleX = 0.8;\n      animation.scaleY = 0.8;\n      animation.translateY = null;\n    }\n\n    if (interactionMethod === InteractionMethod.BROWSE) {\n      animation.translateY = -30;\n    }\n\n    if (interactionMethod === InteractionMethod.API) {\n      animation.translateX = -100;\n      animation.translateY = null;\n    }\n\n    root.appendChildView(root.createChildView( // view type\n    item, // props\n    Object.assign({\n      id: id\n    }, animation)), index);\n  };\n  /**\n   * Removes an existing item\n   * @param root\n   * @param action\n   */\n\n\n  var removeItemView = function removeItemView(_ref3) {\n    var root = _ref3.root,\n        action = _ref3.action;\n    var id = action.id; // get the view matching the given id\n\n    var view = root.childViews.find(function (child) {\n      return child.id === id;\n    }); // if no view found, exit\n\n    if (!view) {\n      return;\n    } // animate view out of view\n\n\n    view.scaleX = 0.9;\n    view.scaleY = 0.9;\n    view.opacity = 0; // mark for removal\n\n    view.markedForRemoval = true;\n  };\n  /**\n   * Setup action routes\n   */\n\n\n  var route$2 = createRoute({\n    DID_ADD_ITEM: addItemView,\n    DID_REMOVE_ITEM: removeItemView\n  });\n\n  var dragTranslation = function dragTranslation(childIndex, dragIndex, itemMargin) {\n    if (childIndex - 1 === dragIndex) {\n      return itemMargin / 6;\n    }\n\n    if (childIndex === dragIndex) {\n      return itemMargin / 2;\n    }\n\n    if (childIndex + 1 === dragIndex) {\n      return -itemMargin / 2;\n    }\n\n    if (childIndex + 2 === dragIndex) {\n      return -itemMargin / 6;\n    }\n\n    return 0;\n  };\n\n  var easeOutCirc = function easeOutCirc(t) {\n    var t1 = t - 1;\n    return Math.sqrt(1 - t1 * t1);\n  };\n\n  var read = function read(_ref4) {\n    var root = _ref4.root;\n    var total = 0;\n    root.childViews.filter(function (child) {\n      return child.rect.outer.height;\n    }).forEach(function (child) {\n      var height = child.rect.element.height + child.rect.element.marginBottom;\n      total += child.markedForRemoval ? height * easeOutCirc(child.opacity) : height;\n    });\n    root.rect.outer.height = total;\n    root.rect.outer.bottom = root.rect.outer.height;\n  };\n  /**\n   * Write to view\n   * @param root\n   * @param actions\n   * @param props\n   */\n\n\n  var write$2 = function write(_ref5) {\n    var root = _ref5.root,\n        props = _ref5.props,\n        actions = _ref5.actions; // route actions\n\n    route$2({\n      root: root,\n      props: props,\n      actions: actions\n    });\n    var resting = true; // update item positions\n\n    var offset = 0;\n    root.childViews.filter(function (child) {\n      return child.rect.outer.height;\n    }).forEach(function (child, childIndex) {\n      var childRect = child.rect; // set this child offset\n\n      child.translateX = 0;\n      child.translateY = offset + (props.dragIndex > -1 ? dragTranslation(childIndex, props.dragIndex, 10) : 0); // show child if it's not marked for removal\n\n      if (!child.markedForRemoval) {\n        child.scaleX = 1;\n        child.scaleY = 1;\n        child.opacity = 1;\n      }\n\n      var itemHeight = childRect.element.height + childRect.element.marginTop + childRect.element.marginBottom;\n      var height = child.markedForRemoval ? itemHeight * child.opacity : itemHeight; // calculate next child offset (reduce height by y scale for views that are being removed)\n\n      offset += height;\n    });\n    return resting;\n  };\n  /**\n   * Filters actions that are meant specifically for a certain child of the list\n   * @param child\n   * @param actions\n   */\n\n\n  var filterSetItemActions = function filterSetItemActions(child, actions) {\n    return actions.filter(function (action) {\n      // if action has an id, filter out actions that don't have this child id\n      if (action.data && action.data.id) {\n        return child.id === action.data.id;\n      } // allow all other actions\n\n\n      return true;\n    });\n  };\n\n  var list = createView({\n    create: create$3,\n    write: write$2,\n    read: read,\n    tag: 'ul',\n    name: 'list',\n    didWriteView: function didWriteView(_ref6) {\n      var root = _ref6.root;\n      root.childViews.filter(function (view) {\n        return view.markedForRemoval && view.opacity === 0 && view.resting;\n      }).forEach(function (view) {\n        view._destroy();\n\n        root.removeChildView(view);\n      });\n    },\n    filterFrameActionsForChild: filterSetItemActions,\n    mixins: {\n      apis: ['dragIndex']\n    }\n  });\n\n  var getItemIndexByPosition = function getItemIndexByPosition(view, positionInView) {\n    var i = 0;\n    var childViews = view.childViews;\n    var l = childViews.length;\n\n    for (; i < l; i++) {\n      var item = childViews[i];\n      var itemRect = item.rect.outer;\n      var itemRectMid = itemRect.top + itemRect.height * 0.5;\n\n      if (positionInView.top < itemRectMid) {\n        return i;\n      }\n    }\n\n    return l;\n  };\n\n  var create$2 = function create(_ref) {\n    var root = _ref.root,\n        props = _ref.props;\n    root.ref.list = root.appendChildView(root.createChildView(list));\n    props.dragCoordinates = null;\n    props.overflowing = false;\n  };\n\n  var storeDragCoordinates = function storeDragCoordinates(_ref2) {\n    var root = _ref2.root,\n        props = _ref2.props,\n        action = _ref2.action;\n    props.dragCoordinates = {\n      left: action.position.scopeLeft,\n      top: action.position.scopeTop - root.rect.outer.top + root.rect.element.scrollTop\n    };\n  };\n\n  var clearDragCoordinates = function clearDragCoordinates(_ref3) {\n    var props = _ref3.props;\n    props.dragCoordinates = null;\n  };\n\n  var route$1 = createRoute({\n    DID_DRAG: storeDragCoordinates,\n    DID_END_DRAG: clearDragCoordinates\n  });\n\n  var write$1 = function write(_ref4) {\n    var root = _ref4.root,\n        props = _ref4.props,\n        actions = _ref4.actions; // route actions\n\n    route$1({\n      root: root,\n      props: props,\n      actions: actions\n    }); // current drag position\n\n    root.ref.list.dragIndex = props.dragCoordinates ? getItemIndexByPosition(root.ref.list, props.dragCoordinates) : -1; // if currently overflowing but no longer received overflow\n\n    if (props.overflowing && !props.overflow) {\n      props.overflowing = false; // reset overflow state\n\n      root.element.dataset.state = '';\n      root.height = null;\n    } // if is not overflowing currently but does receive overflow value\n    // !props.overflowing &&\n\n\n    if (props.overflow) {\n      var newHeight = Math.round(props.overflow);\n\n      if (newHeight !== root.height) {\n        props.overflowing = true;\n        root.element.dataset.state = 'overflow';\n        root.height = newHeight;\n      }\n    }\n  };\n\n  var listScroller = createView({\n    create: create$2,\n    write: write$1,\n    name: 'list-scroller',\n    mixins: {\n      apis: ['overflow'],\n      styles: ['height', 'translateY'],\n      animations: {\n        translateY: 'spring'\n      }\n    }\n  });\n\n  var attrToggle = function attrToggle(element, name, state) {\n    var enabledValue = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';\n\n    if (state) {\n      attr(element, name, enabledValue);\n    } else {\n      element.removeAttribute(name);\n    }\n  };\n\n  var resetFileInput = function resetFileInput(input) {\n    // no value, no need to reset\n    if (!input || input.value === '') {\n      return;\n    }\n\n    try {\n      // for modern browsers\n      input.value = '';\n    } catch (err) {} // for IE10\n\n\n    if (input.value) {\n      // quickly append input to temp form and reset form\n      var form = createElement$1('form');\n      var parentNode = input.parentNode;\n      var ref = input.nextSibling;\n      form.appendChild(input);\n      form.reset(); // re-inject input where it originally was\n\n      if (ref) {\n        parentNode.insertBefore(input, ref);\n      } else {\n        parentNode.appendChild(input);\n      }\n    }\n  };\n\n  var create$12 = function create(_ref) {\n    var root = _ref.root,\n        props = _ref.props; // set id so can be referenced from outside labels\n\n    root.element.id = 'filepond--browser-' + props.id; // we have to link this element to the status element\n\n    attr(root.element, 'aria-controls', 'filepond--assistant-' + props.id); // set label, we use labelled by as otherwise the screenreader does not read the \"browse\" text in the label (as it has tabindex: 0)\n\n    attr(root.element, 'aria-labelledby', 'filepond--drop-label-' + props.id); // handle changes to the input field\n\n    root.ref.handleChange = function (e) {\n      if (!root.element.value) {\n        return;\n      } // extract files\n\n\n      var files = [].concat(toConsumableArray(root.element.files)); // we add a little delay so the OS file select window can move out of the way before we add our file\n\n      setTimeout(function () {\n        // load files\n        props.onload(files); // reset input, it's just for exposing a method to drop files, should not retain any state\n\n        resetFileInput(root.element);\n      }, 250);\n    };\n\n    root.element.addEventListener('change', root.ref.handleChange);\n  };\n\n  var setAcceptedFileTypes = function setAcceptedFileTypes(_ref2) {\n    var root = _ref2.root,\n        action = _ref2.action;\n    attrToggle(root.element, 'accept', !!action.value, action.value ? action.value.join(',') : '');\n  };\n\n  var toggleAllowMultiple = function toggleAllowMultiple(_ref3) {\n    var root = _ref3.root,\n        action = _ref3.action;\n    attrToggle(root.element, 'multiple', action.value);\n  };\n\n  var toggleAllowBrowse$1 = function toggleAllowBrowse(_ref4) {\n    var root = _ref4.root,\n        action = _ref4.action;\n    attrToggle(root.element, 'disabled', !action.value);\n  };\n\n  var toggleRequired = function toggleRequired(_ref5) {\n    var root = _ref5.root,\n        action = _ref5.action; // want to remove required, always possible\n\n    if (!action.value) {\n      attrToggle(root.element, 'required', false);\n    } else if (root.query('GET_TOTAL_ITEMS') === 0) {\n      // if want to make required, only possible when zero items\n      attrToggle(root.element, 'required', true);\n    }\n  };\n\n  var setCaptureMethod = function setCaptureMethod(_ref6) {\n    var root = _ref6.root,\n        action = _ref6.action;\n    attrToggle(root.element, 'capture', !!action.value, action.value === true ? '' : action.value);\n  };\n\n  var updateRequiredStatus = function updateRequiredStatus(_ref7) {\n    var root = _ref7.root; // always remove the required attribute when more than zero items\n\n    if (root.query('GET_TOTAL_ITEMS') > 0) {\n      attrToggle(root.element, 'required', false);\n    } else {\n      // remove any validation messages\n      var shouldCheckValidity = root.query('GET_CHECK_VALIDITY');\n\n      if (shouldCheckValidity) {\n        root.element.setCustomValidity('');\n      } // we only add required if the field has been deemed required\n\n\n      if (root.query('GET_REQUIRED')) {\n        attrToggle(root.element, 'required', true);\n      }\n    }\n  };\n\n  var updateFieldValidityStatus = function updateFieldValidityStatus(_ref8) {\n    var root = _ref8.root;\n    var shouldCheckValidity = root.query('GET_CHECK_VALIDITY');\n    if (!shouldCheckValidity) return;\n    root.element.setCustomValidity(root.query('GET_LABEL_INVALID_FIELD'));\n  };\n\n  var browser = createView({\n    tag: 'input',\n    name: 'browser',\n    ignoreRect: true,\n    ignoreRectUpdate: true,\n    attributes: {\n      type: 'file'\n    },\n    create: create$12,\n    destroy: function destroy(_ref9) {\n      var root = _ref9.root;\n      root.element.removeEventListener('change', root.ref.handleChange);\n    },\n    write: createRoute({\n      DID_LOAD_ITEM: updateRequiredStatus,\n      DID_THROW_ITEM_INVALID: updateFieldValidityStatus,\n      DID_REMOVE_ITEM: updateRequiredStatus,\n      DID_SET_ALLOW_BROWSE: toggleAllowBrowse$1,\n      DID_SET_ALLOW_MULTIPLE: toggleAllowMultiple,\n      DID_SET_ACCEPTED_FILE_TYPES: setAcceptedFileTypes,\n      DID_SET_CAPTURE_METHOD: setCaptureMethod,\n      DID_SET_REQUIRED: toggleRequired\n    })\n  });\n  var Key = {\n    ENTER: 13,\n    SPACE: 32\n  };\n\n  var create$13 = function create(_ref) {\n    var root = _ref.root,\n        props = _ref.props; // create the label and link it to the file browser\n\n    var label = createElement$1('label');\n    attr(label, 'for', 'filepond--browser-' + props.id); // use for labeling file input (aria-labelledby on file input)\n\n    attr(label, 'id', 'filepond--drop-label-' + props.id); // hide the label from screenreaders, the input element has an aria-label\n\n    attr(label, 'aria-hidden', 'true'); // handle keys\n\n    label.addEventListener('keydown', function (e) {\n      if (e.keyCode === Key.ENTER || e.keyCode === Key.SPACE) {\n        // stops from triggering the element a second time\n        e.preventDefault(); // click link (will then in turn activate file input)\n\n        root.ref.label.click();\n      }\n    }); // update\n\n    updateLabelValue(label, props.caption); // add!\n\n    root.appendChild(label);\n    root.ref.label = label;\n  };\n\n  var updateLabelValue = function updateLabelValue(label, value) {\n    label.innerHTML = value;\n    var clickable = label.querySelector('.filepond--label-action');\n\n    if (clickable) {\n      attr(clickable, 'tabindex', '0');\n    }\n\n    return value;\n  };\n\n  var dropLabel = createView({\n    name: 'drop-label',\n    ignoreRect: true,\n    create: create$13,\n    write: createRoute({\n      DID_SET_LABEL_IDLE: function DID_SET_LABEL_IDLE(_ref2) {\n        var root = _ref2.root,\n            action = _ref2.action;\n        updateLabelValue(root.ref.label, action.value);\n      }\n    }),\n    mixins: {\n      styles: ['opacity', 'translateX', 'translateY'],\n      animations: {\n        opacity: {\n          type: 'tween',\n          duration: 150\n        },\n        translateX: 'spring',\n        translateY: 'spring'\n      }\n    }\n  });\n  var blob = createView({\n    name: 'drip-blob',\n    ignoreRect: true,\n    mixins: {\n      styles: ['translateX', 'translateY', 'scaleX', 'scaleY', 'opacity'],\n      animations: {\n        scaleX: 'spring',\n        scaleY: 'spring',\n        translateX: 'spring',\n        translateY: 'spring',\n        opacity: {\n          type: 'tween',\n          duration: 250\n        }\n      }\n    }\n  });\n\n  var addBlob = function addBlob(_ref) {\n    var root = _ref.root;\n    var centerX = root.rect.element.width * 0.5;\n    var centerY = root.rect.element.height * 0.5;\n    root.ref.blob = root.appendChildView(root.createChildView(blob, {\n      opacity: 0,\n      scaleX: 2.5,\n      scaleY: 2.5,\n      translateX: centerX,\n      translateY: centerY\n    }));\n  };\n\n  var moveBlob = function moveBlob(_ref2) {\n    var root = _ref2.root,\n        action = _ref2.action;\n\n    if (!root.ref.blob) {\n      addBlob({\n        root: root\n      });\n      return;\n    }\n\n    root.ref.blob.translateX = action.position.scopeLeft;\n    root.ref.blob.translateY = action.position.scopeTop;\n    root.ref.blob.scaleX = 1;\n    root.ref.blob.scaleY = 1;\n    root.ref.blob.opacity = 1;\n  };\n\n  var hideBlob = function hideBlob(_ref3) {\n    var root = _ref3.root;\n\n    if (!root.ref.blob) {\n      return;\n    }\n\n    root.ref.blob.opacity = 0;\n  };\n\n  var explodeBlob = function explodeBlob(_ref4) {\n    var root = _ref4.root;\n\n    if (!root.ref.blob) {\n      return;\n    }\n\n    root.ref.blob.scaleX = 2.5;\n    root.ref.blob.scaleY = 2.5;\n    root.ref.blob.opacity = 0;\n  };\n\n  var write$8 = function write(_ref5) {\n    var root = _ref5.root,\n        props = _ref5.props,\n        actions = _ref5.actions;\n    route$4({\n      root: root,\n      props: props,\n      actions: actions\n    });\n    var blob$$1 = root.ref.blob;\n\n    if (actions.length === 0 && blob$$1 && blob$$1.opacity === 0) {\n      root.removeChildView(blob$$1);\n      root.ref.blob = null;\n    }\n  };\n\n  var route$4 = createRoute({\n    DID_DRAG: moveBlob,\n    DID_DROP: explodeBlob,\n    DID_END_DRAG: hideBlob\n  });\n  var drip = createView({\n    ignoreRect: true,\n    ignoreRectUpdate: true,\n    name: 'drip',\n    write: write$8\n  });\n\n  var getRootNode = function getRootNode(element) {\n    return 'getRootNode' in element ? element.getRootNode() : document;\n  };\n\n  var requestDataTransferItems = function requestDataTransferItems(dataTransfer) {\n    return new Promise(function (resolve, reject) {\n      // try to get links from transfer, if found, we'll exit immidiately\n      // as only one link can be dragged at once\n      var links = getLinks(dataTransfer);\n\n      if (links.length) {\n        resolve(links);\n        return;\n      } // try to get files from the transfer\n\n\n      getFiles(dataTransfer).then(resolve);\n    });\n  };\n  /**\n   * Extracts files from a DataTransfer object\n   */\n\n\n  var getFiles = function getFiles(dataTransfer) {\n    return new Promise(function (resolve, reject) {\n      // get the transfer items as promises\n      var promisedFiles = (dataTransfer.items ? [].concat(toConsumableArray(dataTransfer.items)) : []). // only keep file system items (files and directories)\n      filter(function (item) {\n        return isFileSystemItem(item);\n      }) // map each item to promise\n      .map(function (item) {\n        return getFilesFromItem(item);\n      }); // if is empty, see if we can extract some info from the files property as a fallback\n\n      if (!promisedFiles.length) {\n        // TODO: test for directories (should not be allowed)\n        // Use FileReader, problem is that the files property gets lost in the process\n        resolve(dataTransfer.files ? [].concat(toConsumableArray(dataTransfer.files)) : []);\n        return;\n      } // done!\n\n\n      Promise.all(promisedFiles).then(function (returendFileGroups) {\n        // flatten groups\n        var files = [];\n        returendFileGroups.forEach(function (group) {\n          files.push.apply(files, toConsumableArray(group));\n        }); // done (filter out empty files)!\n\n        resolve(files.filter(function (file) {\n          return file;\n        }));\n      });\n    });\n  };\n\n  var isFileSystemItem = function isFileSystemItem(item) {\n    if (isEntry(item)) {\n      var entry = getAsEntry(item);\n\n      if (entry) {\n        return entry.isFile || entry.isDirectory;\n      }\n    }\n\n    return item.kind === 'file';\n  };\n\n  var getFilesFromItem = function getFilesFromItem(item) {\n    return new Promise(function (resolve, reject) {\n      if (isDirectoryEntry(item)) {\n        getFilesInDirectory(getAsEntry(item)).then(resolve);\n        return;\n      }\n\n      resolve([item.getAsFile()]);\n    });\n  };\n\n  var getFilesInDirectory = function getFilesInDirectory(entry) {\n    return new Promise(function (resolve, reject) {\n      var files = []; // the total entries to read\n\n      var totalFilesFound = 0; // the recursive function\n\n      var readEntries = function readEntries(dirEntry) {\n        var directoryReader = dirEntry.createReader();\n        directoryReader.readEntries(function (entries) {\n          entries.forEach(function (entry) {\n            // recursively read more directories\n            if (entry.isDirectory) {\n              readEntries(entry);\n            } else {\n              // read as file\n              totalFilesFound++;\n              entry.file(function (file) {\n                files.push(file);\n\n                if (totalFilesFound === files.length) {\n                  resolve(files);\n                }\n              });\n            }\n          });\n        });\n      }; // go!\n\n\n      readEntries(entry);\n    });\n  };\n\n  var isDirectoryEntry = function isDirectoryEntry(item) {\n    return isEntry(item) && (getAsEntry(item) || {}).isDirectory;\n  };\n\n  var isEntry = function isEntry(item) {\n    return 'webkitGetAsEntry' in item;\n  };\n\n  var getAsEntry = function getAsEntry(item) {\n    return item.webkitGetAsEntry();\n  };\n  /**\n   * Extracts links from a DataTransfer object\n   */\n\n\n  var getLinks = function getLinks(dataTransfer) {\n    var links = [];\n\n    try {\n      // look in meta data property\n      links = getLinksFromTransferMetaData(dataTransfer);\n\n      if (links.length) {\n        return links;\n      }\n\n      links = getLinksFromTransferURLData(dataTransfer);\n    } catch (e) {// nope nope nope (probably IE trouble)\n    }\n\n    return links;\n  };\n\n  var getLinksFromTransferURLData = function getLinksFromTransferURLData(dataTransfer) {\n    var data = dataTransfer.getData('url');\n\n    if (typeof data === 'string' && data.length) {\n      return [data];\n    }\n\n    return [];\n  };\n\n  var getLinksFromTransferMetaData = function getLinksFromTransferMetaData(dataTransfer) {\n    var data = dataTransfer.getData('text/html');\n\n    if (typeof data === 'string' && data.length) {\n      var matches = data.match(/src\\s*=\\s*\"(.+?)\"/);\n\n      if (matches) {\n        return [matches[1]];\n      }\n    }\n\n    return [];\n  };\n\n  var dragNDropObservers = [];\n\n  var eventPosition = function eventPosition(e) {\n    return {\n      pageLeft: e.pageX,\n      pageTop: e.pageY,\n      scopeLeft: e.offsetX || e.layerX,\n      scopeTop: e.offsetY || e.layerY\n    };\n  };\n\n  var createDragNDropClient = function createDragNDropClient(element, scopeToObserve, filterElement) {\n    var observer = getDragNDropObserver(scopeToObserve);\n    var client = {\n      element: element,\n      filterElement: filterElement,\n      state: null,\n      ondrop: function ondrop() {},\n      onenter: function onenter() {},\n      ondrag: function ondrag() {},\n      onexit: function onexit() {},\n      onload: function onload() {},\n      allowdrop: function allowdrop() {}\n    };\n    client.destroy = observer.addListener(client);\n    return client;\n  };\n\n  var getDragNDropObserver = function getDragNDropObserver(element) {\n    // see if already exists, if so, return\n    var observer = dragNDropObservers.find(function (item) {\n      return item.element === element;\n    });\n\n    if (observer) {\n      return observer;\n    } // create new observer, does not yet exist for this element\n\n\n    var newObserver = createDragNDropObserver(element);\n    dragNDropObservers.push(newObserver);\n    return newObserver;\n  };\n\n  var createDragNDropObserver = function createDragNDropObserver(element) {\n    var clients = [];\n    var routes = {\n      dragenter: dragenter,\n      dragover: dragover,\n      dragleave: dragleave,\n      drop: drop\n    };\n    var handlers = {};\n    forin(routes, function (event, createHandler) {\n      handlers[event] = createHandler(element, clients);\n      element.addEventListener(event, handlers[event], false);\n    });\n    var observer = {\n      element: element,\n      addListener: function addListener(client) {\n        // add as client\n        clients.push(client); // return removeListener function\n\n        return function () {\n          // remove client\n          clients.splice(clients.indexOf(client), 1); // if no more clients, clean up observer\n\n          if (clients.length === 0) {\n            dragNDropObservers.splice(dragNDropObservers.indexOf(observer), 1);\n            forin(routes, function (event) {\n              element.removeEventListener(event, handlers[event], false);\n            });\n          }\n        };\n      }\n    };\n    return observer;\n  };\n\n  var elementFromPoint = function elementFromPoint(root, point) {\n    if (!('elementFromPoint' in root)) {\n      root = document;\n    }\n\n    return root.elementFromPoint(point.x, point.y);\n  };\n\n  var isEventTarget = function isEventTarget(e, target) {\n    // get root\n    var root = getRootNode(target); // get element at position\n    // if root is not actual shadow DOM and does not have elementFromPoint method, use the one on document\n\n    var elementAtPosition = elementFromPoint(root, {\n      x: e.pageX - window.pageXOffset,\n      y: e.pageY - window.pageYOffset\n    }); // test if target is the element or if one of its children is\n\n    return elementAtPosition === target || target.contains(elementAtPosition);\n  };\n\n  var initialTarget = null;\n\n  var setDropEffect = function setDropEffect(dataTransfer, effect) {\n    // is in try catch as IE11 will throw error if not\n    try {\n      dataTransfer.dropEffect = effect;\n    } catch (e) {}\n  };\n\n  var dragenter = function dragenter(root, clients) {\n    return function (e) {\n      e.preventDefault();\n      initialTarget = e.target;\n      clients.forEach(function (client) {\n        var element = client.element,\n            onenter = client.onenter;\n\n        if (isEventTarget(e, element)) {\n          client.state = 'enter'; // fire enter event\n\n          onenter(eventPosition(e));\n        }\n      });\n    };\n  };\n\n  var dragover = function dragover(root, clients) {\n    return function (e) {\n      e.preventDefault();\n      var dataTransfer = e.dataTransfer;\n      requestDataTransferItems(dataTransfer).then(function (items) {\n        var overDropTarget = false;\n        clients.some(function (client) {\n          var filterElement = client.filterElement,\n              element = client.element,\n              onenter = client.onenter,\n              onexit = client.onexit,\n              ondrag = client.ondrag,\n              allowdrop = client.allowdrop; // by default we can drop\n\n          setDropEffect(dataTransfer, 'copy'); // allow transfer of these items\n\n          var allowsTransfer = allowdrop(items); // only used when can be dropped on page\n\n          if (!allowsTransfer) {\n            setDropEffect(dataTransfer, 'none');\n            return;\n          } // targetting this client\n\n\n          if (isEventTarget(e, element)) {\n            overDropTarget = true; // had no previous state, means we are entering this client\n\n            if (client.state === null) {\n              client.state = 'enter';\n              onenter(eventPosition(e));\n              return;\n            } // now over element (no matter if it allows the drop or not)\n\n\n            client.state = 'over'; // needs to allow transfer\n\n            if (filterElement && !allowsTransfer) {\n              setDropEffect(dataTransfer, 'none');\n              return;\n            } // dragging\n\n\n            ondrag(eventPosition(e));\n          } else {\n            // should be over an element to drop\n            if (filterElement && !overDropTarget) {\n              setDropEffect(dataTransfer, 'none');\n            } // might have just left this client?\n\n\n            if (client.state) {\n              client.state = null;\n              onexit(eventPosition(e));\n            }\n          }\n        });\n      });\n    };\n  };\n\n  var drop = function drop(root, clients) {\n    return function (e) {\n      e.preventDefault();\n      var dataTransfer = e.dataTransfer;\n      requestDataTransferItems(dataTransfer).then(function (items) {\n        clients.forEach(function (client) {\n          var filterElement = client.filterElement,\n              element = client.element,\n              ondrop = client.ondrop,\n              onexit = client.onexit,\n              allowdrop = client.allowdrop;\n          client.state = null;\n          var allowsTransfer = allowdrop(items); // no transfer for this client\n\n          if (!allowsTransfer) {\n            onexit(eventPosition(e));\n            return;\n          } // if we're filtering on element we need to be over the element to drop\n\n\n          if (filterElement && !isEventTarget(e, element)) {\n            return;\n          }\n\n          ondrop(eventPosition(e), items);\n        });\n      });\n    };\n  };\n\n  var dragleave = function dragleave(root, clients) {\n    return function (e) {\n      if (initialTarget !== e.target) {\n        return;\n      }\n\n      clients.forEach(function (client) {\n        var onexit = client.onexit;\n        client.state = null;\n        onexit(eventPosition(e));\n      });\n    };\n  };\n\n  var createHopper = function createHopper(scope, validateItems, options) {\n    // is now hopper scope\n    scope.classList.add('filepond--hopper'); // shortcuts\n\n    var catchesDropsOnPage = options.catchesDropsOnPage,\n        requiresDropOnElement = options.requiresDropOnElement; // create a dnd client\n\n    var client = createDragNDropClient(scope, catchesDropsOnPage ? document.documentElement : scope, requiresDropOnElement); // current client state\n\n    var lastState = '';\n    var currentState = ''; // determines if a file may be dropped\n\n    client.allowdrop = function (items) {\n      // TODO: if we can, throw error to indicate the items cannot by dropped\n      return validateItems(items);\n    };\n\n    client.ondrop = function (position, items) {\n      if (!validateItems(items)) {\n        api.ondragend(position);\n        return;\n      }\n\n      currentState = 'drag-drop';\n      api.onload(items, position);\n    };\n\n    client.ondrag = function (position) {\n      api.ondrag(position);\n    };\n\n    client.onenter = function (position) {\n      currentState = 'drag-over';\n      api.ondragstart(position);\n    };\n\n    client.onexit = function (position) {\n      currentState = 'drag-exit';\n      api.ondragend(position);\n    };\n\n    var api = {\n      updateHopperState: function updateHopperState() {\n        if (lastState !== currentState) {\n          scope.dataset.hopperState = currentState;\n          lastState = currentState;\n        }\n      },\n      onload: function onload() {},\n      ondragstart: function ondragstart() {},\n      ondrag: function ondrag() {},\n      ondragend: function ondragend() {},\n      destroy: function destroy() {\n        // destroy client\n        client.destroy();\n      }\n    };\n    return api;\n  };\n\n  var listening = false;\n  var listeners$1 = [];\n\n  var handlePaste = function handlePaste(e) {\n    requestDataTransferItems(e.clipboardData).then(function (files) {\n      // no files received\n      if (!files.length) {\n        return;\n      } // notify listeners of received files\n\n\n      listeners$1.forEach(function (listener) {\n        return listener(files);\n      });\n    });\n  };\n\n  var listen = function listen(cb) {\n    // can't add twice\n    if (listeners$1.includes(cb)) {\n      return;\n    } // add initial listener\n\n\n    listeners$1.push(cb); // setup paste listener for entire page\n\n    if (listening) {\n      return;\n    }\n\n    listening = true;\n    document.addEventListener('paste', handlePaste);\n  };\n\n  var unlisten = function unlisten(listener) {\n    arrayRemove(listeners$1, listeners$1.indexOf(listener)); // clean up\n\n    if (listeners$1.length === 0) {\n      document.removeEventListener('paste', handlePaste);\n      listening = false;\n    }\n  };\n\n  var createPaster = function createPaster() {\n    var cb = function cb(files) {\n      api.onload(files);\n    };\n\n    var api = {\n      destroy: function destroy() {\n        unlisten(cb);\n      },\n      onload: function onload() {}\n    };\n    listen(cb);\n    return api;\n  };\n\n  var debounce = function debounce(func) {\n    var interval = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 16;\n    var immidiateOnly = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    var last = Date.now();\n    var timeout = null;\n    return function () {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      clearTimeout(timeout);\n      var dist = Date.now() - last;\n\n      var fn = function fn() {\n        last = Date.now();\n        func.apply(undefined, args);\n      };\n\n      if (dist < interval) {\n        // we need to delay by the difference between interval and dist\n        // for example: if distance is 10 ms and interval is 16 ms,\n        // we need to wait an additional 6ms before calling the function)\n        if (!immidiateOnly) {\n          timeout = setTimeout(fn, interval - dist);\n        }\n      } else {\n        // go!\n        fn();\n      }\n    };\n  };\n  /**\n   * Creates the file view\n   */\n\n\n  var create$14 = function create(_ref) {\n    var root = _ref.root,\n        props = _ref.props;\n    root.element.id = 'filepond--assistant-' + props.id;\n    attr(root.element, 'role', 'status');\n    attr(root.element, 'aria-live', 'polite');\n    attr(root.element, 'aria-relevant', 'additions');\n  };\n\n  var addFilesNotificationTimeout = null;\n  var notificationClearTimeout = null;\n  var filenames = [];\n\n  var assist = function assist(root, message) {\n    root.element.textContent = message;\n  };\n\n  var clear$1 = function clear(root) {\n    root.element.textContent = '';\n  };\n\n  var listModified = function listModified(root, filename, label) {\n    var total = root.query('GET_TOTAL_ITEMS');\n    assist(root, label + ' ' + filename + ', ' + total + ' ' + (total === 1 ? root.query('GET_LABEL_FILE_COUNT_SINGULAR') : root.query('GET_LABEL_FILE_COUNT_PLURAL'))); // clear group after set amount of time so the status is not read twice\n\n    clearTimeout(notificationClearTimeout);\n    notificationClearTimeout = setTimeout(function () {\n      clear$1(root);\n    }, 1500);\n  };\n\n  var isUsingFilePond = function isUsingFilePond(root) {\n    return root.element.parentNode.contains(document.activeElement);\n  };\n\n  var itemAdded = function itemAdded(_ref2) {\n    var root = _ref2.root,\n        action = _ref2.action;\n\n    if (!isUsingFilePond(root)) {\n      return;\n    }\n\n    root.element.textContent = '';\n    var item = root.query('GET_ITEM', action.id);\n    filenames.push(item.filename);\n    clearTimeout(addFilesNotificationTimeout);\n    addFilesNotificationTimeout = setTimeout(function () {\n      listModified(root, filenames.join(', '), root.query('GET_LABEL_FILE_ADDED'));\n      filenames.length = 0;\n    }, 750);\n  };\n\n  var itemRemoved = function itemRemoved(_ref3) {\n    var root = _ref3.root,\n        action = _ref3.action;\n\n    if (!isUsingFilePond(root)) {\n      return;\n    }\n\n    var item = action.item;\n    listModified(root, item.filename, root.query('GET_LABEL_FILE_REMOVED'));\n  };\n\n  var itemProcessed = function itemProcessed(_ref4) {\n    var root = _ref4.root,\n        action = _ref4.action; // will also notify the user when FilePond is not being used, as the user might be occupied with other activities while uploading a file\n\n    var item = root.query('GET_ITEM', action.id);\n    var filename = item.filename;\n    var label = root.query('GET_LABEL_FILE_PROCESSING_COMPLETE');\n    assist(root, filename + ' ' + label);\n  };\n\n  var itemProcessedUndo = function itemProcessedUndo(_ref5) {\n    var root = _ref5.root,\n        action = _ref5.action;\n    var item = root.query('GET_ITEM', action.id);\n    var filename = item.filename;\n    var label = root.query('GET_LABEL_FILE_PROCESSING_ABORTED');\n    assist(root, filename + ' ' + label);\n  };\n\n  var itemError = function itemError(_ref6) {\n    var root = _ref6.root,\n        action = _ref6.action;\n    var item = root.query('GET_ITEM', action.id);\n    var filename = item.filename; // will also notify the user when FilePond is not being used, as the user might be occupied with other activities while uploading a file\n\n    assist(root, action.status.main + ' ' + filename + ' ' + action.status.sub);\n  };\n\n  var assistant = createView({\n    create: create$14,\n    ignoreRect: true,\n    ignoreRectUpdate: true,\n    write: createRoute({\n      DID_LOAD_ITEM: itemAdded,\n      DID_REMOVE_ITEM: itemRemoved,\n      DID_COMPLETE_ITEM_PROCESSING: itemProcessed,\n      DID_ABORT_ITEM_PROCESSING: itemProcessedUndo,\n      DID_REVERT_ITEM_PROCESSING: itemProcessedUndo,\n      DID_THROW_ITEM_REMOVE_ERROR: itemError,\n      DID_THROW_ITEM_LOAD_ERROR: itemError,\n      DID_THROW_ITEM_INVALID: itemError,\n      DID_THROW_ITEM_PROCESSING_ERROR: itemError\n    }),\n    tag: 'span',\n    name: 'assistant'\n  });\n\n  var toCamels = function toCamels(string) {\n    var separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '-';\n    return string.replace(new RegExp(separator + '.', 'g'), function (sub) {\n      return sub.charAt(1).toUpperCase();\n    });\n  };\n\n  var MAX_FILES_LIMIT = 1000000;\n\n  var create$1 = function create(_ref) {\n    var root = _ref.root,\n        props = _ref.props; // Add id\n\n    var id = root.query('GET_ID');\n\n    if (id) {\n      root.element.id = id;\n    } // Add className\n\n\n    var className = root.query('GET_CLASS_NAME');\n\n    if (className) {\n      className.split(' ').forEach(function (name) {\n        root.element.classList.add(name);\n      });\n    } // Field label\n\n\n    root.ref.label = root.appendChildView(root.createChildView(dropLabel, Object.assign({}, props, {\n      translateY: null,\n      caption: root.query('GET_LABEL_IDLE')\n    }))); // List of items\n\n    root.ref.list = root.appendChildView(root.createChildView(listScroller, {\n      translateY: null\n    })); // Background panel\n\n    root.ref.panel = root.appendChildView(root.createChildView(panel, {\n      name: 'panel-root'\n    })); // Assistant notifies assistive tech when content changes\n\n    root.ref.assistant = root.appendChildView(root.createChildView(assistant, Object.assign({}, props))); // Measure (tests if fixed height was set)\n    // DOCTYPE needs to be set for this to work\n\n    root.ref.measure = createElement$1('div');\n    root.ref.measure.style.height = '100%';\n    root.element.appendChild(root.ref.measure); // information on the root height or fixed height status\n\n    root.ref.bounds = null; // apply initial style properties\n\n    root.query('GET_STYLES').filter(function (style) {\n      return !isEmpty(style.value);\n    }).map(function (_ref2) {\n      var name = _ref2.name,\n          value = _ref2.value;\n      root.element.dataset[name] = value;\n    });\n  };\n\n  var write = function write(_ref3) {\n    var root = _ref3.root,\n        props = _ref3.props,\n        actions = _ref3.actions; // get box bounds, we do this only once\n\n    var bounds = root.ref.bounds;\n\n    if (!bounds) {\n      bounds = root.ref.bounds = calculateRootBoundingBoxHeight(root); // destroy measure element\n\n      root.element.removeChild(root.ref.measure);\n      root.ref.measure = null;\n    } // route actions\n\n\n    route({\n      root: root,\n      props: props,\n      actions: actions\n    }); // apply style properties\n\n    actions.filter(function (action) {\n      return /^DID_SET_STYLE_/.test(action.type);\n    }).filter(function (action) {\n      return !isEmpty(action.data.value);\n    }).map(function (_ref4) {\n      var type = _ref4.type,\n          data = _ref4.data;\n      var name = toCamels(type.substr(8).toLowerCase(), '_');\n      root.element.dataset[name] = data.value;\n      root.invalidateLayout();\n    }); // get quick references to various high level parts of the upload tool\n\n    var _root$ref = root.ref,\n        hopper = _root$ref.hopper,\n        label = _root$ref.label,\n        list = _root$ref.list,\n        panel$$1 = _root$ref.panel; // sets correct state to hopper scope\n\n    if (hopper) {\n      hopper.updateHopperState();\n    } // bool to indicate if we're full or not\n\n\n    var aspectRatio = root.query('GET_PANEL_ASPECT_RATIO');\n    var isMultiItem = root.query('GET_ALLOW_MULTIPLE');\n    var totalItems = root.query('GET_TOTAL_ITEMS');\n    var maxItems = isMultiItem ? root.query('GET_MAX_FILES') || MAX_FILES_LIMIT : 1;\n    var atMaxCapacity = totalItems === maxItems; // action used to add item\n\n    var addAction = actions.find(function (action) {\n      return action.type === 'DID_ADD_ITEM';\n    }); // if reached max capacity and we've just reached it\n\n    if (atMaxCapacity && addAction) {\n      // get interaction type\n      var interactionMethod = addAction.data.interactionMethod; // hide label\n\n      label.opacity = 0;\n\n      if (isMultiItem) {\n        label.translateY = -40;\n      } else {\n        if (interactionMethod === InteractionMethod.API) {\n          label.translateX = 40;\n        } else if (interactionMethod === InteractionMethod.BROWSE) {\n          label.translateY = 40;\n        } else {\n          label.translateY = 30;\n        }\n      }\n    } else if (!atMaxCapacity) {\n      label.opacity = 1;\n      label.translateX = 0;\n      label.translateY = 0;\n    }\n\n    var listItemMargin = calculateListItemMargin(root);\n    var listHeight = calculateListHeight(root, maxItems);\n    var labelHeight = label.rect.element.height;\n    var currentLabelHeight = !isMultiItem || atMaxCapacity ? 0 : labelHeight;\n    var listMarginTop = atMaxCapacity ? list.rect.element.marginTop : 0;\n    var listMarginBottom = totalItems === 0 ? 0 : list.rect.element.marginBottom;\n    var visualHeight = currentLabelHeight + listMarginTop + listHeight.visual + listMarginBottom;\n    var boundsHeight = currentLabelHeight + listMarginTop + listHeight.bounds + listMarginBottom; // link list to label bottom position\n\n    list.translateY = Math.max(0, currentLabelHeight - list.rect.element.marginTop) - listItemMargin.top;\n\n    if (aspectRatio) {\n      // fixed aspect ratio\n      // calculate height based on width\n      var width = root.rect.element.width;\n      var height = width * aspectRatio; // fix height of panel so it adheres to aspect ratio\n\n      panel$$1.scalable = false;\n      panel$$1.height = height; // available height for list\n\n      var listAvailableHeight = // the height of the panel minus the label height\n      height - currentLabelHeight - ( // the room we leave open between the end of the list and the panel bottom\n      listMarginBottom - listItemMargin.bottom) - ( // if we're full we need to leave some room between the top of the panel and the list\n      atMaxCapacity ? listMarginTop : 0);\n\n      if (listHeight.visual > listAvailableHeight) {\n        list.overflow = listAvailableHeight;\n      } else {\n        list.overflow = null;\n      } // set container bounds (so pushes siblings downwards)\n\n\n      root.height = height;\n    } else if (bounds.fixedHeight) {\n      // fixed height\n      // fix height of panel\n      panel$$1.scalable = false; // available height for list\n\n      var _listAvailableHeight = // the height of the panel minus the label height\n      bounds.fixedHeight - currentLabelHeight - ( // the room we leave open between the end of the list and the panel bottom\n      listMarginBottom - listItemMargin.bottom) - ( // if we're full we need to leave some room between the top of the panel and the list\n      atMaxCapacity ? listMarginTop : 0); // set list height\n\n\n      if (listHeight.visual > _listAvailableHeight) {\n        list.overflow = _listAvailableHeight;\n      } else {\n        list.overflow = null;\n      } // no need to set container bounds as these are handles by CSS fixed height\n\n    } else if (bounds.cappedHeight) {\n      // max-height\n      // not a fixed height panel\n      var isCappedHeight = visualHeight >= bounds.cappedHeight;\n      var panelHeight = Math.min(bounds.cappedHeight, visualHeight);\n      panel$$1.scalable = true;\n      panel$$1.height = isCappedHeight ? panelHeight : panelHeight - listItemMargin.top - listItemMargin.bottom; // available height for list\n\n      var _listAvailableHeight2 = // the height of the panel minus the label height\n      panelHeight - currentLabelHeight - ( // the room we leave open between the end of the list and the panel bottom\n      listMarginBottom - listItemMargin.bottom) - ( // if we're full we need to leave some room between the top of the panel and the list\n      atMaxCapacity ? listMarginTop : 0); // set list height (if is overflowing)\n\n\n      if (visualHeight > bounds.cappedHeight && listHeight.visual > _listAvailableHeight2) {\n        list.overflow = _listAvailableHeight2;\n      } else {\n        list.overflow = null;\n      } // set container bounds (so pushes siblings downwards)\n\n\n      root.height = Math.min(bounds.cappedHeight, boundsHeight - listItemMargin.top - listItemMargin.bottom);\n    } else {\n      // flexible height\n      // not a fixed height panel\n      var itemMargin = totalItems > 0 ? listItemMargin.top + listItemMargin.bottom : 0;\n      panel$$1.scalable = true;\n      panel$$1.height = Math.max(labelHeight, visualHeight - itemMargin); // set container bounds (so pushes siblings downwards)\n\n      root.height = Math.max(labelHeight, boundsHeight - itemMargin);\n    }\n  };\n\n  var calculateListItemMargin = function calculateListItemMargin(root) {\n    var item = root.ref.list.childViews[0].childViews[0];\n    return item ? {\n      top: item.rect.element.marginTop,\n      bottom: item.rect.element.marginBottom\n    } : {\n      top: 0,\n      bottom: 0\n    };\n  };\n\n  var calculateListHeight = function calculateListHeight(root, maxItems) {\n    var visual = 0;\n    var bounds = 0;\n    root.ref.list.childViews[0].childViews.forEach(function (item, index) {\n      // don't count items above max items list\n      if (index >= maxItems) return; // calculate the total height of all items in the list\n\n      var rect = item.rect.element;\n      var itemHeight = rect.height + rect.marginTop + rect.marginBottom;\n      bounds += itemHeight;\n      visual += item.markedForRemoval ? item.opacity * itemHeight : itemHeight;\n    });\n    return {\n      visual: visual,\n      bounds: bounds\n    };\n  };\n\n  var calculateRootBoundingBoxHeight = function calculateRootBoundingBoxHeight(root) {\n    var height = root.ref.measureHeight || null;\n    var cappedHeight = parseInt(root.style.maxHeight, 10) || null;\n    var fixedHeight = height === 0 ? null : height;\n    return {\n      cappedHeight: cappedHeight,\n      fixedHeight: fixedHeight\n    };\n  };\n\n  var exceedsMaxFiles = function exceedsMaxFiles(root, items) {\n    var allowReplace = root.query('GET_ALLOW_REPLACE');\n    var allowMultiple = root.query('GET_ALLOW_MULTIPLE');\n    var totalItems = root.query('GET_TOTAL_ITEMS');\n    var maxItems = root.query('GET_MAX_FILES'); // total amount of items being dragged\n\n    var totalBrowseItems = items.length; // if does not allow multiple items and dragging more than one item\n\n    if (!allowMultiple && totalBrowseItems > 1) {\n      return true;\n    } // limit max items to one if not allowed to drop multiple items\n\n\n    maxItems = allowMultiple ? maxItems : allowReplace ? maxItems : 1; // no more room?\n\n    var hasMaxItems = isInt(maxItems);\n\n    if (hasMaxItems && totalItems + totalBrowseItems > maxItems) {\n      root.dispatch('DID_THROW_MAX_FILES', {\n        source: items,\n        error: createResponse('warning', 0, 'Max files')\n      });\n      return true;\n    }\n\n    return false;\n  };\n\n  var toggleAllowDrop = function toggleAllowDrop(_ref5) {\n    var root = _ref5.root,\n        props = _ref5.props,\n        action = _ref5.action;\n\n    if (action.value && !root.ref.hopper) {\n      var hopper = createHopper(root.element, function (items) {\n        // these files don't fit so stop here\n        if (exceedsMaxFiles(root, items)) {\n          return false;\n        } // all items should be validated by all filters as valid\n\n\n        var dropValidation = root.query('GET_DROP_VALIDATION');\n        return dropValidation ? items.every(function (item) {\n          return applyFilters('ALLOW_HOPPER_ITEM', item, {\n            query: root.query\n          }).every(function (result) {\n            return result === true;\n          });\n        }) : true;\n      }, {\n        catchesDropsOnPage: root.query('GET_DROP_ON_PAGE'),\n        requiresDropOnElement: root.query('GET_DROP_ON_ELEMENT')\n      });\n\n      hopper.onload = function (items, position) {\n        var itemList = root.ref.list.childViews[0];\n        var index = getItemIndexByPosition(itemList, {\n          left: position.scopeLeft,\n          top: position.scopeTop - root.ref.list.rect.outer.top + root.ref.list.element.scrollTop\n        });\n        forEachDelayed(items, function (source) {\n          root.dispatch('ADD_ITEM', {\n            interactionMethod: InteractionMethod.DROP,\n            source: source,\n            index: index\n          });\n        });\n        root.dispatch('DID_DROP', {\n          position: position\n        });\n        root.dispatch('DID_END_DRAG', {\n          position: position\n        });\n      };\n\n      hopper.ondragstart = function (position) {\n        root.dispatch('DID_START_DRAG', {\n          position: position\n        });\n      };\n\n      hopper.ondrag = debounce(function (position) {\n        root.dispatch('DID_DRAG', {\n          position: position\n        });\n      });\n\n      hopper.ondragend = function (position) {\n        root.dispatch('DID_END_DRAG', {\n          position: position\n        });\n      };\n\n      root.ref.hopper = hopper;\n      root.ref.drip = root.appendChildView(root.createChildView(drip));\n    } else if (!action.value && root.ref.hopper) {\n      root.ref.hopper.destroy();\n      root.ref.hopper = null;\n      root.removeChildView(root.ref.drip);\n    }\n  };\n  /**\n   * Enable or disable browse functionality\n   */\n\n\n  var toggleAllowBrowse = function toggleAllowBrowse(_ref6) {\n    var root = _ref6.root,\n        props = _ref6.props,\n        action = _ref6.action;\n\n    if (action.value) {\n      root.ref.browser = root.appendChildView(root.createChildView(browser, Object.assign({}, props, {\n        onload: function onload(items) {\n          // these files don't fit so stop here\n          if (exceedsMaxFiles(root, items)) {\n            return false;\n          } // add items!\n\n\n          forEachDelayed(items, function (source) {\n            root.dispatch('ADD_ITEM', {\n              interactionMethod: InteractionMethod.BROWSE,\n              source: source,\n              index: 0\n            });\n          });\n        }\n      })), 0);\n    } else if (root.ref.browser) {\n      root.removeChildView(root.ref.browser);\n    }\n  };\n  /**\n   * Enable or disable paste functionality\n   */\n\n\n  var toggleAllowPaste = function toggleAllowPaste(_ref7) {\n    var root = _ref7.root,\n        action = _ref7.action;\n\n    if (action.value) {\n      root.ref.paster = createPaster();\n\n      root.ref.paster.onload = function (items) {\n        forEachDelayed(items, function (source) {\n          root.dispatch('ADD_ITEM', {\n            interactionMethod: InteractionMethod.PASTE,\n            source: source,\n            index: 0\n          });\n        });\n      };\n    } else if (root.ref.paster) {\n      root.ref.paster.destroy();\n      root.ref.paster = null;\n    }\n  };\n  /**\n   * Route actions\n   */\n\n\n  var route = createRoute({\n    DID_SET_ALLOW_BROWSE: toggleAllowBrowse,\n    DID_SET_ALLOW_DROP: toggleAllowDrop,\n    DID_SET_ALLOW_PASTE: toggleAllowPaste\n  });\n  var root = createView({\n    name: 'root',\n    read: function read(_ref8) {\n      var root = _ref8.root;\n\n      if (root.ref.measure) {\n        root.ref.measureHeight = root.ref.measure.offsetHeight;\n      }\n    },\n    create: create$1,\n    write: write,\n    destroy: function destroy(_ref9) {\n      var root = _ref9.root;\n\n      if (root.ref.paster) {\n        root.ref.paster.destroy();\n      }\n\n      if (root.ref.hopper) {\n        root.ref.hopper.destroy();\n      }\n    },\n    mixins: {\n      styles: ['height']\n    }\n  }); // defaults\n  // view\n  // creates the app\n\n  var createApp$1 = function createApp() {\n    var initialOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}; // let element\n\n    var originalElement = null; // get default options\n\n    var defaultOptions$$1 = getOptions$1(); // create the data store, this will contain all our app info\n\n    var store = createStore( // initial state (should be serializable)\n    createInitialState(defaultOptions$$1), // queries\n    [queries, createOptionQueries(defaultOptions$$1)], // action handlers\n    [actions, createOptionActions(defaultOptions$$1)]); // set initial options\n\n    store.dispatch('SET_OPTIONS', {\n      options: initialOptions\n    }); // render initial view\n\n    var view = root(store, {\n      id: getUniqueId()\n    }); //\n    // PRIVATE API -------------------------------------------------------------------------------------\n    //\n\n    var resting = false;\n    var hidden = false;\n    var readWriteApi = {\n      // necessary for update loop\n\n      /**\n       * Reads from dom (never call manually)\n       * @private\n       */\n      _read: function _read() {\n        // if resting, no need to read as numbers will still all be correct\n        if (resting) {\n          return;\n        } // read view data\n\n\n        view._read(); // if root is hidden\n\n\n        hidden = view.rect.element.hidden;\n      },\n\n      /**\n       * Writes to dom (never call manually)\n       * @private\n       */\n      _write: function _write(ts) {\n        // don't do anything while hidden\n        if (hidden) {\n          return;\n        } // get all actions from store\n\n\n        var actions$$1 = store.processActionQueue() // filter out set actions (these will automatically trigger DID_SET)\n        .filter(function (action) {\n          return !/^SET_/.test(action.type);\n        }); // if was idling and no actions stop here\n\n        if (resting && !actions$$1.length) {\n          return;\n        } // some actions might trigger events\n\n\n        routeActionsToEvents(actions$$1); // update the view\n\n        resting = view._write(ts, actions$$1); // will clean up all archived items\n\n        removeReleasedItems(store.query('GET_ITEMS')); // now idling\n\n        if (resting) {\n          store.processDispatchQueue();\n        }\n      }\n    }; //\n    // EXPOSE EVENTS -------------------------------------------------------------------------------------\n    //\n\n    var createEvent = function createEvent(name) {\n      return function (data) {\n        // create default event\n        var event = {\n          type: name\n        }; // no data to add\n\n        if (!data) {\n          return event;\n        } // copy relevant props\n\n\n        if (data.hasOwnProperty('error')) {\n          event.error = data.error ? Object.assign({}, data.error) : null;\n        }\n\n        if (data.status) {\n          event.status = Object.assign({}, data.status);\n        }\n\n        if (data.file) {\n          event.output = data.file;\n        } // only source is available, else add item if possible\n\n\n        if (data.source) {\n          event.file = data.source;\n        } else if (data.item || data.id) {\n          var item = data.item ? data.item : store.query('GET_ITEM', data.id);\n          event.file = item ? createItemAPI(item) : null;\n        } // map all items in a possible items array\n\n\n        if (data.items) {\n          event.items = data.items.map(createItemAPI);\n        } // if this is a progress event add the progress amount\n\n\n        if (/progress/.test(name)) {\n          event.progress = data.progress;\n        }\n\n        return event;\n      };\n    };\n\n    var eventRoutes = {\n      DID_DESTROY: createEvent('destroy'),\n      DID_INIT: createEvent('init'),\n      DID_THROW_MAX_FILES: createEvent('warning'),\n      DID_START_ITEM_LOAD: createEvent('addfilestart'),\n      DID_UPDATE_ITEM_LOAD_PROGRESS: createEvent('addfileprogress'),\n      DID_LOAD_ITEM: createEvent('addfile'),\n      DID_THROW_ITEM_INVALID: [createEvent('error'), createEvent('addfile')],\n      DID_THROW_ITEM_LOAD_ERROR: [createEvent('error'), createEvent('addfile')],\n      DID_PREPARE_OUTPUT: createEvent('preparefile'),\n      DID_START_ITEM_PROCESSING: createEvent('processfilestart'),\n      DID_UPDATE_ITEM_PROCESS_PROGRESS: createEvent('processfileprogress'),\n      DID_ABORT_ITEM_PROCESSING: createEvent('processfileabort'),\n      DID_COMPLETE_ITEM_PROCESSING: createEvent('processfile'),\n      DID_REVERT_ITEM_PROCESSING: createEvent('processfilerevert'),\n      DID_THROW_ITEM_PROCESSING_ERROR: [createEvent('error'), createEvent('processfile')],\n      DID_REMOVE_ITEM: createEvent('removefile'),\n      DID_UPDATE_ITEMS: createEvent('updatefiles')\n    };\n\n    var exposeEvent = function exposeEvent(event) {\n      // create event object to be dispatched\n      var detail = Object.assign({\n        pond: exports\n      }, event);\n      delete detail.type;\n      view.element.dispatchEvent(new CustomEvent('FilePond:' + event.type, {\n        // event info\n        detail: detail,\n        // event behaviour\n        bubbles: true,\n        cancelable: true,\n        composed: true // triggers listeners outside of shadow root\n\n      })); // event object to params used for `on()` event handlers and callbacks `oninit()`\n\n      var params = []; // if is possible error event, make it the first param\n\n      if (event.hasOwnProperty('error')) {\n        params.push(event.error);\n      } // file is always section\n\n\n      if (event.hasOwnProperty('file')) {\n        params.push(event.file);\n      } // append other props\n\n\n      var filtered = ['type', 'error', 'file'];\n      Object.keys(event).filter(function (key) {\n        return !filtered.includes(key);\n      }).forEach(function (key) {\n        return params.push(event[key]);\n      }); // on(type, () => { })\n\n      exports.fire.apply(exports, [event.type].concat(params)); // oninit = () => {}\n\n      var handler = store.query('GET_ON' + event.type.toUpperCase());\n\n      if (handler) {\n        handler.apply(undefined, params);\n      }\n    };\n\n    var routeActionsToEvents = function routeActionsToEvents(actions$$1) {\n      if (!actions$$1.length) {\n        return;\n      }\n\n      actions$$1.forEach(function (action) {\n        if (!eventRoutes[action.type]) {\n          return;\n        }\n\n        var routes = eventRoutes[action.type];\n        (Array.isArray(routes) ? routes : [routes]).forEach(function (route) {\n          setTimeout(function () {\n            exposeEvent(route(action.data));\n          }, 0);\n        });\n      });\n    }; //\n    // PUBLIC API -------------------------------------------------------------------------------------\n    //\n\n\n    var setOptions = function setOptions(options) {\n      return store.dispatch('SET_OPTIONS', {\n        options: options\n      });\n    };\n\n    var getFile = function getFile(query) {\n      return store.query('GET_ACTIVE_ITEM', query);\n    };\n\n    var addFile = function addFile(source) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return new Promise(function (resolve, reject) {\n        store.dispatch('ADD_ITEM', {\n          interactionMethod: InteractionMethod.API,\n          source: source,\n          index: options.index,\n          success: resolve,\n          failure: reject,\n          options: options\n        });\n      });\n    };\n\n    var removeFile = function removeFile(query) {\n      // request item removal\n      store.dispatch('REMOVE_ITEM', {\n        query: query\n      }); // see if item has been removed\n\n      return store.query('GET_ACTIVE_ITEM', query) === null;\n    };\n\n    var addFiles = function addFiles() {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return new Promise(function (resolve, reject) {\n        var sources = [];\n        var options = {}; // user passed a sources array\n\n        if (isArray(args[0])) {\n          sources.push.apply(sources, toConsumableArray(args[0]));\n          Object.assign(options, args[1] || {});\n        } else {\n          // user passed sources as arguments, last one might be options object\n          var lastArgument = args[args.length - 1];\n\n          if ((typeof lastArgument === 'undefined' ? 'undefined' : _typeof(lastArgument)) === 'object' && !(lastArgument instanceof Blob)) {\n            Object.assign(options, args.pop());\n          } // add rest to sources\n\n\n          sources.push.apply(sources, args);\n        }\n\n        var sourcePromises = [];\n        var delayPromises = forEachDelayed(sources, function (source) {\n          sourcePromises.push(addFile(source, options));\n        });\n        Promise.all(delayPromises).then(function () {\n          Promise.all(sourcePromises).then(function (results) {\n            resolve(results);\n          });\n        });\n      });\n    };\n\n    var getFiles = function getFiles() {\n      return store.query('GET_ACTIVE_ITEMS');\n    };\n\n    var processFile = function processFile(query) {\n      return new Promise(function (resolve, reject) {\n        store.dispatch('REQUEST_ITEM_PROCESSING', {\n          query: query,\n          success: function success(item) {\n            resolve(item);\n          },\n          failure: function failure(error) {\n            reject(error);\n          }\n        });\n      });\n    };\n\n    var processFiles = function processFiles() {\n      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      var queries$$1 = Array.isArray(args[0]) ? args[0] : args;\n\n      if (!queries$$1.length) {\n        var files = getFiles().filter(function (item) {\n          return item.status !== ItemStatus.PROCESSING && item.status !== ItemStatus.PROCESSING_COMPLETE && item.status !== ItemStatus.PROCESSING_REVERT_ERROR;\n        });\n        return Promise.all(files.map(processFile));\n      }\n\n      return Promise.all(queries$$1.map(processFile));\n    };\n\n    var removeFiles = function removeFiles() {\n      for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      var queries$$1 = Array.isArray(args[0]) ? args[0] : args;\n      var files = getFiles();\n\n      if (!queries$$1.length) {\n        return Promise.all(files.map(removeFile));\n      } // when removing by index the indexes shift after each file removal so we need to convert indexes to ids\n\n\n      var mappedQueries = queries$$1.map(function (query) {\n        return isNumber(query) ? files[query] ? files[query].id : null : query;\n      }).filter(function (query) {\n        return query;\n      });\n      return mappedQueries.map(removeFile);\n    };\n\n    var exports = Object.assign({}, on(), readWriteApi, createOptionAPI(store, defaultOptions$$1), {\n      /**\n       * Override options defined in options object\n       * @param options\n       */\n      setOptions: setOptions,\n\n      /**\n       * Load the given file\n       * @param source - the source of the file (either a File, base64 data uri or url)\n       * @param options - object, { index: 0 }\n       */\n      addFile: addFile,\n\n      /**\n       * Load the given files\n       * @param sources - the sources of the files to load\n       * @param options - object, { index: 0 }\n       */\n      addFiles: addFiles,\n\n      /**\n       * Returns the file objects matching the given query\n       * @param query { string, number, null }\n       */\n      getFile: getFile,\n\n      /**\n       * Upload file with given name\n       * @param query { string, number, null  }\n       */\n      processFile: processFile,\n\n      /**\n       * Removes a file by its name\n       * @param query { string, number, null  }\n       */\n      removeFile: removeFile,\n\n      /**\n       * Returns all files (wrapped in public api)\n       */\n      getFiles: getFiles,\n\n      /**\n       * Starts uploading all files\n       */\n      processFiles: processFiles,\n\n      /**\n       * Clears all files from the files list\n       */\n      removeFiles: removeFiles,\n\n      /**\n       * Browse the file system for a file\n       */\n      browse: function browse() {\n        // needs to be trigger directly as user action needs to be traceable (is not traceable in requestAnimationFrame)\n        var input = view.element.querySelector('input[type=file]');\n\n        if (input) {\n          input.click();\n        }\n      },\n\n      /**\n       * Destroys the app\n       */\n      destroy: function destroy() {\n        // request destruction\n        exports.fire('destroy', view.element); // stop active processes (file uploads, fetches, stuff like that)\n        // loop over items and depending on states call abort for ongoing processes\n\n        store.dispatch('ABORT_ALL'); // destroy view\n\n        view._destroy(); // dispatch destroy\n\n\n        store.dispatch('DID_DESTROY');\n      },\n\n      /**\n       * Inserts the plugin before the target element\n       */\n      insertBefore: function insertBefore$$1(element) {\n        return insertBefore(view.element, element);\n      },\n\n      /**\n       * Inserts the plugin after the target element\n       */\n      insertAfter: function insertAfter$$1(element) {\n        return insertAfter(view.element, element);\n      },\n\n      /**\n       * Appends the plugin to the target element\n       */\n      appendTo: function appendTo(element) {\n        return element.appendChild(view.element);\n      },\n\n      /**\n       * Replaces an element with the app\n       */\n      replaceElement: function replaceElement(element) {\n        // insert the app before the element\n        insertBefore(view.element, element); // remove the original element\n\n        element.parentNode.removeChild(element); // remember original element\n\n        originalElement = element;\n      },\n\n      /**\n       * Restores the original element\n       */\n      restoreElement: function restoreElement() {\n        if (!originalElement) {\n          return; // no element to restore\n        } // restore original element\n\n\n        insertAfter(originalElement, view.element); // remove our element\n\n        view.element.parentNode.removeChild(view.element); // remove reference\n\n        originalElement = null;\n      },\n\n      /**\n       * Returns true if the app root is attached to given element\n       * @param element\n       */\n      isAttachedTo: function isAttachedTo(element) {\n        return view.element === element || originalElement === element;\n      },\n\n      /**\n       * Returns the root element\n       */\n      element: {\n        get: function get$$1() {\n          return view.element;\n        }\n      }\n    }); // Done!\n\n    store.dispatch('DID_INIT'); // create actual api object\n\n    return createObject(exports);\n  };\n\n  var createAppObject = function createAppObject() {\n    var customOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}; // default options\n\n    var defaultOptions$$1 = {};\n    forin(getOptions$1(), function (key, value) {\n      defaultOptions$$1[key] = value[0];\n    }); // set app options\n\n    var app = createApp$1(Object.assign({}, defaultOptions$$1, customOptions)); // return the plugin instance\n\n    return app;\n  };\n\n  var lowerCaseFirstLetter = function lowerCaseFirstLetter(string) {\n    return string.charAt(0).toLowerCase() + string.slice(1);\n  };\n\n  var attributeNameToPropertyName = function attributeNameToPropertyName(attributeName) {\n    return toCamels(attributeName.replace(/^data-/, ''));\n  };\n\n  var mapObject = function mapObject(object, propertyMap) {\n    // remove unwanted\n    forin(propertyMap, function (selector, mapping) {\n      forin(object, function (property, value) {\n        // create regexp shortcut\n        var selectorRegExp = new RegExp(selector); // tests if\n\n        var matches = selectorRegExp.test(property); // no match, skip\n\n        if (!matches) {\n          return;\n        } // if there's a mapping, the original property is always removed\n\n\n        delete object[property]; // should only remove, we done!\n\n        if (mapping === false) {\n          return;\n        } // move value to new property\n\n\n        if (isString(mapping)) {\n          object[mapping] = value;\n          return;\n        } // move to group\n\n\n        var group = mapping.group;\n\n        if (isObject(mapping) && !object[group]) {\n          object[group] = {};\n        }\n\n        object[group][lowerCaseFirstLetter(property.replace(selectorRegExp, ''))] = value;\n      }); // do submapping\n\n      if (mapping.mapping) {\n        mapObject(object[mapping.group], mapping.mapping);\n      }\n    });\n  };\n\n  var getAttributesAsObject = function getAttributesAsObject(node) {\n    var attributeMapping = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; // turn attributes into object\n\n    var attributes = [];\n    forin(node.attributes, function (index) {\n      attributes.push(node.attributes[index]);\n    });\n    var output = attributes.filter(function (attribute) {\n      return attribute.name;\n    }).reduce(function (obj, attribute) {\n      var value = attr(node, attribute.name);\n      obj[attributeNameToPropertyName(attribute.name)] = value === attribute.name ? true : value;\n      return obj;\n    }, {}); // do mapping of object properties\n\n    mapObject(output, attributeMapping);\n    return output;\n  };\n\n  var createAppAtElement = function createAppAtElement(element) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; // how attributes of the input element are mapped to the options for the plugin\n\n    var attributeMapping = {\n      // translate to other name\n      '^class$': 'className',\n      '^multiple$': 'allowMultiple',\n      '^capture$': 'captureMethod',\n      // group under single property\n      '^server': {\n        group: 'server',\n        mapping: {\n          '^process': {\n            group: 'process'\n          },\n          '^revert': {\n            group: 'revert'\n          },\n          '^fetch': {\n            group: 'fetch'\n          },\n          '^restore': {\n            group: 'restore'\n          },\n          '^load': {\n            group: 'load'\n          }\n        }\n      },\n      // don't include in object\n      '^type$': false,\n      '^files$': false\n    }; // add additional option translators\n\n    applyFilters('SET_ATTRIBUTE_TO_OPTION_MAP', attributeMapping); // create final options object by setting options object and then overriding options supplied on element\n\n    var mergedOptions = Object.assign({}, options);\n    var attributeOptions = getAttributesAsObject(element.nodeName === 'FIELDSET' ? element.querySelector('input[type=file]') : element, attributeMapping); // merge with options object\n\n    Object.keys(attributeOptions).forEach(function (key) {\n      if (isObject(attributeOptions[key])) {\n        if (!isObject(mergedOptions[key])) {\n          mergedOptions[key] = {};\n        }\n\n        Object.assign(mergedOptions[key], attributeOptions[key]);\n      } else {\n        mergedOptions[key] = attributeOptions[key];\n      }\n    }); // if parent is a fieldset, get files from parent by selecting all input fields that are not file upload fields\n    // these will then be automatically set to the initial files\n\n    mergedOptions.files = (options.files || []).concat([].concat(toConsumableArray(element.querySelectorAll('input:not([type=file])'))).map(function (input) {\n      return {\n        source: input.value,\n        options: {\n          type: input.dataset.type\n        }\n      };\n    })); // build plugin\n\n    var app = createAppObject(mergedOptions); // add already selected files\n\n    if (element.files) {\n      [].concat(toConsumableArray(element.files)).forEach(function (file) {\n        app.addFile(file);\n      });\n    } // replace the target element\n\n\n    app.replaceElement(element); // expose\n\n    return app;\n  }; // if an element is passed, we create the instance at that element, if not, we just create an up object\n\n\n  var createApp = function createApp() {\n    return isNode(arguments.length <= 0 ? undefined : arguments[0]) ? createAppAtElement.apply(undefined, arguments) : createAppObject.apply(undefined, arguments);\n  };\n\n  var PRIVATE_METHODS = ['fire', '_read', '_write'];\n\n  var createAppAPI = function createAppAPI(app) {\n    var api = {};\n    copyObjectPropertiesToObject(app, api, PRIVATE_METHODS);\n    return api;\n  };\n  /**\n   * Replaces placeholders in given string with replacements\n   * @param string - \"Foo {bar}\"\"\n   * @param replacements - { \"bar\": 10 }\n   */\n\n\n  var replaceInString = function replaceInString(string, replacements) {\n    return string.replace(/(?:{([a-zA-Z]+)})/g, function (match, group) {\n      return replacements[group];\n    });\n  };\n\n  var images = ['jpg', 'jpeg', 'png', 'gif', 'bmp', 'webp', 'svg', 'tiff'];\n  var text$1 = ['css', 'csv', 'html', 'txt'];\n  var map = {\n    zip: 'zip|compressed',\n    epub: 'application/epub+zip'\n  };\n\n  var guesstimateMimeType = function guesstimateMimeType() {\n    var extension = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    extension = extension.toLowerCase();\n\n    if (images.includes(extension)) {\n      return 'image/' + (extension === 'jpg' ? 'jpeg' : extension === 'svg' ? 'svg+xml' : extension);\n    }\n\n    if (text$1.includes(extension)) {\n      return 'text/' + extension;\n    }\n\n    return map[extension] || null;\n  };\n\n  var createWorker = function createWorker(fn) {\n    var workerBlob = new Blob(['(', fn.toString(), ')()'], {\n      type: 'application/javascript'\n    });\n    var workerURL = URL.createObjectURL(workerBlob);\n    var worker = new Worker(workerURL);\n    return {\n      transfer: function transfer(message, cb) {},\n      post: function post(message, cb, transferList) {\n        var id = getUniqueId();\n\n        worker.onmessage = function (e) {\n          if (e.data.id === id) {\n            cb(e.data.message);\n          }\n        };\n\n        worker.postMessage({\n          id: id,\n          message: message\n        }, transferList);\n      },\n      terminate: function terminate() {\n        worker.terminate();\n        URL.revokeObjectURL(workerURL);\n      }\n    };\n  };\n\n  var loadImage = function loadImage(url) {\n    return new Promise(function (resolve, reject) {\n      var img = new Image();\n\n      img.onload = function () {\n        resolve(img);\n      };\n\n      img.onerror = function (e) {\n        reject(e);\n      };\n\n      img.src = url;\n    });\n  };\n\n  var renameFile = function renameFile(file, name) {\n    var renamedFile = file.slice(0, file.size, file.type);\n    renamedFile.lastModifiedDate = file.lastModifiedDate;\n    renamedFile.name = name;\n    return renamedFile;\n  };\n\n  var copyFile = function copyFile(file) {\n    return renameFile(file, file.name);\n  }; // already registered plugins (can't register twice)\n\n\n  var registeredPlugins = []; // pass utils to plugin\n\n  var createAppPlugin = function createAppPlugin(plugin) {\n    // already registered\n    if (registeredPlugins.includes(plugin)) {\n      return;\n    } // remember this plugin\n\n\n    registeredPlugins.push(plugin); // setup!\n\n    var pluginOutline = plugin({\n      addFilter: addFilter,\n      utils: {\n        Type: Type,\n        forin: forin,\n        isString: isString,\n        isFile: isFile,\n        toNaturalFileSize: toNaturalFileSize,\n        replaceInString: replaceInString,\n        getExtensionFromFilename: getExtensionFromFilename,\n        getFilenameWithoutExtension: getFilenameWithoutExtension,\n        guesstimateMimeType: guesstimateMimeType,\n        getFileFromBlob: getFileFromBlob,\n        getFilenameFromURL: getFilenameFromURL,\n        createRoute: createRoute,\n        createWorker: createWorker,\n        createView: createView,\n        createItemAPI: createItemAPI,\n        loadImage: loadImage,\n        copyFile: copyFile,\n        renameFile: renameFile,\n        createBlob: createBlob,\n        applyFilterChain: applyFilterChain,\n        text: text,\n        getNumericAspectRatioFromString: getNumericAspectRatioFromString\n      },\n      views: {\n        fileActionButton: fileActionButton\n      }\n    }); // add plugin options to default options\n\n    extendDefaultOptions(pluginOutline.options);\n  }; // feature detection used by supported() method\n\n\n  var isOperaMini = function isOperaMini() {\n    return Object.prototype.toString.call(window.operamini) === '[object OperaMini]';\n  };\n\n  var hasPromises = function hasPromises() {\n    return 'Promise' in window;\n  };\n\n  var hasBlobSlice = function hasBlobSlice() {\n    return 'slice' in Blob.prototype;\n  };\n\n  var hasCreateObjectURL = function hasCreateObjectURL() {\n    return 'URL' in window && 'createObjectURL' in window.URL;\n  };\n\n  var hasVisibility = function hasVisibility() {\n    return 'visibilityState' in document;\n  };\n\n  var hasTiming = function hasTiming() {\n    return 'performance' in window;\n  }; // iOS 8.x\n\n\n  var isBrowser = function isBrowser() {\n    return typeof window !== 'undefined' && typeof window.document !== 'undefined';\n  };\n\n  var supported = function () {\n    // Runs immidiately and then remembers result for subsequent calls\n    var isSupported = // Has to be a browser\n    isBrowser() && // Can't run on Opera Mini due to lack of everything\n    !isOperaMini() && // Require these APIs to feature detect a modern browser\n    hasVisibility() && hasPromises() && hasBlobSlice() && hasCreateObjectURL() && hasTiming();\n    return function () {\n      return isSupported;\n    };\n  }();\n  /**\n   * Plugin internal state (over all instances)\n   */\n\n\n  var state = {\n    // active app instances, used to redraw the apps and to find the later\n    apps: []\n  }; // plugin name\n\n  var name = 'filepond';\n  /**\n   * Public Plugin methods\n   */\n\n  var fn = function fn() {};\n\n  exports.FileStatus = {};\n  exports.OptionTypes = {};\n  exports.create = fn;\n  exports.destroy = fn;\n  exports.parse = fn;\n  exports.find = fn;\n  exports.registerPlugin = fn;\n  exports.getOptions = fn;\n  exports.setOptions = fn;\n  exports.FileOrigin = {}; // if not supported, no API\n\n  if (supported()) {\n    // start painter and fire load event\n    createPainter(function () {\n      state.apps.forEach(function (app) {\n        return app._read();\n      });\n    }, function (ts) {\n      state.apps.forEach(function (app) {\n        return app._write(ts);\n      });\n    }); // fire loaded event so we know when FilePond is available\n\n    var dispatch = function dispatch() {\n      // let others know we have area ready\n      document.dispatchEvent(new CustomEvent('FilePond:loaded', {\n        detail: {\n          supported: supported,\n          create: exports.create,\n          destroy: exports.destroy,\n          parse: exports.parse,\n          find: exports.find,\n          registerPlugin: exports.registerPlugin,\n          setOptions: exports.setOptions\n        }\n      })); // clean up event\n\n      document.removeEventListener('DOMContentLoaded', dispatch);\n    };\n\n    if (document.readyState !== 'loading') {\n      // move to back of execution queue, FilePond should have been exported by then\n      setTimeout(function () {\n        return dispatch();\n      }, 0);\n    } else {\n      document.addEventListener('DOMContentLoaded', dispatch);\n    } // updates the OptionTypes object based on the current options\n\n\n    var updateOptionTypes = function updateOptionTypes() {\n      return forin(getOptions$1(), function (key, value) {\n        exports.OptionTypes[key] = value[1];\n      });\n    };\n\n    exports.FileOrigin = Object.assign({}, FileOrigin$1);\n    exports.FileStatus = Object.assign({}, ItemStatus);\n    exports.OptionTypes = {};\n    updateOptionTypes(); // create method, creates apps and adds them to the app array\n\n    exports.create = function create() {\n      var app = createApp.apply(undefined, arguments);\n      app.on('destroy', exports.destroy);\n      state.apps.push(app);\n      return createAppAPI(app);\n    }; // destroys apps and removes them from the app array\n\n\n    exports.destroy = function destroy(hook) {\n      // returns true if the app was destroyed successfully\n      var indexToRemove = state.apps.findIndex(function (app) {\n        return app.isAttachedTo(hook);\n      });\n\n      if (indexToRemove >= 0) {\n        // remove from apps\n        var app = state.apps.splice(indexToRemove, 1)[0]; // restore original dom element\n\n        app.restoreElement();\n        return true;\n      }\n\n      return false;\n    }; // parses the given context for plugins (does not include the context element itself)\n\n\n    exports.parse = function parse(context) {\n      // get all possible hooks\n      var matchedHooks = [].concat(toConsumableArray(context.querySelectorAll('.' + name))); // filter out already active hooks\n\n      var newHooks = matchedHooks.filter(function (newHook) {\n        return !state.apps.find(function (app) {\n          return app.isAttachedTo(newHook);\n        });\n      }); // create new instance for each hook\n\n      return newHooks.map(function (hook) {\n        return exports.create(hook);\n      });\n    }; // returns an app based on the given element hook\n\n\n    exports.find = function find(hook) {\n      var app = state.apps.find(function (app) {\n        return app.isAttachedTo(hook);\n      });\n\n      if (!app) {\n        return null;\n      }\n\n      return createAppAPI(app);\n    }; // adds a plugin extension\n\n\n    exports.registerPlugin = function registerPlugin() {\n      for (var _len = arguments.length, plugins = Array(_len), _key = 0; _key < _len; _key++) {\n        plugins[_key] = arguments[_key];\n      } // register plugins\n\n\n      plugins.forEach(createAppPlugin); // update OptionTypes, each plugin might have extended the default options\n\n      updateOptionTypes();\n    };\n\n    exports.getOptions = function getOptions$$1() {\n      var opts = {};\n      forin(getOptions$1(), function (key, value) {\n        opts[key] = value[0];\n      });\n      return opts;\n    };\n\n    exports.setOptions = function setOptions$$1(opts) {\n      if (isObject(opts)) {\n        // update existing plugins\n        state.apps.forEach(function (app) {\n          app.setOptions(opts);\n        }); // override defaults\n\n        setOptions$1(opts);\n      } // return new options\n\n\n      return exports.getOptions();\n    };\n  }\n\n  exports.supported = supported;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","/*!\n * FilePondPluginImageExifOrientation 1.0.6\n * Licensed under MIT, https://opensource.org/licenses/MIT/\n * Please visit https://pqina.nl/filepond/ for details.\n */\n\n/* eslint-disable */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = global || self, global.FilePondPluginImageExifOrientation = factory());\n})(this, function () {\n  'use strict'; // test if file is of type image\n\n  var isJPEG = function isJPEG(file) {\n    return /^image\\/jpeg/.test(file.type);\n  };\n\n  var Marker = {\n    JPEG: 0xffd8,\n    APP1: 0xffe1,\n    EXIF: 0x45786966,\n    TIFF: 0x4949,\n    Orientation: 0x0112,\n    Unknown: 0xff00\n  };\n\n  var getUint16 = function getUint16(view, offset) {\n    var little = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    return view.getUint16(offset, little);\n  };\n\n  var getUint32 = function getUint32(view, offset) {\n    var little = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    return view.getUint32(offset, little);\n  };\n\n  var getImageOrientation = function getImageOrientation(file) {\n    return new Promise(function (resolve, reject) {\n      var reader = new FileReader();\n\n      reader.onload = function (e) {\n        var view = new DataView(e.target.result); // Every JPEG file starts from binary value '0xFFD8'\n\n        if (getUint16(view, 0) !== Marker.JPEG) {\n          // This aint no JPEG\n          resolve(-1);\n          return;\n        }\n\n        var length = view.byteLength;\n        var offset = 2;\n\n        while (offset < length) {\n          var marker = getUint16(view, offset);\n          offset += 2; // There's our APP1 Marker\n\n          if (marker === Marker.APP1) {\n            if (getUint32(view, offset += 2) !== Marker.EXIF) {\n              // no EXIF info defined\n              break;\n            } // Get TIFF Header\n\n\n            var little = getUint16(view, offset += 6) === Marker.TIFF;\n            offset += getUint32(view, offset + 4, little);\n            var tags = getUint16(view, offset, little);\n            offset += 2;\n\n            for (var i = 0; i < tags; i++) {\n              // found the orientation tag\n              if (getUint16(view, offset + i * 12, little) === Marker.Orientation) {\n                resolve(getUint16(view, offset + i * 12 + 8, little));\n                return;\n              }\n            }\n          } else if ((marker & Marker.Unknown) !== Marker.Unknown) {\n            // Invalid\n            break;\n          } else {\n            offset += getUint16(view, offset);\n          }\n        } // Nothing found\n\n\n        resolve(-1);\n      }; // we don't need to read the entire file to get the orientation\n\n\n      reader.readAsArrayBuffer(file.slice(0, 64 * 1024));\n    });\n  };\n  /**\n   * Read Image Orientation Plugin\n   */\n\n\n  var plugin = function plugin(_ref) {\n    var addFilter = _ref.addFilter,\n        utils = _ref.utils;\n    var Type = utils.Type,\n        isFile = utils.isFile; // subscribe to file load and append required info\n\n    addFilter('DID_LOAD_ITEM', function (item, _ref2) {\n      var query = _ref2.query;\n      return new Promise(function (resolve, reject) {\n        // get file reference\n        var file = item.file; // if this is not a jpeg image we are not interested\n\n        if (!isFile(file) || !isJPEG(file) || !query('GET_ALLOW_IMAGE_EXIF_ORIENTATION')) {\n          // continue with the unaltered dataset\n          return resolve(item);\n        } // get orientation from exif data\n\n\n        getImageOrientation(file).then(function (orientation) {\n          item.setMetadata('exif', {\n            orientation: orientation\n          });\n          resolve(item);\n        });\n      });\n    }); // Expose plugin options\n\n    return {\n      options: {\n        // Enable or disable image orientation reading\n        allowImageExifOrientation: [true, Type.BOOLEAN]\n      }\n    };\n  }; // fire pluginloaded event if running in browser, this allows registering the plugin when using async script tags\n\n\n  var isBrowser = typeof window !== 'undefined' && typeof window.document !== 'undefined';\n\n  if (isBrowser) {\n    document.dispatchEvent(new CustomEvent('FilePond:pluginloaded', {\n      detail: plugin\n    }));\n  }\n\n  return plugin;\n});","/*\n * FilePondPluginImagePreview 3.1.6\n * Licensed under MIT, https://opensource.org/licenses/MIT\n * Please visit https://pqina.nl/filepond for details.\n */\n\n/* eslint-disable */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.FilePondPluginImagePreview = factory();\n})(this, function () {\n  'use strict'; // test if file is of type image and can be viewed in canvas\n\n  var isPreviewableImage = function isPreviewableImage(file) {\n    return /^image/.test(file.type);\n  };\n\n  var cloneCanvas = function cloneCanvas(origin, target) {\n    target = target || document.createElement('canvas');\n    target.width = origin.width;\n    target.height = origin.height;\n    var ctx = target.getContext('2d');\n    ctx.drawImage(origin, 0, 0);\n    return target;\n  };\n\n  var IMAGE_SCALE_SPRING_PROPS = {\n    type: 'spring',\n    stiffness: 0.5,\n    damping: 0.45,\n    mass: 10\n  };\n\n  var createVector = function createVector(x, y) {\n    return {\n      x: x,\n      y: y\n    };\n  };\n\n  var vectorDot = function vectorDot(a, b) {\n    return a.x * b.x + a.y * b.y;\n  };\n\n  var vectorSubtract = function vectorSubtract(a, b) {\n    return createVector(a.x - b.x, a.y - b.y);\n  };\n\n  var vectorDistanceSquared = function vectorDistanceSquared(a, b) {\n    return vectorDot(vectorSubtract(a, b), vectorSubtract(a, b));\n  };\n\n  var vectorDistance = function vectorDistance(a, b) {\n    return Math.sqrt(vectorDistanceSquared(a, b));\n  };\n\n  var getOffsetPointOnEdge = function getOffsetPointOnEdge(length, rotation) {\n    var a = length;\n    var A = 1.5707963267948966;\n    var B = rotation;\n    var C = 1.5707963267948966 - rotation;\n    var sinA = Math.sin(A);\n    var sinB = Math.sin(B);\n    var sinC = Math.sin(C);\n    var cosC = Math.cos(C);\n    var ratio = a / sinA;\n    var b = ratio * sinB;\n    var c = ratio * sinC;\n    return createVector(cosC * b, cosC * c);\n  };\n\n  var getRotatedRectSize = function getRotatedRectSize(rect, rotation) {\n    var w = rect.width;\n    var h = rect.height;\n    var hor = getOffsetPointOnEdge(w, rotation);\n    var ver = getOffsetPointOnEdge(h, rotation);\n    var tl = createVector(rect.x + Math.abs(hor.x), rect.y - Math.abs(hor.y));\n    var tr = createVector(rect.x + rect.width + Math.abs(ver.y), rect.y + Math.abs(ver.x));\n    var bl = createVector(rect.x - Math.abs(ver.y), rect.y + rect.height - Math.abs(ver.x));\n    return {\n      width: vectorDistance(tl, tr),\n      height: vectorDistance(tl, bl)\n    };\n  };\n\n  var getImageRectZoomFactor = function getImageRectZoomFactor(imageRect, cropRect, rotation, center) {\n    // calculate available space round image center position\n    var cx = center.x > 0.5 ? 1 - center.x : center.x;\n    var cy = center.y > 0.5 ? 1 - center.y : center.y;\n    var imageWidth = cx * 2 * imageRect.width;\n    var imageHeight = cy * 2 * imageRect.height; // calculate rotated crop rectangle size\n\n    var rotatedCropSize = getRotatedRectSize(cropRect, rotation); // calculate scalar required to fit image\n\n    return Math.max(rotatedCropSize.width / imageWidth, rotatedCropSize.height / imageHeight);\n  };\n\n  var getCenteredCropRect = function getCenteredCropRect(container, aspectRatio) {\n    var width = container.width;\n    var height = width * aspectRatio;\n\n    if (height > container.height) {\n      height = container.height;\n      width = height / aspectRatio;\n    }\n\n    var x = (container.width - width) * 0.5;\n    var y = (container.height - height) * 0.5;\n    return {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    };\n  }; // does horizontal and vertical flipping\n\n\n  var createBitmapView = function createBitmapView(_) {\n    return _.utils.createView({\n      name: 'image-bitmap',\n      tag: 'canvas',\n      ignoreRect: true,\n      mixins: {\n        styles: ['scaleX', 'scaleY']\n      },\n      create: function create(_ref) {\n        var root = _ref.root,\n            props = _ref.props;\n        cloneCanvas(props.image, root.element);\n      }\n    });\n  }; // shifts and rotates image\n\n\n  var createImageCanvasWrapper = function createImageCanvasWrapper(_) {\n    return _.utils.createView({\n      name: 'image-canvas-wrapper',\n      tag: 'div',\n      ignoreRect: true,\n      mixins: {\n        apis: ['crop', 'width', 'height'],\n        styles: ['originX', 'originY', 'translateX', 'translateY', 'scaleX', 'scaleY', 'rotateZ'],\n        animations: {\n          originX: IMAGE_SCALE_SPRING_PROPS,\n          originY: IMAGE_SCALE_SPRING_PROPS,\n          scaleX: IMAGE_SCALE_SPRING_PROPS,\n          scaleY: IMAGE_SCALE_SPRING_PROPS,\n          translateX: IMAGE_SCALE_SPRING_PROPS,\n          translateY: IMAGE_SCALE_SPRING_PROPS,\n          rotateZ: IMAGE_SCALE_SPRING_PROPS\n        }\n      },\n      create: function create(_ref2) {\n        var root = _ref2.root,\n            props = _ref2.props;\n        props.width = props.image.width;\n        props.height = props.image.height;\n        root.ref.image = root.appendChildView(root.createChildView(createBitmapView(_), {\n          image: props.image\n        }));\n      },\n      write: function write(_ref3) {\n        var root = _ref3.root,\n            props = _ref3.props;\n        var flip = props.crop.flip;\n        var image = root.ref.image;\n        image.scaleX = flip.horizontal ? -1 : 1;\n        image.scaleY = flip.vertical ? -1 : 1;\n      }\n    });\n  }; // clips canvas to correct aspect ratio\n\n\n  var createClipView = function createClipView(_) {\n    return _.utils.createView({\n      name: 'image-clip',\n      tag: 'div',\n      ignoreRect: true,\n      mixins: {\n        apis: ['crop', 'width', 'height'],\n        styles: ['width', 'height']\n      },\n      create: function create(_ref4) {\n        var root = _ref4.root,\n            props = _ref4.props;\n        root.ref.image = root.appendChildView(root.createChildView(createImageCanvasWrapper(_), Object.assign({}, props))); // set up transparency grid\n\n        var transparencyIndicator = root.query('GET_IMAGE_PREVIEW_TRANSPARENCY_INDICATOR');\n\n        if (transparencyIndicator === null) {\n          return;\n        } // grid pattern\n\n\n        if (transparencyIndicator === 'grid') {\n          root.element.dataset.transparencyIndicator = transparencyIndicator;\n        } else {\n          // basic color\n          root.element.dataset.transparencyIndicator = 'color';\n        }\n      },\n      write: function write(_ref5) {\n        var root = _ref5.root,\n            props = _ref5.props;\n        var crop = props.crop,\n            width = props.width,\n            height = props.height;\n        root.ref.image.crop = crop;\n        var stage = {\n          x: 0,\n          y: 0,\n          width: width,\n          height: height,\n          center: {\n            x: width * 0.5,\n            y: height * 0.5\n          }\n        };\n        var image = {\n          width: root.ref.image.width,\n          height: root.ref.image.height\n        };\n        var origin = {\n          x: crop.center.x * image.width,\n          y: crop.center.y * image.height\n        };\n        var translation = {\n          x: stage.center.x - image.width * crop.center.x,\n          y: stage.center.y - image.height * crop.center.y\n        };\n        var rotation = Math.PI * 2 + crop.rotation % (Math.PI * 2);\n        var cropAspectRatio = crop.aspectRatio || image.height / image.width;\n        var stageZoomFactor = getImageRectZoomFactor(image, getCenteredCropRect(stage, cropAspectRatio), rotation, crop.center);\n        var scale = crop.zoom * stageZoomFactor;\n        var imageView = root.ref.image;\n        imageView.originX = origin.x;\n        imageView.originY = origin.y;\n        imageView.translateX = translation.x;\n        imageView.translateY = translation.y;\n        imageView.rotateZ = rotation;\n        imageView.scaleX = scale;\n        imageView.scaleY = scale;\n      }\n    });\n  };\n\n  var createImageView = function createImageView(_) {\n    return _.utils.createView({\n      name: 'image-preview',\n      tag: 'div',\n      ignoreRect: true,\n      mixins: {\n        apis: ['crop'],\n        styles: ['translateY', 'scaleX', 'scaleY', 'opacity'],\n        animations: {\n          scaleX: IMAGE_SCALE_SPRING_PROPS,\n          scaleY: IMAGE_SCALE_SPRING_PROPS,\n          translateY: IMAGE_SCALE_SPRING_PROPS,\n          opacity: {\n            type: 'tween',\n            duration: 500\n          }\n        }\n      },\n      create: function create(_ref6) {\n        var root = _ref6.root,\n            props = _ref6.props;\n        root.ref.clip = root.appendChildView(root.createChildView(createClipView(_), {\n          image: props.image,\n          crop: props.crop\n        }));\n      },\n      write: function write(_ref7) {\n        var root = _ref7.root,\n            props = _ref7.props;\n        var clip = root.ref.clip;\n        var crop = props.crop,\n            image = props.image;\n        clip.crop = crop; // calculate scaled preview image size\n\n        var imageAspectRatio = image.height / image.width;\n        var aspectRatio = crop.aspectRatio || imageAspectRatio; // calculate container size\n\n        var containerWidth = root.rect.inner.width;\n        var previewWidth = containerWidth;\n        var fixedPreviewHeight = root.query('GET_IMAGE_PREVIEW_HEIGHT');\n        var minPreviewHeight = root.query('GET_IMAGE_PREVIEW_MIN_HEIGHT');\n        var maxPreviewHeight = root.query('GET_IMAGE_PREVIEW_MAX_HEIGHT');\n        var panelAspectRatio = root.query('GET_PANEL_ASPECT_RATIO');\n        var allowMultiple = root.query('GET_ALLOW_MULTIPLE');\n\n        if (panelAspectRatio && !allowMultiple) {\n          fixedPreviewHeight = containerWidth * panelAspectRatio;\n          aspectRatio = panelAspectRatio;\n        } // determine clip width and height\n\n\n        var clipHeight = fixedPreviewHeight !== null ? fixedPreviewHeight : Math.max(minPreviewHeight, Math.min(containerWidth * aspectRatio, maxPreviewHeight));\n        var clipWidth = clipHeight / aspectRatio;\n\n        if (clipWidth > previewWidth) {\n          clipWidth = previewWidth;\n          clipHeight = clipWidth * aspectRatio;\n        }\n\n        clip.width = clipWidth;\n        clip.height = clipHeight;\n      }\n    });\n  };\n  /**\n   * Create gradient and mask definitions, we use these in each overlay so we can define them once\n   * Turns out this also helps Safari to render the gradient on time\n   */\n\n\n  var definitions = \"<radialGradient id=\\\"filepond--image-preview-radial-gradient\\\" cx=\\\".5\\\" cy=\\\"1.25\\\" r=\\\"1.15\\\">\\n<stop offset='50%' stop-color='#000000'/>\\n<stop offset='56%' stop-color='#0a0a0a'/>\\n<stop offset='63%' stop-color='#262626'/>\\n<stop offset='69%' stop-color='#4f4f4f'/>\\n<stop offset='75%' stop-color='#808080'/>\\n<stop offset='81%' stop-color='#b1b1b1'/>\\n<stop offset='88%' stop-color='#dadada'/>\\n<stop offset='94%' stop-color='#f6f6f6'/>\\n<stop offset='100%' stop-color='#ffffff'/>\\n</radialGradient>\\n\\n<mask id=\\\"filepond--image-preview-masking\\\">\\n<rect x=\\\"0\\\" y=\\\"0\\\" width=\\\"500\\\" height=\\\"200\\\" fill=\\\"url(#filepond--image-preview-radial-gradient)\\\"></rect>\\n</mask>\";\n\n  var appendDefinitions = function appendDefinitions() {\n    if (!document.body || document.querySelector('.filepond--image-preview-sprite')) return;\n    var defs = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    defs.setAttribute('class', 'filepond--image-preview-sprite');\n    defs.style.cssText = 'position:absolute;width:0;height:0';\n    defs.innerHTML = definitions;\n    document.body.appendChild(defs);\n  };\n\n  var hasNavigator = typeof navigator !== 'undefined';\n\n  if (hasNavigator) {\n    appendDefinitions();\n    document.addEventListener('readystatechange', appendDefinitions);\n  } // need to know if this is IE11 so we can render the definitions with each overlay\n\n\n  var isEdgeOrIE = hasNavigator ? document.documentMode || /Edge/.test(navigator.userAgent) : false;\n\n  var createImageOverlayView = function createImageOverlayView(fpAPI) {\n    return fpAPI.utils.createView({\n      name: 'image-preview-overlay',\n      tag: 'div',\n      ignoreRect: true,\n      create: function create(_ref) {\n        var root = _ref.root,\n            props = _ref.props;\n        root.element.classList.add('filepond--image-preview-overlay-' + props.status);\n        root.element.innerHTML = '<svg width=\"500\" height=\"200\" viewBox=\"0 0 500 200\" preserveAspectRatio=\"none\">\\n                ' + (isEdgeOrIE ? '<defs>' + definitions + '</defs>' : '') + '\\n                <rect x=\"0\" width=\"500\" height=\"200\" fill=\"currentColor\" mask=\"url(#filepond--image-preview-masking)\"></rect>\\n            </svg>\\n            ';\n      },\n      mixins: {\n        styles: ['opacity'],\n        animations: {\n          opacity: {\n            type: 'spring',\n            mass: 25\n          }\n        }\n      }\n    });\n  };\n  /**\n   * Bitmap Worker\n   */\n\n\n  var BitmapWorker = function BitmapWorker() {\n    self.onmessage = function (e) {\n      createImageBitmap(e.data.message.file).then(function (bitmap) {\n        self.postMessage({\n          id: e.data.id,\n          message: bitmap\n        }, [bitmap]);\n      });\n    };\n  };\n\n  var getImageSize = function getImageSize(url, cb) {\n    var image = new Image();\n\n    image.onload = function () {\n      var width = image.naturalWidth;\n      var height = image.naturalHeight;\n      image = null;\n      cb(width, height);\n    };\n\n    image.src = url;\n  };\n\n  var toConsumableArray = function toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n        arr2[i] = arr[i];\n      }\n\n      return arr2;\n    } else {\n      return Array.from(arr);\n    }\n  };\n\n  var transforms = {\n    1: function _() {\n      return [1, 0, 0, 1, 0, 0];\n    },\n    2: function _(width) {\n      return [-1, 0, 0, 1, width, 0];\n    },\n    3: function _(width, height) {\n      return [-1, 0, 0, -1, width, height];\n    },\n    4: function _(width, height) {\n      return [1, 0, 0, -1, 0, height];\n    },\n    5: function _() {\n      return [0, 1, 1, 0, 0, 0];\n    },\n    6: function _(width, height) {\n      return [0, 1, -1, 0, height, 0];\n    },\n    7: function _(width, height) {\n      return [0, -1, -1, 0, height, width];\n    },\n    8: function _(width) {\n      return [0, -1, 1, 0, 0, width];\n    }\n  };\n\n  var fixImageOrientation = function fixImageOrientation(ctx, width, height, orientation) {\n    // no orientation supplied\n    if (orientation === -1) {\n      return;\n    }\n\n    ctx.transform.apply(ctx, toConsumableArray(transforms[orientation](width, height)));\n  }; // draws the preview image to canvas\n\n\n  var createPreviewImage = function createPreviewImage(data, width, height, orientation) {\n    // can't draw on half pixels\n    width = Math.round(width);\n    height = Math.round(height); // draw image\n\n    var canvas = document.createElement('canvas');\n    canvas.width = width;\n    canvas.height = height;\n    var ctx = canvas.getContext('2d'); // if is rotated incorrectly swap width and height\n\n    if (orientation >= 5 && orientation <= 8) {\n      var _ref = [height, width];\n      width = _ref[0];\n      height = _ref[1];\n    } // correct image orientation\n\n\n    fixImageOrientation(ctx, width, height, orientation); // draw the image\n\n    ctx.drawImage(data, 0, 0, width, height);\n    return canvas;\n  };\n\n  var isBitmap = function isBitmap(file) {\n    return /^image/.test(file.type) && !/svg/.test(file.type);\n  };\n\n  var MAX_WIDTH = 10;\n  var MAX_HEIGHT = 10;\n\n  var calculateAverageColor = function calculateAverageColor(image) {\n    var scalar = Math.min(MAX_WIDTH / image.width, MAX_HEIGHT / image.height);\n    var canvas = document.createElement('canvas');\n    var ctx = canvas.getContext('2d');\n    var width = canvas.width = Math.ceil(image.width * scalar);\n    var height = canvas.height = Math.ceil(image.height * scalar);\n    ctx.drawImage(image, 0, 0, width, height);\n    var data = null;\n\n    try {\n      data = ctx.getImageData(0, 0, width, height).data;\n    } catch (e) {\n      return null;\n    }\n\n    var l = data.length;\n    var r = 0;\n    var g = 0;\n    var b = 0;\n    var i = 0;\n\n    for (; i < l; i += 4) {\n      r += data[i] * data[i];\n      g += data[i + 1] * data[i + 1];\n      b += data[i + 2] * data[i + 2];\n    }\n\n    r = averageColor(r, l);\n    g = averageColor(g, l);\n    b = averageColor(b, l);\n    return {\n      r: r,\n      g: g,\n      b: b\n    };\n  };\n\n  var averageColor = function averageColor(c, l) {\n    return Math.floor(Math.sqrt(c / (l / 4)));\n  };\n\n  var loadImage = function loadImage(url) {\n    return new Promise(function (resolve, reject) {\n      var img = new Image();\n      img.crossOrigin = 'Anonymous';\n\n      img.onload = function () {\n        resolve(img);\n      };\n\n      img.onerror = function (e) {\n        reject(e);\n      };\n\n      img.src = url;\n    });\n  };\n\n  var createImageWrapperView = function createImageWrapperView(_) {\n    // create overlay view\n    var overlay = createImageOverlayView(_);\n\n    var removeImageView = function removeImageView(root, imageView) {\n      root.removeChildView(imageView);\n\n      imageView._destroy();\n    }; // remove an image\n\n\n    var shiftImage = function shiftImage(_ref) {\n      var root = _ref.root;\n      var image = root.ref.images.shift();\n      image.opacity = 0;\n      image.translateY = -15;\n      root.ref.imageViewBin.push(image);\n    };\n\n    var ImageView = createImageView(_); // add new image\n\n    var pushImage = function pushImage(_ref2) {\n      var root = _ref2.root,\n          props = _ref2.props;\n      var id = props.id;\n      var item = root.query('GET_ITEM', {\n        id: id\n      });\n      if (!item) return;\n      var image = props.preview;\n      var crop = item.getMetadata('crop') || {\n        center: {\n          x: 0.5,\n          y: 0.5\n        },\n        flip: {\n          horizontal: false,\n          vertical: false\n        },\n        zoom: 1,\n        rotation: 0,\n        aspectRatio: null\n      }; // append image presenter\n\n      var imageView = root.appendChildView(root.createChildView(ImageView, {\n        image: image,\n        crop: crop,\n        opacity: 0,\n        scaleX: 1.15,\n        scaleY: 1.15,\n        translateY: 15\n      }), root.childViews.length);\n      root.ref.images.push(imageView); // reveal\n\n      imageView.opacity = 1;\n      imageView.scaleX = 1;\n      imageView.scaleY = 1;\n      imageView.translateY = 0; // the preview is now ready to be drawn\n\n      setTimeout(function () {\n        root.dispatch('DID_IMAGE_PREVIEW_SHOW', {\n          id: id\n        });\n      }, 250);\n    };\n\n    var updateImage = function updateImage(_ref3) {\n      var root = _ref3.root,\n          props = _ref3.props;\n      var item = root.query('GET_ITEM', {\n        id: props.id\n      });\n      if (!item) return;\n      var imageView = root.ref.images[root.ref.images.length - 1];\n      imageView.crop = item.getMetadata('crop');\n    }; // replace image preview\n\n\n    var didUpdateItemMetadata = function didUpdateItemMetadata(_ref4) {\n      var root = _ref4.root,\n          props = _ref4.props,\n          action = _ref4.action;\n\n      if (action.change.key !== 'crop' || !root.ref.images.length) {\n        return;\n      }\n\n      var item = root.query('GET_ITEM', {\n        id: props.id\n      });\n      if (!item) return;\n      var crop = item.getMetadata('crop');\n      var image = root.ref.images[root.ref.images.length - 1]; // if aspect ratio has changed, we need to create a new image\n\n      if (Math.abs(crop.aspectRatio - image.crop.aspectRatio) > 0.00001) {\n        shiftImage({\n          root: root\n        });\n        pushImage({\n          root: root,\n          props: props\n        });\n      } else {\n        // if not, we can update the current image\n        updateImage({\n          root: root,\n          props: props\n        });\n      }\n    };\n\n    var canCreateImageBitmap = function canCreateImageBitmap(file) {\n      return 'createImageBitmap' in window && isBitmap(file);\n    };\n    /**\n     * Write handler for when preview container has been created\n     */\n\n\n    var didCreatePreviewContainer = function didCreatePreviewContainer(_ref5) {\n      var root = _ref5.root,\n          props = _ref5.props;\n      var utils = _.utils;\n      var createWorker = utils.createWorker;\n      var id = props.id; // we need to get the file data to determine the eventual image size\n\n      var item = root.query('GET_ITEM', id);\n      if (!item) return; // get url to file (we'll revoke it later on when done)\n\n      var fileURL = URL.createObjectURL(item.file); // fallback\n\n      var loadPreviewFallback = function loadPreviewFallback() {\n        // let's scale the image in the main thread :(\n        loadImage(fileURL).then(previewImageLoaded);\n      }; // image is now ready\n\n\n      var previewImageLoaded = function previewImageLoaded(data) {\n        // the file url is no longer needed\n        URL.revokeObjectURL(fileURL); // draw the scaled down version here and use that as source so bitmapdata can be closed\n        // orientation info\n\n        var exif = item.getMetadata('exif') || {};\n        var orientation = exif.orientation || -1; // get width and height from action, and swap if orientation is incorrect\n\n        var width = data.width,\n            height = data.height;\n\n        if (orientation >= 5 && orientation <= 8) {\n          var _ref6 = [height, width];\n          width = _ref6[0];\n          height = _ref6[1];\n        } // scale canvas based on pixel density\n\n\n        var pixelDensityFactor = window.devicePixelRatio; // the max height of the preview container\n\n        var fixedPreviewHeight = root.query('GET_IMAGE_PREVIEW_HEIGHT');\n        var minPreviewHeight = root.query('GET_IMAGE_PREVIEW_MIN_HEIGHT');\n        var maxPreviewHeight = root.query('GET_IMAGE_PREVIEW_MAX_HEIGHT'); // calculate scaled preview image size\n\n        var previewImageRatio = height / width; // calculate image preview height and width\n\n        var imageHeight = fixedPreviewHeight !== null ? fixedPreviewHeight : Math.max(minPreviewHeight, Math.min(height, maxPreviewHeight));\n        var imageWidth = imageHeight / previewImageRatio; // we want as much pixels to work with as possible,\n        // this multiplies the minimum image resolution\n\n        var resolutionScaleFactor = 4; // transfer to image tag so no canvas memory wasted on iOS\n\n        props.preview = createPreviewImage(data, Math.min(width, imageWidth * pixelDensityFactor * resolutionScaleFactor), Math.min(height, imageHeight * pixelDensityFactor * resolutionScaleFactor), orientation); // calculate average image color, disabled for now\n\n        var averageColor = root.query('GET_IMAGE_PREVIEW_CALCULATE_AVERAGE_IMAGE_COLOR') ? calculateAverageColor(data) : null;\n        item.setMetadata('color', averageColor, true); // data has been transferred to canvas ( if was ImageBitmap )\n\n        if ('close' in data) {\n          data.close();\n        } // show the overlay\n\n\n        root.ref.overlayShadow.opacity = 1; // create the first image\n\n        pushImage({\n          root: root,\n          props: props\n        });\n      }; // determine image size of this item\n\n\n      getImageSize(fileURL, function (width, height) {\n        // we can now scale the panel to the final size\n        root.dispatch('DID_IMAGE_PREVIEW_CALCULATE_SIZE', {\n          id: id,\n          width: width,\n          height: height\n        }); // if we support scaling using createImageBitmap we use a worker\n\n        if (canCreateImageBitmap(item.file)) {\n          // let's scale the image in a worker\n          var worker = createWorker(BitmapWorker);\n          worker.post({\n            file: item.file\n          }, function (imageBitmap) {\n            // destroy worker\n            worker.terminate(); // no bitmap returned, must be something wrong,\n            // try the oldschool way\n\n            if (!imageBitmap) {\n              loadPreviewFallback();\n              return;\n            } // yay we got our bitmap, let's continue showing the preview\n\n\n            previewImageLoaded(imageBitmap);\n          });\n        } else {\n          // create fallback preview\n          loadPreviewFallback();\n        }\n      });\n    };\n    /**\n     * Write handler for when the preview image is ready to be animated\n     */\n\n\n    var didDrawPreview = function didDrawPreview(_ref7) {\n      var root = _ref7.root; // get last added image\n\n      var image = root.ref.images[root.ref.images.length - 1];\n      image.translateY = 0;\n      image.scaleX = 1.0;\n      image.scaleY = 1.0;\n      image.opacity = 1;\n    };\n    /**\n     * Write handler for when the preview has been loaded\n     */\n\n\n    var restoreOverlay = function restoreOverlay(_ref8) {\n      var root = _ref8.root;\n      root.ref.overlayShadow.opacity = 1;\n      root.ref.overlayError.opacity = 0;\n      root.ref.overlaySuccess.opacity = 0;\n    };\n\n    var didThrowError = function didThrowError(_ref9) {\n      var root = _ref9.root;\n      root.ref.overlayShadow.opacity = 0.25;\n      root.ref.overlayError.opacity = 1;\n    };\n\n    var didCompleteProcessing = function didCompleteProcessing(_ref10) {\n      var root = _ref10.root;\n      root.ref.overlayShadow.opacity = 0.25;\n      root.ref.overlaySuccess.opacity = 1;\n    };\n    /**\n     * Constructor\n     */\n\n\n    var create = function create(_ref11) {\n      var root = _ref11.root; // image view\n\n      root.ref.images = []; // image bin\n\n      root.ref.imageViewBin = []; // image overlays\n\n      root.ref.overlayShadow = root.appendChildView(root.createChildView(overlay, {\n        opacity: 0,\n        status: 'idle'\n      }));\n      root.ref.overlaySuccess = root.appendChildView(root.createChildView(overlay, {\n        opacity: 0,\n        status: 'success'\n      }));\n      root.ref.overlayError = root.appendChildView(root.createChildView(overlay, {\n        opacity: 0,\n        status: 'failure'\n      }));\n    };\n\n    return _.utils.createView({\n      name: 'image-preview-wrapper',\n      create: create,\n      styles: ['height'],\n      write: _.utils.createRoute({\n        // image preview stated\n        DID_IMAGE_PREVIEW_DRAW: didDrawPreview,\n        DID_IMAGE_PREVIEW_CONTAINER_CREATE: didCreatePreviewContainer,\n        DID_UPDATE_ITEM_METADATA: didUpdateItemMetadata,\n        // file states\n        DID_THROW_ITEM_LOAD_ERROR: didThrowError,\n        DID_THROW_ITEM_PROCESSING_ERROR: didThrowError,\n        DID_THROW_ITEM_INVALID: didThrowError,\n        DID_COMPLETE_ITEM_PROCESSING: didCompleteProcessing,\n        DID_START_ITEM_PROCESSING: restoreOverlay,\n        DID_REVERT_ITEM_PROCESSING: restoreOverlay\n      }, function (_ref12) {\n        var root = _ref12.root;\n        var panelAspectRatio = root.query('GET_PANEL_ASPECT_RATIO');\n\n        if (panelAspectRatio) {\n          root.height = panelAspectRatio * root.rect.width;\n        } // views on death row\n\n\n        var viewsToRemove = root.ref.imageViewBin.filter(function (imageView) {\n          return imageView.opacity === 0;\n        }); // views to retain\n\n        root.ref.imageViewBin = root.ref.imageViewBin.filter(function (imageView) {\n          return imageView.opacity > 0;\n        }); // remove these views\n\n        viewsToRemove.forEach(function (imageView) {\n          return removeImageView(root, imageView);\n        });\n        viewsToRemove.length = 0;\n      })\n    });\n  };\n  /**\n   * Image Preview Plugin\n   */\n\n\n  var plugin$1 = function plugin$1(fpAPI) {\n    var addFilter = fpAPI.addFilter,\n        utils = fpAPI.utils;\n    var Type = utils.Type,\n        createRoute = utils.createRoute,\n        isFile = utils.isFile; // imagePreviewView\n\n    var imagePreviewView = createImageWrapperView(fpAPI); // called for each view that is created right after the 'create' method\n\n    addFilter('CREATE_VIEW', function (viewAPI) {\n      // get reference to created view\n      var is = viewAPI.is,\n          view = viewAPI.view,\n          query = viewAPI.query; // only hook up to item view and only if is enabled for this cropper\n\n      if (!is('file') || !query('GET_ALLOW_IMAGE_PREVIEW')) {\n        return;\n      } // create the image preview plugin, but only do so if the item is an image\n\n\n      var didLoadItem = function didLoadItem(_ref) {\n        var root = _ref.root,\n            props = _ref.props;\n        var id = props.id;\n        var item = query('GET_ITEM', id); // item could theoretically have been removed in the mean time\n\n        if (!item || !isFile(item.file) || item.archived) {\n          return;\n        } // get the file object\n\n\n        var file = item.file; // exit if this is not an image\n\n        if (!isPreviewableImage(file)) {\n          return;\n        } // exit if image size is too high and no createImageBitmap support\n        // this would simply bring the browser to its knees and that is not what we want\n\n\n        var supportsCreateImageBitmap = 'createImageBitmap' in (window || {});\n        var maxPreviewFileSize = query('GET_IMAGE_PREVIEW_MAX_FILE_SIZE');\n\n        if (!supportsCreateImageBitmap && maxPreviewFileSize && file.size > maxPreviewFileSize) {\n          return;\n        } // set preview view\n\n\n        root.ref.imagePreview = view.appendChildView(view.createChildView(imagePreviewView, {\n          id: id\n        })); // now ready\n\n        root.dispatch('DID_IMAGE_PREVIEW_CONTAINER_CREATE', {\n          id: id\n        });\n      };\n\n      var scaleItemBackground = function scaleItemBackground(root, props) {\n        if (!root.ref.imagePreview) {\n          return;\n        }\n\n        var id = props.id; // get item\n\n        var item = root.query('GET_ITEM', {\n          id: id\n        });\n        if (!item) return; // no data!\n\n        var _root$ref = root.ref,\n            width = _root$ref.imageWidth,\n            height = _root$ref.imageHeight;\n\n        if (!width || !height) {\n          return;\n        } // orientation info\n\n\n        var exif = item.getMetadata('exif') || {};\n        var orientation = exif.orientation || -1; // get width and height from action, and swap of orientation is incorrect\n\n        if (orientation >= 5 && orientation <= 8) {\n          var _ref2 = [height, width];\n          width = _ref2[0];\n          height = _ref2[1];\n        } // stylePanelAspectRatio\n\n\n        var panelAspectRatio = root.query('GET_PANEL_ASPECT_RATIO');\n        var allowMultiple = root.query('GET_ALLOW_MULTIPLE'); // we need the item to get to the crop size\n\n        var crop = item.getMetadata('crop') || {\n          center: {\n            x: 0.5,\n            y: 0.5\n          },\n          flip: {\n            horizontal: false,\n            vertical: false\n          },\n          rotation: 0,\n          zoom: 1,\n          aspectRatio: height / width\n        }; // set image aspect ratio as fallback\n\n        var shouldForcePreviewSize = !allowMultiple && panelAspectRatio;\n        var previewAspectRatio = shouldForcePreviewSize ? panelAspectRatio : crop.aspectRatio || height / width; // get height min and max\n\n        var fixedPreviewHeight = root.query('GET_IMAGE_PREVIEW_HEIGHT');\n        var minPreviewHeight = root.query('GET_IMAGE_PREVIEW_MIN_HEIGHT');\n        var maxPreviewHeight = root.query('GET_IMAGE_PREVIEW_MAX_HEIGHT'); // force to panel aspect ratio\n\n        if (shouldForcePreviewSize) {\n          fixedPreviewHeight = root.rect.element.width * panelAspectRatio;\n        } // scale up width and height when we're dealing with an SVG\n\n\n        if (!isBitmap(item.file)) {\n          var scalar = 2048 / width;\n          width *= scalar;\n          height *= scalar;\n        } // const crop width\n\n\n        height = fixedPreviewHeight !== null ? fixedPreviewHeight : Math.max(minPreviewHeight, Math.min(height, maxPreviewHeight));\n        width = height / previewAspectRatio;\n\n        if (width > root.rect.element.width || shouldForcePreviewSize) {\n          width = root.rect.element.width;\n          height = width * previewAspectRatio;\n        } // set height\n\n\n        root.ref.imagePreview.element.style.cssText = 'height:' + Math.round(height) + 'px';\n      };\n\n      var didUpdateItemMetadata = function didUpdateItemMetadata(_ref3) {\n        var root = _ref3.root,\n            props = _ref3.props,\n            action = _ref3.action;\n\n        if (action.change.key !== 'crop') {\n          return;\n        }\n\n        scaleItemBackground(root, props);\n      };\n\n      var didCalculatePreviewSize = function didCalculatePreviewSize(_ref4) {\n        var root = _ref4.root,\n            props = _ref4.props,\n            action = _ref4.action; // remember dimensions\n\n        root.ref.imageWidth = action.width;\n        root.ref.imageHeight = action.height; // let's scale the preview pane\n\n        scaleItemBackground(root, props);\n      }; // start writing\n\n\n      view.registerWriter(createRoute({\n        DID_LOAD_ITEM: didLoadItem,\n        DID_IMAGE_PREVIEW_CALCULATE_SIZE: didCalculatePreviewSize,\n        DID_UPDATE_ITEM_METADATA: didUpdateItemMetadata\n      }));\n    }); // expose plugin\n\n    return {\n      options: {\n        // Enable or disable image preview\n        allowImagePreview: [true, Type.BOOLEAN],\n        // Fixed preview height\n        imagePreviewHeight: [null, Type.INT],\n        // Min image height\n        imagePreviewMinHeight: [44, Type.INT],\n        // Max image height\n        imagePreviewMaxHeight: [256, Type.INT],\n        // Max size of preview file for when createImageBitmap is not supported\n        imagePreviewMaxFileSize: [null, Type.INT],\n        // Style of the transparancy indicator used behind images\n        imagePreviewTransparencyIndicator: [null, Type.STRING],\n        // Enables or disables reading average image color\n        imagePreviewCalculateAverageImageColor: [false, Type.BOOLEAN]\n      }\n    };\n  };\n\n  var isBrowser = typeof window !== 'undefined' && typeof window.document !== 'undefined';\n\n  if (isBrowser && document) {\n    document.dispatchEvent(new CustomEvent('FilePond:pluginloaded', {\n      detail: plugin$1\n    }));\n  }\n\n  return plugin$1;\n});","/*!\n * FilePondPluginFileValidateSize 2.1.3\n * Licensed under MIT, https://opensource.org/licenses/MIT/\n * Please visit https://pqina.nl/filepond/ for details.\n */\n\n/* eslint-disable */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = global || self, global.FilePondPluginFileValidateSize = factory());\n})(this, function () {\n  'use strict';\n\n  var plugin = function plugin(_ref) {\n    var addFilter = _ref.addFilter,\n        utils = _ref.utils; // get quick reference to Type utils\n\n    var Type = utils.Type,\n        replaceInString = utils.replaceInString,\n        toNaturalFileSize = utils.toNaturalFileSize; // filtering if an item is allowed in hopper\n\n    addFilter('ALLOW_HOPPER_ITEM', function (file, _ref2) {\n      var query = _ref2.query;\n\n      if (!query('GET_ALLOW_FILE_SIZE_VALIDATION')) {\n        return true;\n      }\n\n      var sizeMax = query('GET_MAX_FILE_SIZE');\n\n      if (sizeMax !== null && file.size >= sizeMax) {\n        return false;\n      }\n\n      var sizeMin = query('GET_MIN_FILE_SIZE');\n\n      if (sizeMin !== null && file.size <= sizeMin) {\n        return false;\n      }\n\n      return true;\n    }); // called for each file that is loaded\n    // right before it is set to the item state\n    // should return a promise\n\n    addFilter('LOAD_FILE', function (file, _ref3) {\n      var query = _ref3.query;\n      return new Promise(function (resolve, reject) {\n        // if not allowed, all fine, exit\n        if (!query('GET_ALLOW_FILE_SIZE_VALIDATION')) {\n          resolve(file);\n          return;\n        } // reject or resolve based on file size\n\n\n        var sizeMax = query('GET_MAX_FILE_SIZE');\n\n        if (sizeMax !== null && file.size >= sizeMax) {\n          reject({\n            status: {\n              main: query('GET_LABEL_MAX_FILE_SIZE_EXCEEDED'),\n              sub: replaceInString(query('GET_LABEL_MAX_FILE_SIZE'), {\n                filesize: toNaturalFileSize(sizeMax)\n              })\n            }\n          });\n          return;\n        } // reject or resolve based on file size\n\n\n        var sizeMin = query('GET_MIN_FILE_SIZE');\n\n        if (sizeMin !== null && file.size <= sizeMin) {\n          reject({\n            status: {\n              main: query('GET_LABEL_MIN_FILE_SIZE_EXCEEDED'),\n              sub: replaceInString(query('GET_LABEL_MIN_FILE_SIZE'), {\n                filesize: toNaturalFileSize(sizeMin)\n              })\n            }\n          });\n          return;\n        } // returns the current option value\n\n\n        var totalSizeMax = query('GET_MAX_TOTAL_FILE_SIZE');\n\n        if (totalSizeMax !== null) {\n          // get the current total file size\n          var currentTotalSize = query('GET_ACTIVE_ITEMS').reduce(function (total, item) {\n            return total + item.fileSize;\n          }, 0); // get the size of the new file\n\n          if (currentTotalSize > totalSizeMax) {\n            reject({\n              status: {\n                main: query('GET_LABEL_MAX_TOTAL_FILE_SIZE_EXCEEDED'),\n                sub: replaceInString(query('GET_LABEL_MAX_TOTAL_FILE_SIZE'), {\n                  filesize: toNaturalFileSize(totalSizeMax)\n                })\n              }\n            });\n            return;\n          }\n        } // file is fine, let's pass it back\n\n\n        resolve(file);\n      });\n    });\n    return {\n      options: {\n        // Enable or disable file type validation\n        allowFileSizeValidation: [true, Type.BOOLEAN],\n        // Max individual file size in bytes\n        maxFileSize: [null, Type.INT],\n        // Min individual file size in bytes\n        minFileSize: [null, Type.INT],\n        // Max total file size in bytes\n        maxTotalFileSize: [null, Type.INT],\n        // error labels\n        labelMinFileSizeExceeded: ['File is too small', Type.STRING],\n        labelMinFileSize: ['Minimum file size is {filesize}', Type.STRING],\n        labelMaxFileSizeExceeded: ['File is too large', Type.STRING],\n        labelMaxFileSize: ['Maximum file size is {filesize}', Type.STRING],\n        labelMaxTotalFileSizeExceeded: ['Maximum total size exceeded', Type.STRING],\n        labelMaxTotalFileSize: ['Maximum total file size is {filesize}', Type.STRING]\n      }\n    };\n  }; // fire pluginloaded event if running in browser, this allows registering the plugin when using async script tags\n\n\n  var isBrowser = typeof window !== 'undefined' && typeof window.document !== 'undefined';\n\n  if (isBrowser) {\n    document.dispatchEvent(new CustomEvent('FilePond:pluginloaded', {\n      detail: plugin\n    }));\n  }\n\n  return plugin;\n});","/*!\n * FilePondPluginFileValidateType 1.2.4\n * Licensed under MIT, https://opensource.org/licenses/MIT/\n * Please visit https://pqina.nl/filepond/ for details.\n */\n\n/* eslint-disable */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = global || self, global.FilePondPluginFileValidateType = factory());\n})(this, function () {\n  'use strict';\n\n  var plugin = function plugin(_ref) {\n    var addFilter = _ref.addFilter,\n        utils = _ref.utils; // get quick reference to Type utils\n\n    var Type = utils.Type,\n        isString = utils.isString,\n        replaceInString = utils.replaceInString,\n        guesstimateMimeType = utils.guesstimateMimeType,\n        getExtensionFromFilename = utils.getExtensionFromFilename,\n        getFilenameFromURL = utils.getFilenameFromURL;\n\n    var mimeTypeMatchesWildCard = function mimeTypeMatchesWildCard(mimeType, wildcard) {\n      var mimeTypeGroup = (/^[^/]+/.exec(mimeType) || []).pop(); // image/png -> image\n\n      var wildcardGroup = wildcard.slice(0, -2); // image/* -> image\n\n      return mimeTypeGroup === wildcardGroup;\n    };\n\n    var isValidMimeType = function isValidMimeType(acceptedTypes, userInputType) {\n      return acceptedTypes.some(function (acceptedType) {\n        // accepted is wildcard mime type\n        if (/\\*$/.test(acceptedType)) {\n          return mimeTypeMatchesWildCard(userInputType, acceptedType);\n        } // is normal mime type\n\n\n        return acceptedType === userInputType;\n      });\n    };\n\n    var getItemType = function getItemType(item) {\n      // if the item is a url we guess the mime type by the extension\n      var type = '';\n\n      if (isString(item)) {\n        var filename = getFilenameFromURL(item);\n        var extension = getExtensionFromFilename(filename);\n\n        if (extension) {\n          type = guesstimateMimeType(extension);\n        }\n      } else {\n        type = item.type;\n      }\n\n      return type;\n    };\n\n    var validateFile = function validateFile(item, acceptedFileTypes, typeDetector) {\n      // no types defined, everything is allowed \\o/\n      if (acceptedFileTypes.length === 0) {\n        return true;\n      } // gets the item type\n\n\n      var type = getItemType(item); // no type detector, test now\n\n      if (!typeDetector) {\n        return isValidMimeType(acceptedFileTypes, type);\n      } // use type detector\n\n\n      return new Promise(function (resolve, reject) {\n        typeDetector(item, type).then(function (detectedType) {\n          if (isValidMimeType(acceptedFileTypes, detectedType)) {\n            resolve();\n          } else {\n            reject();\n          }\n        }).catch(reject);\n      });\n    };\n\n    var applyMimeTypeMap = function applyMimeTypeMap(map) {\n      return function (acceptedFileType) {\n        return map[acceptedFileType] === null ? false : map[acceptedFileType] || acceptedFileType;\n      };\n    }; // setup attribute mapping for accept\n\n\n    addFilter('SET_ATTRIBUTE_TO_OPTION_MAP', function (map) {\n      return Object.assign(map, {\n        accept: 'acceptedFileTypes'\n      });\n    }); // filtering if an item is allowed in hopper\n\n    addFilter('ALLOW_HOPPER_ITEM', function (file, _ref2) {\n      var query = _ref2.query; // if we are not doing file type validation exit\n\n      if (!query('GET_ALLOW_FILE_TYPE_VALIDATION')) {\n        return true;\n      } // we validate the file against the accepted file types\n\n\n      return validateFile(file, query('GET_ACCEPTED_FILE_TYPES'));\n    }); // called for each file that is loaded\n    // right before it is set to the item state\n    // should return a promise\n\n    addFilter('LOAD_FILE', function (file, _ref3) {\n      var query = _ref3.query;\n      return new Promise(function (resolve, reject) {\n        if (!query('GET_ALLOW_FILE_TYPE_VALIDATION')) {\n          resolve(file);\n          return;\n        }\n\n        var acceptedFileTypes = query('GET_ACCEPTED_FILE_TYPES'); // custom type detector method\n\n        var typeDetector = query('GET_FILE_VALIDATE_TYPE_DETECT_TYPE'); // if invalid, exit here\n\n        var validationResult = validateFile(file, acceptedFileTypes, typeDetector);\n\n        var handleRejection = function handleRejection() {\n          var acceptedFileTypesMapped = acceptedFileTypes.map(applyMimeTypeMap(query('GET_FILE_VALIDATE_TYPE_LABEL_EXPECTED_TYPES_MAP'))).filter(function (label) {\n            return label !== false;\n          });\n          reject({\n            status: {\n              main: query('GET_LABEL_FILE_TYPE_NOT_ALLOWED'),\n              sub: replaceInString(query('GET_FILE_VALIDATE_TYPE_LABEL_EXPECTED_TYPES'), {\n                allTypes: acceptedFileTypesMapped.join(', '),\n                allButLastType: acceptedFileTypesMapped.slice(0, -1).join(', '),\n                lastType: acceptedFileTypesMapped[acceptedFileTypesMapped.length - 1]\n              })\n            }\n          });\n        }; // has returned new filename immidiately\n\n\n        if (typeof validationResult === 'boolean') {\n          if (!validationResult) {\n            return handleRejection();\n          }\n\n          return resolve(file);\n        } // is promise\n\n\n        validationResult.then(function () {\n          resolve(file);\n        }).catch(handleRejection);\n      });\n    }); // expose plugin\n\n    return {\n      // default options\n      options: {\n        // Enable or disable file type validation\n        allowFileTypeValidation: [true, Type.BOOLEAN],\n        // What file types to accept\n        acceptedFileTypes: [[], Type.ARRAY],\n        // - must be comma separated\n        // - mime types: image/png, image/jpeg, image/gif\n        // - extensions: .png, .jpg, .jpeg ( not enabled yet )\n        // - wildcards: image/*\n        // label to show when a type is not allowed\n        labelFileTypeNotAllowed: ['File is of invalid type', Type.STRING],\n        // nicer label\n        fileValidateTypeLabelExpectedTypes: ['Expects {allButLastType} or {lastType}', Type.STRING],\n        // map mime types to extensions\n        fileValidateTypeLabelExpectedTypesMap: [{}, Type.OBJECT],\n        // Custom function to detect type of file\n        fileValidateTypeDetectType: [null, Type.FUNCTION]\n      }\n    };\n  }; // fire pluginloaded event if running in browser, this allows registering the plugin when using async script tags\n\n\n  var isBrowser = typeof window !== 'undefined' && typeof window.document !== 'undefined';\n\n  if (isBrowser) {\n    document.dispatchEvent(new CustomEvent('FilePond:pluginloaded', {\n      detail: plugin\n    }));\n  }\n\n  return plugin;\n});"],"sourceRoot":""}