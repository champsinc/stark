{"version":3,"sources":["routes/components/api/index.js","routes/components/selectProblem/index.js","routes/components/uploadPicture/index.js","routes/Dashboard/Project_Details/Data_Collection/index.js"],"names":["__webpack_require__","d","__webpack_exports__","CREATE_NEW_PROJECT","DATA_COLLECTION_URL","DATA_DISPLAY_URL","PROJECTS_DATA_URL","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","antd__WEBPACK_IMPORTED_MODULE_1__","antd__WEBPACK_IMPORTED_MODULE_2__","Option","Select","ProblemSelector","props","a","createElement","className","title","mode","showSearch","style","width","placeholder","optionFilterProp","onChange","value","length","problemIsSelected","problemValue","concat","onFocus","console","log","onBlur","filterOption","input","option","children","toLowerCase","indexOf","registerPlugin","FilePondPluginImageExifOrientation","FilePondPluginImagePreview","FilePondPluginFileValidateSize","FilePondPluginFileValidateType","file_names","UploadPicture","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onLoad","e","includes","temp_filename_array","split","push","state","files","uniqueId","assertThisInitialized","_this2","session","tags","react_default","react_filepond","ref","pond","allowFileSizeValidation","maxFileSize","acceptedFileTypes","allowMultiple","labelFileProcessingComplete","maxFiles","allowRevert","labelIdle","server","url","process","onload","oninit","handleInit","onupdatefiles","fileItems","setState","map","fileItem","file","key","src","origin","Component","MediaUpload","val","problemSelected","selectProblem","card","display","uploadPicture","match","params","id","Link","to","es_button","block","type","shape","icon","theme","React"],"mappings":"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","file":"static/js/11.f9b496c6.chunk.js","sourcesContent":["export const CREATE_NEW_PROJECT = \"https://wegmaniac.ga/global_scripts/new_project.php\";\nexport const DATA_COLLECTION_URL = \"https://wegmaniac.ga/global_scripts/file_upload.php\";\nexport const DATA_DISPLAY_URL = \"https://wegmaniac.ga/global_scripts/media_gallery_links.php\";\nexport const PROJECTS_DATA_URL = \"https://wegmaniac.ga/global_scripts/all_projects_data.php\"\n","import React from \"react\";\nimport {Card, Select} from \"antd\";\n\nconst Option = Select.Option;\n\n\nconst ProblemSelector = (props) => {\n  function handleChange(value) {\n    //console.log(`selected ${value}`);\n    if(value.length===0){\n      props.problemIsSelected('none');\n    }\n    else{\n      props.problemIsSelected('block');\n    }\n    props.problemValue(`${value}`);\n  }\n\n  function handleBlur() {\n    console.log('blur');\n  }\n\n  function handleFocus() {\n    console.log('focus');\n  }\n\n  return (\n    <Card className=\"gx-card\" title=\"Uploading for?\">\n      <Select\n        mode=\"multiple\"\n        showSearch\n        style={{width: '100%'}}\n        placeholder=\"Select one of the problems you identified\"\n        optionFilterProp=\"children\"\n        onChange={handleChange}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n        filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n      >\n        <Option value=\"potholes\">Potholes</Option>\n        <Option value=\"manholes\">Manholes</Option>\n        <Option value=\"road markings\">Road Markings</Option>\n        <Option value=\"large objects\">Large Objects</Option>\n      </Select>\n    </Card>\n  );\n};\n\nexport default ProblemSelector;\n","import React, { Component } from \"react\";\nimport {DATA_COLLECTION_URL} from \"../api\";\n// Import React FilePond\nimport { FilePond, File, registerPlugin } from \"react-filepond\";\n// Import FilePond styles\nimport \"filepond/dist/filepond.min.css\";\n// Import the Image EXIF Orientation and Image Preview plugins\n// Note: These need to be installed separately\nimport FilePondPluginImageExifOrientation from \"filepond-plugin-image-exif-orientation\";\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\nimport FilePondPluginFileValidateSize from \"filepond-plugin-file-validate-size\";\nimport FilePondPluginFileValidateType from \"filepond-plugin-file-validate-type\";\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\n// Register the plugins\nregisterPlugin(\n  FilePondPluginImageExifOrientation,\n  FilePondPluginImagePreview,\n  FilePondPluginFileValidateSize,\n  FilePondPluginFileValidateType,\n);\nvar file_names = [];\nvar self;\n// Our app\nclass UploadPicture extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // Set initial files\n      files: [\"\"],\n      uniqueId: props.uniqueId\n      //enableNext: props.enableNext\n    };\n    self = this;\n  }\n\n  handleInit() {\n    console.log(\"IMClassify\");\n  }\n\n  onLoad = e => {\n    if (e.includes(\"Success\")) {\n      var temp_filename_array = e.split(\"_\");\n      file_names.push(temp_filename_array[1]);\n      //self.state.enableNext();\n    }\n  };\n\n  render(props) {\n    var session = this.state.uniqueId;\n    var tags = this.props.problemValue;\n    return (\n      <div className=\"App\">\n        {/* Pass FilePond properties as attributes */}\n        <FilePond\n          className=\"filepond-bg\"\n          ref={ref => (this.pond = ref)}\n          allowFileSizeValidation={true}\n          maxFileSize={\"2MB\"}\n          acceptedFileTypes={[\n            \"image/png\",\n            \"image/jpg\",\n            \"image/jpeg\",\n            \"video/mp4\",\n            \"video/avi\"\n          ]}\n          allowMultiple={true}\n          labelFileProcessingComplete={\"Upload Complete\"}\n          maxFiles={9}\n          allowRevert={false}\n          labelIdle='Drag & Drop your files or <span class=\"filepond--label-action\">Browse</span><br/> <i>Acceptable file types: .png, .jpg, .jpeg, .mp4, .avi</i>'\n          server={{\n            url: DATA_COLLECTION_URL+\"?uniqueId=\"+session+\"&tags=\"+tags,\n            process: {\n              onload: this.onLoad\n            }\n          }}\n          oninit={() => this.handleInit()}\n          onupdatefiles={fileItems => {\n            // Set current file objects to this.state\n            this.setState({\n              files: fileItems.map(fileItem => fileItem.file)\n            });\n          }}\n        >\n          {/* Update current files  */}\n          {this.state.files.map(file => (\n            <File key={file} src={file} origin=\"local\" />\n          ))}\n        </FilePond>\n      </div>\n    );\n  }\n}\n\nexport default UploadPicture;\n","import React from \"react\";\nimport ProblemSelector from \"../../../components/selectProblem\";\nimport UploadPicture from \"../../../components/uploadPicture\";\nimport {Link} from \"react-router-dom\";\nimport {Button, Icon, Card} from \"antd\";\nclass MediaUpload extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      problemSelected: 'none',\n      problemValue: ''\n    }\n  }\n\n  problemIsSelected = (val) => {\n    this.setState({\n      problemSelected: val\n    })\n  };\n  problemValue = (val) => {\n    this.setState({\n      problemValue: val\n    })\n  };\n\n render(props){\n    return (\n    <div>\n    <ProblemSelector problemIsSelected={this.problemIsSelected} problemValue={this.problemValue}/>\n    <Card className=\"gx-card\" title=\"Upload Media Files\" style={{display:this.state.problemSelected}}>\n    <UploadPicture uniqueId={this.props.match.params.id} problemValue = {this.state.problemValue}/>\n    </Card>\n    <Link to={\"/stark/mediaView/\"+this.props.match.params.id}>\n      <Button block type=\"primary\" shape=\"round\"> <Icon type=\"right-circle\" theme=\"filled\"/>Go to project's collection!</Button>\n    </Link>\n    </div>\n  );\n};\n};\nexport default MediaUpload;\n"],"sourceRoot":""}