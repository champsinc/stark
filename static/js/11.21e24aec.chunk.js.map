{"version":3,"sources":["routes/components/selectProblem/index.js","routes/components/api/index.js","routes/components/uploadPicture/index.js","routes/Dashboard/Project_Details/Data_Collection/index.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","antd__WEBPACK_IMPORTED_MODULE_1__","antd__WEBPACK_IMPORTED_MODULE_2__","Option","Select","ProblemSelector","a","createElement","className","title","showSearch","style","width","placeholder","optionFilterProp","onChange","value","console","log","concat","onFocus","onBlur","filterOption","input","option","props","children","toLowerCase","indexOf","d","__webpack_exports__","CREATE_NEW_PROJECT","DATA_COLLECTION_URL","registerPlugin","FilePondPluginImageExifOrientation","FilePondPluginImagePreview","FilePondPluginFileValidateSize","FilePondPluginFileValidateType","self","file_names","UploadPicture","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onLoad","e","includes","temp_filename_array","split","push","state","enableNext","files","_session_","session","assertThisInitialized","_this2","react_default","react_filepond","ref","pond","allowFileSizeValidation","maxFileSize","acceptedFileTypes","allowMultiple","labelFileProcessingComplete","maxFiles","allowRevert","labelIdle","server","url","process","onload","oninit","handleInit","onupdatefiles","fileItems","setState","map","fileItem","file","key","src","origin","Component","MediaUpload","selectProblem","card","uploadPicture","Link","to","es_button","block","type","shape","icon","theme"],"mappings":"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","file":"static/js/11.21e24aec.chunk.js","sourcesContent":["import React from \"react\";\nimport {Card, Select} from \"antd\";\n\nconst Option = Select.Option;\n\n\nconst ProblemSelector = () => {\n  function handleChange(value) {\n    console.log(`selected ${value}`);\n  }\n\n  function handleBlur() {\n    console.log('blur');\n  }\n\n  function handleFocus() {\n    console.log('focus');\n  }\n\n  return (\n    <Card className=\"gx-card\" title=\"Solving the problem\">\n      <Select\n        showSearch\n        style={{width: '100%'}}\n        placeholder=\"Select one of the problems you identified\"\n        optionFilterProp=\"children\"\n        onChange={handleChange}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n        filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n      >\n        <Option value=\"potholes\">Potholes</Option>\n        <Option value=\"manholes\">Manholes</Option>\n        <Option value=\"road markings\">Road Markings</Option>\n        <Option value=\"large objects\">Large Objects</Option>\n      </Select>\n    </Card>\n  );\n};\n\nexport default ProblemSelector;\n","export const CREATE_NEW_PROJECT = \"http://18.217.69.34/global_scripts/new_project.php\";\nexport const DATA_COLLECTION_URL = \"http://18.217.69.34/global_scripts/file_upload.php\";\n","import React, { Component } from \"react\";\nimport {DATA_COLLECTION_URL} from \"../api\";\n// Import React FilePond\nimport { FilePond, File, registerPlugin } from \"react-filepond\";\n// Import FilePond styles\nimport \"filepond/dist/filepond.min.css\";\n// Import the Image EXIF Orientation and Image Preview plugins\n// Note: These need to be installed separately\nimport FilePondPluginImageExifOrientation from \"filepond-plugin-image-exif-orientation\";\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\nimport FilePondPluginFileValidateSize from \"filepond-plugin-file-validate-size\";\nimport FilePondPluginFileValidateType from \"filepond-plugin-file-validate-type\";\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\n// Register the plugins\nregisterPlugin(\n  FilePondPluginImageExifOrientation,\n  FilePondPluginImagePreview,\n  FilePondPluginFileValidateSize,\n  FilePondPluginFileValidateType,\n);\nvar file_names = [];\nvar self;\n// Our app\nclass UploadPicture extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // Set initial files\n      files: [\"\"],\n      _session_: props.session,\n      enableNext: props.enableNext\n    };\n    self = this;\n  }\n\n  handleInit() {\n    console.log(\"IMClassify\");\n  }\n\n  onLoad = e => {\n    if (e.includes(\"Success\")) {\n      var temp_filename_array = e.split(\"_\");\n      file_names.push(temp_filename_array[1]);\n      self.state.enableNext();\n    }\n  };\n\n  render(props) {\n    var session = this.state._session_;\n    return (\n      <div className=\"App\">\n        {/* Pass FilePond properties as attributes */}\n        <FilePond\n          className=\"filepond-bg\"\n          ref={ref => (this.pond = ref)}\n          allowFileSizeValidation={true}\n          maxFileSize={\"2MB\"}\n          acceptedFileTypes={[\n            \"image/png\",\n            \"image/jpg\",\n            \"image/jpeg\",\n            \"video/mp4\",\n            \"video/avi\"\n          ]}\n          allowMultiple={true}\n          labelFileProcessingComplete={\"Upload Complete\"}\n          maxFiles={9}\n          allowRevert={false}\n          labelIdle='Drag & Drop your files or <span class=\"filepond--label-action\">Browse</span><br/> <i>Acceptable file types: .png, .jpg, .jpeg, .mp4, .avi</i>'\n          server={{\n            url: DATA_COLLECTION_URL,\n            process: {\n              onload: this.onLoad\n            }\n          }}\n          oninit={() => this.handleInit()}\n          onupdatefiles={fileItems => {\n            // Set current file objects to this.state\n            this.setState({\n              files: fileItems.map(fileItem => fileItem.file)\n            });\n          }}\n        >\n          {/* Update current files  */}\n          {this.state.files.map(file => (\n            <File key={file} src={file} origin=\"local\" />\n          ))}\n        </FilePond>\n      </div>\n    );\n  }\n}\n\nexport default UploadPicture;\n","import React from \"react\";\nimport ProblemSelector from \"../../../components/selectProblem\";\nimport UploadPicture from \"../../../components/uploadPicture\";\nimport {Link} from \"react-router-dom\";\nimport {Button, Icon, Card} from \"antd\";\nconst MediaUpload = () => {\n  return (\n    <div>\n    <ProblemSelector/>\n    <Card title=\"Upload Media Files\">\n    <UploadPicture/>\n    </Card>\n    <Link to=\"/stark/mediaView\">\n      <Button block type=\"primary\" shape=\"round\"> <Icon type=\"right-circle\" theme=\"filled\"/>Go to project's collection!</Button>\n    </Link>\n    </div>\n  );\n};\nexport default MediaUpload;\n"],"sourceRoot":""}