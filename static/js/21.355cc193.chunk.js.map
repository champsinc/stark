{"version":3,"sources":["routes/components/api/index.js","routes/components/selectProblem/index.js","routes/components/uploadPicture/index.js","routes/Dashboard/Project_Details/Data_Collection/index.js"],"names":["__webpack_require__","d","__webpack_exports__","CREATE_NEW_PROJECT","DATA_COLLECTION_URL","DATA_DISPLAY_URL","PROJECTS_DATA_URL","VALIDATE_PROJECT_ID","DELETE_IMAGE_URL","DELETE_PROJECT","PROJECT_DASHBOARD_STATS","INITIATE_TRAINING_PROCESS","TRAINING_PARAMETERS_SETUP","BEGIN_TRAINING","STOP_TRAINING","CHECK_TRAINING_ON","CONTINUE_TRAINING","TRAINING_SUMMARY","TRAINING_LOGS","RESET_TRAINING","SIGNUP","LOGIN","FORGOT_PASSWORD","RESET_PASSWORD","VALIDATE_LOGGED_IN_SESSION","PROJECT_OVERVIEW_DATA","ADD_PROBLEMS_IDENTIFIED","GET_PROBLEMS_IDENTIFIED","Option","Select","ProblemSelector","props","react_default","a","createElement","card","className","title","es_select","mode","showSearch","style","width","placeholder","optionFilterProp","onChange","value","length","problemIsSelected","problemValue","concat","onFocus","console","log","onBlur","filterOption","input","option","children","toLowerCase","indexOf","problemsIdentified","map","X","registerPlugin","FilePondPluginImageExifOrientation","FilePondPluginImagePreview","FilePondPluginFileValidateSize","FilePondPluginFileValidateType","file_names","UploadPicture","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onLoad","e","includes","temp_filename_array","split","push","state","files","uniqueId","_this2","session","tags","react_filepond","ref","pond","allowFileSizeValidation","maxFileSize","acceptedFileTypes","allowMultiple","labelFileProcessingComplete","maxFiles","allowRevert","labelIdle","server","url","process","onload","oninit","handleInit","onupdatefiles","fileItems","setState","fileItem","file","key","src","origin","Component","MediaUpload","val","problemSelected","checkValidation","problems","match","params","id","getProblemsIdentified","assertThisInitialized","self","axios","post","projectId","then","response","status","data","catch","error","redirectTo","localStorage","getItem","setItem","window","location","href","removeItem","breadcrumb","Item","selectProblem","display","uploadPicture","Link","to","es_button","block","type","shape","icon","theme","React"],"mappings":"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","file":"static/js/21.355cc193.chunk.js","sourcesContent":["export const CREATE_NEW_PROJECT = \"https://wegmaniac.ga/global_scripts/new_project.php\";\nexport const DATA_COLLECTION_URL = \"https://wegmaniac.ga/global_scripts/file_upload.php\";\nexport const DATA_DISPLAY_URL = \"https://wegmaniac.ga/global_scripts/media_gallery_links.php\";\nexport const PROJECTS_DATA_URL = \"https://wegmaniac.ga/global_scripts/all_projects_data.php\";\nexport const VALIDATE_PROJECT_ID = \"https://wegmaniac.ga/global_scripts/check_projectid.php\";\nexport const DELETE_IMAGE_URL = \"https://wegmaniac.ga/global_scripts/remove_media_file.php\";\nexport const DELETE_PROJECT = \"https://wegmaniac.ga/global_scripts/delete_project.php\";\nexport const PROJECT_DASHBOARD_STATS = \"https://wegmaniac.ga/global_scripts/dashboard_stats.php\";\nexport const INITIATE_TRAINING_PROCESS = \"https://wegmaniac.ga/training_scripts/init_darkflow.php\";\nexport const TRAINING_PARAMETERS_SETUP = \"https://wegmaniac.ga/training_scripts/darkflow_parameters.php\";\nexport const BEGIN_TRAINING = \"https://wegmaniac.ga/training_scripts/begin_training.php\";\nexport const STOP_TRAINING = \"https://wegmaniac.ga/training_scripts/stop_training.php\";\nexport const CHECK_TRAINING_ON = \"https://wegmaniac.ga/training_scripts/check_training.php\";\nexport const CONTINUE_TRAINING = \"https://wegmaniac.ga/training_scripts/continue_training.php\";\nexport const TRAINING_SUMMARY = \"https://wegmaniac.ga/training_scripts/training_summary.php\";\nexport const TRAINING_LOGS = \"https://wegmaniac.ga/training_scripts/get_logs.php\";\nexport const RESET_TRAINING = \"https://wegmaniac.ga/training_scripts/reset_training.php\";\nexport const SIGNUP = \"https://wegmaniac.ga/global_scripts/new_user.php\";\nexport const LOGIN = \"https://wegmaniac.ga/global_scripts/validate_user.php\";\nexport const FORGOT_PASSWORD = \"https://wegmaniac.ga/global_scripts/forgot_password\";\nexport const RESET_PASSWORD = \"https://wegmaniac.ga/global_scripts/reset_password\";\nexport const VALIDATE_LOGGED_IN_SESSION = \"https://wegmaniac.ga/global_scripts/check_unique.php\";\nexport const PROJECT_OVERVIEW_DATA = \"https://wegmaniac.ga/global_scripts/project_grid.php\"\nexport const ADD_PROBLEMS_IDENTIFIED = \"https://wegmaniac.ga/global_scripts/add_problems.php\";\nexport const GET_PROBLEMS_IDENTIFIED = \"https://wegmaniac.ga/global_scripts/get_problems.php\";\n","import React from \"react\";\nimport {Card, Select} from \"antd\";\n\nconst Option = Select.Option;\n\n\nconst ProblemSelector = (props) => {\n  function handleChange(value) {\n    //console.log(`selected ${value}`);\n    if(value.length===0 || value[0]===\"None identified, please add at least one problem to proceed!\"){\n      props.problemIsSelected('none');\n    }\n    else{\n      props.problemIsSelected('block');\n    }\n    props.problemValue(`${value}`);\n  }\n\n  function handleBlur() {\n    console.log('blur');\n  }\n\n  function handleFocus() {\n    console.log('focus');\n  }\n\n  var MakeItem = function(X) {\n                return <Option value={X}>{X}</Option>;\n            };\n\n  return (\n    <Card className=\"gx-card\" title=\"Problem Selection\">\n    <Select mode=\"multiple\"\n    showSearch\n    style={{width: '100%'}}\n    placeholder=\"Select one or more of the labels you identified\"\n    optionFilterProp=\"children\"\n    onChange={handleChange}\n    onFocus={handleFocus}\n    onBlur={handleBlur}\n    filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}>\n    {props.problemsIdentified.map(MakeItem)}\n    </Select>\n\n    </Card>\n  );\n};\n\nexport default ProblemSelector;\n","import React, { Component } from \"react\";\nimport {DATA_COLLECTION_URL} from \"../api\";\n// Import React FilePond\nimport { FilePond, File, registerPlugin } from \"react-filepond\";\n// Import FilePond styles\nimport \"filepond/dist/filepond.min.css\";\n// Import the Image EXIF Orientation and Image Preview plugins\n// Note: These need to be installed separately\nimport FilePondPluginImageExifOrientation from \"filepond-plugin-image-exif-orientation\";\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\nimport FilePondPluginFileValidateSize from \"filepond-plugin-file-validate-size\";\nimport FilePondPluginFileValidateType from \"filepond-plugin-file-validate-type\";\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\n// Register the plugins\nregisterPlugin(\n  FilePondPluginImageExifOrientation,\n  FilePondPluginImagePreview,\n  FilePondPluginFileValidateSize,\n  FilePondPluginFileValidateType,\n);\nvar file_names = [];\n// Our app\nclass UploadPicture extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // Set initial files\n      files: [\"\"],\n      uniqueId: props.uniqueId\n      //enableNext: props.enableNext\n    };\n  }\n\n  handleInit() {\n    console.log(\"IMClassify\");\n  }\n\n  onLoad = e => {\n    if (e.includes(\"Success\")) {\n      var temp_filename_array = e.split(\"_\");\n      file_names.push(temp_filename_array[1]);\n      //self.state.enableNext();\n    }\n  };\n\n  render(props) {\n    var session = this.state.uniqueId;\n    var tags = this.props.problemValue;\n    return (\n      <div className=\"App\">\n        {/* Pass FilePond properties as attributes */}\n        <FilePond\n          className=\"filepond-bg\"\n          ref={ref => (this.pond = ref)}\n          allowFileSizeValidation={true}\n          maxFileSize={\"2MB\"}\n          acceptedFileTypes={[\n            \"image/png\",\n            \"image/jpg\",\n            \"image/jpeg\",\n            \"video/mp4\",\n            \"video/avi\"\n          ]}\n          allowMultiple={true}\n          labelFileProcessingComplete={\"Upload Complete\"}\n          maxFiles={9}\n          allowRevert={false}\n          labelIdle='Drag & Drop your files or <span class=\"filepond--label-action\">Browse</span><br/> <i>Acceptable file types: .png, .jpg, .jpeg, .mp4, .avi</i>'\n          server={{\n            url: DATA_COLLECTION_URL+\"?uniqueId=\"+session+\"&tags=\"+tags,\n            process: {\n              onload: this.onLoad\n            }\n          }}\n          oninit={() => this.handleInit()}\n          onupdatefiles={fileItems => {\n            // Set current file objects to this.state\n            this.setState({\n              files: fileItems.map(fileItem => fileItem.file)\n            });\n          }}\n        >\n          {/* Update current files  */}\n          {this.state.files.map(file => (\n            <File key={file} src={file} origin=\"local\" />\n          ))}\n        </FilePond>\n      </div>\n    );\n  }\n}\n\nexport default UploadPicture;\n","import React from \"react\";\nimport ProblemSelector from \"../../../components/selectProblem\";\nimport UploadPicture from \"../../../components/uploadPicture\";\nimport {Link} from \"react-router-dom\";\nimport {Button, Icon, Card, Breadcrumb} from \"antd\";\nimport {GET_PROBLEMS_IDENTIFIED} from \"../../../components/api\";\nimport axios from \"axios\";\n\nclass MediaUpload extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.checkValidation(\"uploads\");\n\n    this.state = {\n      problemSelected: 'none',\n      problemValue: '',\n      problems: [\"None identified, please add at least one problem to proceed!\"],\n      uniqueId: props.match.params.id\n    }\n\n    this.getProblemsIdentified(this);\n\n  }\n\ngetProblemsIdentified(self){\n  axios.post(GET_PROBLEMS_IDENTIFIED, {\n  projectId: self.state.uniqueId\n  })\n  .then(function (response) {\n    if(response.status===200){\n      if(response.data.includes(\"No problem exist\")){\n        console.log(\"No problems found!\");\n      }\n      else{\n        self.setState({\n          problems: response.data\n        })\n    }\n    }\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n}\n\n\ncheckValidation(redirectTo){\n  if(localStorage.getItem(\"starkLoginId\") && localStorage.getItem(\"clear\")){\n    if(localStorage.getItem(\"clear\")===\"ok\"){\n      localStorage.removeItem(\"clear\");\n    }\n    else{\n      localStorage.setItem(\"redirectTo\",redirectTo);\n      localStorage.setItem(\"projectId\",this.props.match.params.id);\n      return window.location.href = '/stark/login';\n    }\n  }\n  else{\n    localStorage.setItem(\"redirectTo\",redirectTo);\n    localStorage.setItem(\"projectId\",this.props.match.params.id);\n    return window.location.href = '/stark/login';\n  }\n}\n\n  problemIsSelected = (val) => {\n    this.setState({\n      problemSelected: val\n    })\n  };\n  problemValue = (val) => {\n    this.setState({\n      problemValue: val\n    })\n  };\n\n render(props){\n    return (\n    <div>\n    <Breadcrumb>\n    <Breadcrumb.Item>Home</Breadcrumb.Item>\n    <Breadcrumb.Item><span className=\"gx-link\">Media Uploads</span></Breadcrumb.Item>\n    </Breadcrumb>\n    <br/>\n    <ProblemSelector problemsIdentified={this.state.problems} problemIsSelected={this.problemIsSelected} problemValue={this.problemValue}/>\n    <Card className=\"gx-card\" title=\"Upload Media Files\" style={{display:this.state.problemSelected}}>\n    <UploadPicture uniqueId={this.props.match.params.id} problemValue = {this.state.problemValue}/>\n    </Card>\n    <Link to={\"/stark/mediaView/\"+this.props.match.params.id}>\n      <Button block type=\"primary\" shape=\"round\"> <Icon type=\"right-circle\" theme=\"filled\"/>Go to project's collection!</Button>\n    </Link>\n    </div>\n  );\n};\n};\nexport default MediaUpload;\n"],"sourceRoot":""}