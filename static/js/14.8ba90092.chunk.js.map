{"version":3,"sources":["components/Widget/index.js","routes/components/prCard/index.js","routes/Dashboard/Training/index.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","antd__WEBPACK_IMPORTED_MODULE_1__","Widget","_ref","title","children","styleName","cover","extra","actions","a","createElement","className","concat","defaultProps","PRCard","props","react_default","cardTitle","row","col","lg","md","sm","xs","score","cardSubTitle","es6","width","height","data","collectedData","margin","top","right","left","bottom","dataKey","id","colorId","x1","y1","x2","y2","offset","stopColor","color1","stopOpacity","color2","strokeWidth","fill","fillOpacity","prData","Label","Counter","Training","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","valid","location","state","validated","console","log","e","window","href","match","params","breadcrumb","Item","dist","resize","es_button","type","card","prCard","React","Component"],"mappings":"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","file":"static/js/14.8ba90092.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Card} from \"antd\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Widget = ({title, children, styleName, cover, extra, actions}) => {\r\n\r\n  return (\r\n    <Card title={title} actions={actions} cover={cover} className={`gx-card-widget ${styleName}`} extra={extra}>\r\n      {children}\r\n    </Card>\r\n  )\r\n};\r\n\r\nexport default Widget;\r\nWidget.defaultProps = {\r\n  styleName: '',\r\n};\r\n\r\nWidget.propTypes = {\r\n  title: PropTypes.node,\r\n  extra: PropTypes.node,\r\n  cover: PropTypes.node,\r\n  actions: PropTypes.node,\r\n  children: PropTypes.node.isRequired\r\n};\r\n","import React from \"react\";\nimport {Area, AreaChart, ResponsiveContainer, Tooltip, XAxis, YAxis} from \"recharts\";\nimport {Col, Row} from \"antd\";\n\nimport Widget from \"components/Widget/index\";\n\nconst PRCard = (props) => {\n  return (\n    <Widget styleName={`gx-card-full`}>\n      <div className=\"gx-d-flex gx-px-4 gx-pt-4 gx-pb-2\">\n        <h2 className=\"h4 gx-text-capitalize gx-mb-0\">\n          {props.cardTitle}</h2>\n        {/*<p className=\"gx-ml-auto gx-text-primary\"> Label Selected: Pothole <i className=\"icon icon-line-chart gx-fs-sm\"/></p>*/}\n      </div>\n      <Row>\n        <Col lg={12} md={12} sm={24} xs={24}>\n          <div className=\"gx-actchart gx-pb-5 gx-pl-4\">\n            <h2 className=\"gx-fs-xxxl gx-font-weight-medium gx-mb-1 gx-text-black\">{props.score}</h2>\n            <p className=\"gx-mb-0\">{props.cardSubTitle}</p>\n          </div>\n        </Col>\n        <Col lg={12} md={12} sm={24} xs={24}>\n          <ResponsiveContainer width=\"100%\" height={180}>\n            <AreaChart data={props.collectedData}\n                       margin={{top: 0, right: 0, left: 0, bottom: 0}} >\n                       <XAxis dataKey=\"Label\" />\n                       <YAxis/>\n              <Tooltip/>\n              <defs>\n                <linearGradient id={props.colorId} x1=\"0\" y1=\"0\" x2=\"1\" y2=\"0\">\n                  <stop offset=\"5%\" stopColor={props.color1} stopOpacity={0.9}/>\n                  <stop offset=\"95%\" stopColor={props.color2} stopOpacity={0.9}/>\n                </linearGradient>\n              </defs>\n              <Area dataKey=\"Counter\" strokeWidth={0} fill={\"url(#\"+props.colorId+\")\"}fillOpacity={1}/>\n            </AreaChart>\n          </ResponsiveContainer>\n        </Col>\n      </Row>\n    </Widget>\n  );\n};\n\nexport default PRCard;\n","import React from \"react\";\nimport {Button, Card, Col, Row, Breadcrumb} from \"antd\";\nimport {Browser} from \"react-window-ui\";\nimport PRCard from \"../../components/prCard\";\n\nconst prData = [\n  {Label: '0.1', Counter: 1},\n  {Label: '0.2', Counter: 1},\n  {Label: '0.3', Counter: 1},\n  {Label: '0.4', Counter: 1},\n  {Label: '0.5', Counter: 0.57},\n  {Label: '0.6', Counter: 0.57},\n  {Label: '0.7', Counter: 0.57},\n  {Label: '0.8', Counter: 0.57},\n  {Label: '0.9', Counter: 0.51},\n  {Label: '1.0', Counter: 0.51}\n];\n\nclass Training extends React.Component {\n  constructor(props){\n    super(props);\n\n    /* Validator begins */\n    try {\n      var valid = props.location.state.validated;\n      console.log(valid);\n    }\n    catch(e){\n      return window.location.href = '/stark/validation/'+props.match.params.id+'/training';\n    }\n    /* Validator ends */\n  }\n\n  render(){\n    return(\n      <div>\n      <Breadcrumb>\n      <Breadcrumb.Item>Home</Breadcrumb.Item>\n      <Breadcrumb.Item><span className=\"gx-link\">Training</span></Breadcrumb.Item>\n      </Breadcrumb>\n      <br/>\n      <Browser resize height=\"12em\">\n      <h3>Training Instance Console</h3>\n      <p>Training logs will be visible here! Click to &nbsp;\n<Button type=\"dashed\">Initiate Training Process</Button>\n      </p>\n\n      </Browser>\n      <br/>\n      <Row>\n      <Col sm={12}>\n      <Card className=\"gx-card\" title=\"Training Instance Summary\">\n      <div>Model Files Generated: 24</div>\n      <div>Time Elasped: 5 hrs 17 min</div>\n      <div>Last Checkpoint @ Step: 3000</div>\n      <br/>\n      <div>\n      <Button type=\"danger\">Stop Training</Button>\n      <Button type=\"primary\">Deploy Best Checkpoint</Button>\n      </div>\n      </Card>\n      </Col>\n      <Col sm={12}>\n      <PRCard collectedData = {prData} score = {\"0.927\"} cardTitle = {\"Precision Recall Curve\"} cardSubTitle = {\"Curve Plot On Testing Data\"} colorId=\"color1\" color1=\"#845EC2\" color2=\"#FF55AA\"/>\n      </Col>\n      </Row>\n      <Row>\n      <Col sm={24}>\n      <Card className=\"gx-card\" title=\"Results and Trials\">\n      <center>\n      <Button type=\"primary\">View Confusion Matrix</Button>\n      <Button type=\"primary\">View Other Metrics</Button>\n      <Button type=\"primary\">Test Another Dataset</Button>\n      </center>\n      </Card>\n      </Col>\n      </Row>\n      </div>\n    );\n  }\n}\n\nexport default Training;\n"],"sourceRoot":""}