{"version":3,"sources":["../node_modules/react-filepond/dist/react-filepond.js","../node_modules/filepond/dist/filepond.js","../node_modules/filepond-plugin-image-exif-orientation/dist/filepond-plugin-image-exif-orientation.js","../node_modules/filepond-plugin-image-preview/dist/filepond-plugin-image-preview.js","../node_modules/filepond-plugin-file-validate-size/dist/filepond-plugin-file-validate-size.js","../node_modules/filepond-plugin-file-validate-type/dist/filepond-plugin-file-validate-type.js"],"names":["Object","defineProperty","exports","value","File","FilePond","registerPlugin","undefined","obj","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_react","__webpack_require__","_react2","__esModule","default","_filepond","_classCallCheck","instance","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","isSupported","supported","getFilesFromChildren","children","Children","map","child","src","options","origin","type","name","file","size","metadata","source","filteredMethods","_React$Component","this","getPrototypeOf","apply","arguments","Component","_this2","_pond","_element","assign","files","keys","filter","includes","forEach","destroy","prevProps","previousFiles","currentFiles","JSON","stringify","setOptions","_this3","_props","id","className","allowMultiple","required","captureMethod","acceptedFileTypes","createElement","accept","multiple","capture","ref","element","_React$Component2","forin","cb","hasOwnProperty","createObject","definition","property","attr","node","getAttribute","hasAttribute","setAttribute","_typeof","Symbol","iterator","slicedToArray","arr","Array","isArray","_arr","_n","_d","_e","_s","_i","next","done","push","err","sliceIterator","toConsumableArray","arr2","from","svgElements","isSVGElement","tag","attributes","document","createElementNS","appendChildView","parent","childViews","view","index","splice","removeChildView","indexOf","parentNode","removeChild","getViewRect","elementRect","offset","scale","left","top","right","width","bottom","height","rect","inner","outer","childView","isRectIgnored","childViewRect","expandRect","calculateRectSize","marginBottom","marginRight","isNumber","easeInOutQuad","t","animator","spring","_ref","_ref$stiffness","stiffness","_ref$damping","damping","_ref$mass","mass","position","velocity","resting","api","interpolate","destination","errorMargin","Math","abs","thereYet","onupdate","oncomplete","set","get","tween","_ref$duration","duration","_ref$easing","easing","_ref$delay","delay","start","p","reverse","ts","createAnimator","category","def","addGetSet","overwrite","o","getter","setter","isDefined","defaults$1","opacity","scaleX","scaleY","translateX","translateY","rotateX","rotateY","rotateZ","originX","originY","propsHaveChanged","currentProps","newProps","prop","applyStyles","_ref2","perspective","transforms","styles","elementCurrentStyle","Mixins","mixinConfig","viewProps","viewInternalAPI","viewExternalAPI","initialProps","getRect","write","listeners","viewState","events","add","fn","addEventListener","remove","removeEventListener","removeEvent","on","off","findIndex","event","animations","animation","apis","updateRect","style","layoutCalculated","paddingTop","parseInt","marginTop","marginLeft","offsetLeft","offsetTop","offsetWidth","offsetHeight","scrollTop","hidden","offsetParent","createView","_ref$tag","_ref$name","_ref$attributes","_ref$read","read","_ref$write","_ref$create","_ref$destroy","_ref$filterFrameActio","filterFrameActionsForChild","actions","_ref$didCreateView","didCreateView","_ref$didWriteView","didWriteView","_ref$ignoreRect","ignoreRect","_ref$ignoreRectUpdate","ignoreRectUpdate","_ref$mixins","mixins","store","window","getComputedStyle","frameRect","isResting","activeMixins","state","writers","readers","destroyers","getElement","getChildViews","concat","sharedAPIDefinition","internalAPIDefinition","is","needle","appendChild","insertBefore","createChildView","linkView","unlinkView","registerWriter","writer","registerReader","reader","registerDestroyer","destroyer","invalidateLayout","dispatch","query","externalAPIDefinition","_read","root","internalAPI","_write","frameActions","timestamp","mixin","_destroy","mixinAPIDefinition","sort","a","b","mixinAPI","childCount","createRoute","routes","_ref$actions","action","data","newNode","referenceNode","insertAfter","nextSibling","isEmpty","trim","str","toString","isBoolean","toBoolean","isString","toNumber","replace","toInt","isInt","isFinite","floor","toBytes","naturalFileSize","test","isFunction","methods","process","revert","fetch","restore","load","createAction","outline","method","timeout","url","headers","withCredentials","onload","ondata","onerror","parts","split","header","isObject","getType","isNull","isAPI","conversionTable","array","splitter","boolean","int","float","parseFloat","bytes","string","serverapi","createServerAPI","object","parse","e","function","levels","level","shift","toFunctionReference","getValueByType","newValue","defaultValue","valueType","newValueType","convertedValue","option","createOptions","optionDefinition","currentValue","createOption","fromCamels","separator","part","toLowerCase","join","createOptionActions","toUpperCase","createOptionQueries","InteractionMethod","API","DROP","BROWSE","PASTE","NONE","getUniqueId","random","substr","forEachDelayed","items","item","Promise","resolve","reject","setTimeout","arrayRemove","listener","fire","_len","args","_key","onOnce","_cb","copyObjectPropertiesToObject","excluded","getOwnPropertyNames","getOwnPropertyDescriptor","PRIVATE","createItemAPI","getNonNumeric","exec","getDecimalSeparator","toLocaleString","Type","BOOLEAN","INT","STRING","ARRAY","OBJECT","FUNCTION","ACTION","SERVER_API","REGEX","filters","applyFilterChain","utils","matchingFilters","f","initialFilter","reduce","current","then","catch","error","applyFilters","addFilter","getOptions$1","defaultOptions","allowDrop","allowBrowse","allowPaste","allowReplace","allowRevert","forceRevert","maxFiles","checkValidity","dropOnPage","dropOnElement","dropValidation","ignoredFiles","instantUpload","maxParallelUploads","server","labelDecimalSeparator","labelThousandsSeparator","decimalSeparator","thousandsStringWithSeparator","thousandsStringWithoutSeparator","getThousandsSeparator","labelIdle","labelInvalidField","labelFileWaitingForSize","labelFileSizeNotAvailable","labelFileCountSingular","labelFileCountPlural","labelFileLoading","labelFileAdded","labelFileLoadError","labelFileRemoved","labelFileRemoveError","labelFileProcessing","labelFileProcessingComplete","labelFileProcessingAborted","labelFileProcessingError","labelFileProcessingRevertError","labelTapToCancel","labelTapToRetry","labelTapToUndo","labelButtonRemoveItem","labelButtonAbortItemLoad","labelButtonRetryItemLoad","labelButtonAbortItemProcessing","labelButtonUndoItemProcessing","labelButtonRetryItemProcessing","labelButtonProcessItem","iconRemove","iconProcess","iconRetry","iconUndo","iconDone","oninit","onwarning","onaddfilestart","onaddfileprogress","onaddfile","onprocessfilestart","onprocessfileprogress","onprocessfileabort","onprocessfilerevert","onprocessfile","onremovefile","onpreparefile","onupdatefiles","beforeAddFile","beforeRemoveFile","stylePanelLayout","stylePanelAspectRatio","styleButtonRemoveItemPosition","styleButtonProcessItemPosition","styleLoadIndicatorPosition","styleProgressIndicatorPosition","getItemByQuery","find","getNumericAspectRatioFromString","aspectRatio","_aspectRatio$split","_aspectRatio$split2","w","h","getActiveItems","archived","queries","GET_ITEM","GET_ACTIVE_ITEM","GET_ACTIVE_ITEMS","GET_ITEMS","GET_ITEM_NAME","filename","GET_ITEM_SIZE","fileSize","GET_STYLES","GET_PANEL_ASPECT_RATIO","isShapeCircle","GET_ITEMS_BY_STATUS","status","GET_TOTAL_ITEMS","IS_ASYNC","insertItem","min","max","arrayInsert","isBase64DataURI","getFilenameFromURL","pop","getExtensionFromFilename","leftPad","padding","slice","getDateString","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getFileFromBlob","blob","extension","lastModifiedDate","subtype","guesstimateExtension","createBlob","arrayBuffer","mimeType","BB","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","bb","append","getBlob","Blob","getMimeTypeFromBase64DataURI","dataURI","getBlobFromBase64DataURI","byteString","atob","getBase64DataFromBase64DataURI","getByteStringFromBase64DataURI","ab","ArrayBuffer","ia","Uint8Array","charCodeAt","getBlobFromByteStringWithMimeType","getFileNameFromHeader","matches","match","getFileSizeFromHeader","getTranfserIdFromHeader","getFileInfoFromHeaders","info","rows","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","return","createFileLoader","fetchFn","complete","progress","request","loadURL","now","response","body","code","computable","total","fileinfo","setSource","getProgress","abort","isGet","sendRequest","onheaders","onprogress","ontimeout","onabort","aborted","xhr","headersReceived","encodeURI","encodeURIComponent","XMLHttpRequest","upload","lengthComputable","loaded","onreadystatechange","readyState","open","setRequestHeader","responseType","send","createResponse","createTimeoutResponse","getAllResponseHeaders","createFetchFunction","apiUrl","res","statusText","createRevertFunction","uniqueFileId","getRandomNumber","createFileProcessor","processFn","perceivedProgress","perceivedPerformanceUpdater","perceivedDuration","clear","progressFn","completeFn","tickMin","tickMax","tick","runtime","clearTimeout","createPerceivedPerformanceUpdater","getDuration","reset","getFilenameWithoutExtension","lastIndexOf","ItemStatus","INIT","IDLE","PROCESSING_QUEUED","PROCESSING","PROCESSING_COMPLETE","PROCESSING_ERROR","PROCESSING_REVERT_ERROR","LOADING","LOAD_ERROR","FileOrigin$1","INPUT","LIMBO","LOCAL","createItem","serverFileReference","released","activeLoader","activeProcessor","abortProcessingRequestComplete","setStatus","params","_setMetadata","silent","last","serverId","filenameWithoutExtension","fileExtension","fileType","getMetadata","deepCloneObject","v","setMetadata","extend","handler","itemAPI","abortLoad","retryLoad","requestProcessing","abortProcessing","loader","createFileStub","meta","success","result","processor","onprocess","revertFileUpload","release","archive","getItemById","itemId","getItemIndexByQuery","fetchLocal","getDomainFromURL","location","protocol","isFile","dynamicLabel","label","listUpdated","listUpdateTimeout","optionalPromise","getItemByQueryFromState","itemHandler","_ref$success","_ref$failure","failure","ABORT_ALL","DID_SET_FILES","_ref2$value","activeItems","interactionMethod","DID_UPDATE_ITEM_METADATA","_ref3","doUpload","shouldPrepareOutput","ready","ADD_ITEM","_ref4","_ref4$success","_ref4$failure","_ref4$options","count","maxFileCount","hasRoomForItem","_item","mainStatus","main","sub","handleAdd","shouldAdd","change","loadComplete","_ref5","href","isExternalURL","REQUEST_PREPARE_OUTPUT","_ref6","COMPLETE_LOAD_ITEM","_ref7","RETRY_ITEM_LOAD","REQUEST_ITEM_PROCESSING","itemCanBeQueuedForProcessing","PROCESS_ITEM","totalCurrentUploads","queued","processingQueue","fd","formData","FormData","createProcessorFunction","RETRY_ITEM_PROCESSING","REQUEST_REMOVE_ITEM","shouldRemove","RELEASE_ITEM","REMOVE_ITEM","removeFromView","ABORT_ITEM_LOAD","ABORT_ITEM_PROCESSING","REQUEST_REVERT_ITEM_PROCESSING","handleRevert","shouldRevert","requestRemoveResult","REVERT_ITEM_PROCESSING","isMockItem","SET_OPTIONS","_ref8","formatFilename","createElement$1","tagName","text","textNode","childNodes","nodeValue","createTextNode","polarToCartesian","centerX","centerY","radius","angleInDegrees","angleInRadians","PI","x","cos","y","sin","percentageArc","to","arcSweep","startAngle","endAngle","end","describeArc","progressIndicator","spin","svg","path","stroke-width","stroke-linecap","align","dataset","ringStrokeWidth","ringFrom","ringTo","coordinates","fileActionButton","title","innerHTML","icon","disabled","removeAttribute","toNaturalFileSize","round","MB","KB","GB","removeDecimalsWhenZero","decimalCount","toFixed","updateFile","fileName","updateFileSizeOnError","fileInfo","DID_LOAD_ITEM","DID_UPDATE_ITEM_META","DID_THROW_ITEM_LOAD_ERROR","DID_THROW_ITEM_INVALID","toPercentage","didSetItemLoadProgress","fileStatus","DID_REVERT_ITEM_PROCESSING","DID_REQUEST_ITEM_PROCESSING","DID_ABORT_ITEM_PROCESSING","DID_COMPLETE_ITEM_PROCESSING","DID_UPDATE_ITEM_PROCESS_PROGRESS","DID_UPDATE_ITEM_LOAD_PROGRESS","DID_THROW_ITEM_PROCESSING_ERROR","DID_THROW_ITEM_PROCESSING_REVERT_ERROR","DID_THROW_ITEM_REMOVE_ERROR","Buttons","AbortItemLoad","RetryItemLoad","RemoveItem","ProcessItem","AbortItemProcessing","RetryItemProcessing","RevertItemProcessing","ButtonKeys","calculateFileInfoOffset","buttonRemoveItem","calculateFileVerticalCenterOffset","calculateFileHorizontalCenterOffset","getRemoveIndicatorAligment","DefaultStyle","buttonAbortItemLoad","buttonRetryItemLoad","buttonProcessItem","buttonAbortItemProcessing","buttonRetryItemProcessing","buttonRevertItemProcessing","loadProgressIndicator","processProgressIndicator","processingCompleteIndicator","IdleStyle","ProcessingStyle","StyleMap","DID_START_ITEM_LOAD","DID_START_ITEM_REMOVE","DID_LOAD_LOCAL_ITEM","DID_START_ITEM_PROCESSING","processingCompleteIndicatorView","route$3","DID_SET_LABEL_BUTTON_ABORT_ITEM_PROCESSING","DID_SET_LABEL_BUTTON_ABORT_ITEM_LOAD","DID_SET_LABEL_BUTTON_ABORT_ITEM_REMOVAL","buttonAbortItemRemoval","_ref9","_ref10","_ref11","isAsync","enabledButtons","buttonView","classList","loadIndicatorView","progressIndicatorView","currentAction","newStyles","defaultStyles","control","fileWrapper","dataContainer","DID_REMOVE_ITEM","PANEL_SPRING_PROPS","createSection","section","viewConstructor","panel","scalable","topRect","bottomRect","center","StateMap","controls","markedForRemoval","currentState","filepondItemState","route$2","DID_ADD_ITEM","list","childIndex","childRect","dragIndex","itemMargin","dragTranslation","itemHeight","t1","sqrt","easeOutCirc","getItemIndexByPosition","positionInView","l","itemRect","itemRectMid","route$1","DID_DRAG","dragCoordinates","scopeLeft","scopeTop","DID_END_DRAG","listScroller","overflowing","overflow","newHeight","attrToggle","enabledValue","updateRequiredStatus","shouldCheckValidity","setCustomValidity","browser","handleChange","input","form","resetFileInput","DID_SET_ALLOW_BROWSE","DID_SET_ALLOW_MULTIPLE","DID_SET_ACCEPTED_FILE_TYPES","DID_SET_CAPTURE_METHOD","DID_SET_REQUIRED","Key","ENTER","SPACE","updateLabelValue","clickable","querySelector","dropLabel","keyCode","preventDefault","click","caption","DID_SET_LABEL_IDLE","route$4","addBlob","DID_DROP","drip","blob$$1","requestDataTransferItems","dataTransfer","links","getLinks","getFiles","promisedFiles","isFileSystemItem","getFilesFromItem","all","returendFileGroups","group","isEntry","entry","getAsEntry","isDirectory","kind","isDirectoryEntry","getFilesInDirectory","getAsFile","totalFilesFound","readEntries","dirEntry","createReader","entries","webkitGetAsEntry","getLinksFromTransferMetaData","getLinksFromTransferURLData","getData","dragNDropObservers","eventPosition","pageLeft","pageX","pageTop","pageY","offsetX","layerX","offsetY","layerY","getDragNDropObserver","observer","newObserver","createDragNDropObserver","clients","dragenter","dragover","dragleave","drop","handlers","createHandler","addListener","client","isEventTarget","getRootNode","elementAtPosition","point","elementFromPoint","pageXOffset","pageYOffset","contains","initialTarget","setDropEffect","effect","dropEffect","onenter","overDropTarget","some","filterElement","onexit","ondrag","allowdrop","allowsTransfer","ondrop","createHopper","scope","validateItems","catchesDropsOnPage","requiresDropOnElement","scopeToObserve","createDragNDropClient","documentElement","lastState","ondragend","ondragstart","updateHopperState","hopperState","listening","listeners$1","handlePaste","clipboardData","createPaster","listen","addFilesNotificationTimeout","notificationClearTimeout","filenames","assist","message","textContent","listModified","clear$1","isUsingFilePond","activeElement","itemProcessedUndo","itemError","assistant","toCamels","RegExp","charAt","calculateListItemMargin","calculateListHeight","maxItems","visual","bounds","calculateRootBoundingBoxHeight","measureHeight","cappedHeight","maxHeight","fixedHeight","exceedsMaxFiles","totalItems","totalBrowseItems","hasMaxItems","route","DID_SET_ALLOW_DROP","hopper","every","itemList","func","interval","immidiateOnly","dist","debounce","DID_SET_ALLOW_PASTE","paster","measure","_root$ref","panel$$1","isMultiItem","atMaxCapacity","addAction","listItemMargin","listHeight","labelHeight","currentLabelHeight","listMarginTop","listMarginBottom","visualHeight","boundsHeight","listAvailableHeight","_listAvailableHeight","isCappedHeight","panelHeight","_listAvailableHeight2","createApp$1","initialOptions","originalElement","defaultOptions$$1","initialState","actionQueue","dispatchQueue","isBlocking","actionHandlers","_queryHandles","queryHandles","getState","processActionQueue","queue","processDispatchQueue","createStore","readWriteApi","actions$$1","routeActionsToEvents","createEvent","output","eventRoutes","DID_DESTROY","DID_INIT","DID_THROW_MAX_FILES","DID_PREPARE_OUTPUT","DID_UPDATE_ITEMS","detail","pond","dispatchEvent","CustomEvent","bubbles","cancelable","composed","filtered","exposeEvent","addFile","removeFile","processFile","createOptionAPI","addFiles","sources","lastArgument","sourcePromises","delayPromises","results","getFile","processFiles","_len2","_key2","queries$$1","removeFiles","_len3","_key3","browse","appendTo","replaceElement","restoreElement","isAttachedTo","createAppObject","customOptions","app","getAttributesAsObject","attributeMapping","attribute","attributeName","mapObject","propertyMap","selector","mapping","selectorRegExp","createApp","HTMLElement","^class$","^multiple$","^capture$","^server","^process","^revert","^fetch","^restore","^load","^type$","^files$","mergedOptions","attributeOptions","nodeName","querySelectorAll","PRIVATE_METHODS","createAppAPI","replaceInString","replacements","images","text$1","zip","epub","guesstimateMimeType","createWorker","workerBlob","workerURL","URL","createObjectURL","worker","Worker","transfer","post","transferList","onmessage","postMessage","terminate","revokeObjectURL","loadImage","img","Image","renameFile","renamedFile","copyFile","registeredPlugins","createAppPlugin","plugin","additionalOptions","pluginOutline","views","operamini","apps","FileStatus","OptionTypes","getOptions","FileOrigin","fps","painter","requestAnimationFrame","delta","performance","createPainter","updateOptionTypes","hook","indexToRemove","context","matchedHooks","newHooks","newHook","plugins","opts","setOptions$1","factory","module","Marker","JPEG","APP1","EXIF","TIFF","Orientation","Unknown","getUint16","little","getUint32","isJPEG","FileReader","DataView","byteLength","marker","tags","readAsArrayBuffer","getImageOrientation","orientation","allowImageExifOrientation","IMAGE_SCALE_SPRING_PROPS","createVector","vectorSubtract","vectorDistance","vectorDot","vectorDistanceSquared","getOffsetPointOnEdge","rotation","B","C","sinA","sinB","sinC","cosC","ratio","c","getImageRectZoomFactor","imageRect","cropRect","cx","cy","imageWidth","imageHeight","rotatedCropSize","hor","ver","tl","tr","bl","getRotatedRectSize","createBitmapView","_","image","getContext","drawImage","createClipView","flip","crop","horizontal","vertical","createImageCanvasWrapper","transparencyIndicator","stage","translation","cropAspectRatio","stageZoomFactor","container","getCenteredCropRect","zoom","imageView","definitions","appendDefinitions","defs","cssText","hasNavigator","navigator","isEdgeOrIE","documentMode","userAgent","BitmapWorker","createImageBitmap","bitmap","1","2","3","4","5","6","7","8","fixImageOrientation","ctx","transform","isBitmap","calculateAverageColor","scalar","canvas","ceil","getImageData","r","g","averageColor","createImageWrapperView","overlay","ImageView","clip","imageAspectRatio","containerWidth","previewWidth","fixedPreviewHeight","minPreviewHeight","maxPreviewHeight","panelAspectRatio","clipHeight","clipWidth","createImageView","pushImage","preview","restoreOverlay","overlayShadow","overlayError","overlaySuccess","didThrowError","imageViewBin","DID_IMAGE_PREVIEW_DRAW","DID_IMAGE_PREVIEW_CONTAINER_CREATE","fileURL","loadPreviewFallback","crossOrigin","previewImageLoaded","exif","pixelDensityFactor","devicePixelRatio","previewImageRatio","createPreviewImage","close","naturalWidth","naturalHeight","getImageSize","imageBitmap","shiftImage","updateImage","_ref12","viewsToRemove","removeImageView","plugin$1","fpAPI","imagePreviewView","viewAPI","scaleItemBackground","imagePreview","shouldForcePreviewSize","previewAspectRatio","isPreviewableImage","supportsCreateImageBitmap","maxPreviewFileSize","DID_IMAGE_PREVIEW_CALCULATE_SIZE","allowImagePreview","imagePreviewHeight","imagePreviewMinHeight","imagePreviewMaxHeight","imagePreviewMaxFileSize","imagePreviewTransparencyIndicator","imagePreviewCalculateAverageImageColor","sizeMax","sizeMin","filesize","totalSizeMax","currentTotalSize","allowFileSizeValidation","maxFileSize","minFileSize","maxTotalFileSize","labelMinFileSizeExceeded","labelMinFileSize","labelMaxFileSizeExceeded","labelMaxFileSize","labelMaxTotalFileSizeExceeded","labelMaxTotalFileSize","isValidMimeType","acceptedTypes","userInputType","acceptedType","wildcard","mimeTypeGroup","wildcardGroup","mimeTypeMatchesWildCard","validateFile","typeDetector","getItemType","detectedType","validationResult","handleRejection","acceptedFileTypesMapped","acceptedFileType","allTypes","allButLastType","lastType","allowFileTypeValidation","labelFileTypeNotAllowed","fileValidateTypeLabelExpectedTypes","fileValidateTypeLabelExpectedTypesMap","fileValidateTypeDetectType"],"mappings":"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","file":"static/js/9.de18f446.chunk.js","sourcesContent":["/*!\n * react-filepond v5.0.0\n * A handy FilePond adapter component for React\n * \n * Copyright (c) 2018 PQINA\n * https://pqina.nl/filepond\n * \n * Licensed under the MIT license.\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.File = exports.FilePond = exports.registerPlugin = undefined;\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _filepond = require('filepond');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n} // Import required methods and styles from the FilePond module, should not need anything else\n// We need to be able to call the registerPlugin method directly so we can add plugins\n\n\nexports.registerPlugin = _filepond.registerPlugin; // Do this once\n\nvar isSupported = (0, _filepond.supported)(); // returns file sources from the <File/> child objects\n\nvar getFilesFromChildren = function getFilesFromChildren(children) {\n  return children ? _react2.default.Children.map(children, function (child) {\n    var props = child.props; // new mapping\n\n    if (props.src) {\n      var options = {};\n\n      if (props.origin) {\n        options.type = props.origin;\n      }\n\n      if (props.name) {\n        options.file = {\n          name: props.name,\n          size: props.size,\n          type: props.type\n        };\n      }\n\n      if (props.metadata) {\n        options.metadata = props.metadata;\n      }\n\n      return {\n        source: props.src,\n        options: options\n      };\n    } // deprecated mapping\n\n\n    if (props.source && props.type) {\n      return {\n        source: props.source,\n        options: {\n          type: props.type\n        }\n      };\n    }\n\n    return props.source;\n  }) : [];\n}; // filtered methods\n\n\nvar filteredMethods = ['setOptions', 'on', 'off', 'onOnce', 'appendTo', 'insertAfter', 'insertBefore', 'isAttachedTo', 'replaceElement', 'restoreElement', 'destroy']; // The React <FilePond/> wrapper\n\nvar FilePond = exports.FilePond = function (_React$Component) {\n  _inherits(FilePond, _React$Component);\n\n  function FilePond() {\n    _classCallCheck(this, FilePond);\n\n    return _possibleConstructorReturn(this, (FilePond.__proto__ || Object.getPrototypeOf(FilePond)).apply(this, arguments));\n  }\n\n  _createClass(FilePond, [{\n    key: 'componentDidMount',\n    // Will setup FilePond instance when mounted\n    value: function componentDidMount() {\n      var _this2 = this; // exit here if not supported\n\n\n      if (!isSupported) {\n        return;\n      } // Create our pond\n\n\n      this._pond = (0, _filepond.create)(this._element, Object.assign({}, this.props, {\n        files: getFilesFromChildren(this.props.children)\n      })); // Reference pond methods to FilePond component instance\n\n      Object.keys(this._pond).filter(function (key) {\n        return !filteredMethods.includes(key);\n      }).forEach(function (key) {\n        _this2[key] = _this2._pond[key];\n      });\n    } // Will clean up FilePond instance when unmounted\n\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      // exit when no pond defined\n      if (!this._pond) {\n        return;\n      }\n\n      this._pond.destroy();\n    } // Something changed\n\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps) {\n      // exit when no pond defined\n      if (!this._pond) {\n        return;\n      }\n\n      var options = Object.assign({}, this.props); // test if file list has changed\n\n      var previousFiles = getFilesFromChildren(prevProps.children);\n      var currentFiles = getFilesFromChildren(this.props.children);\n\n      if (JSON.stringify(previousFiles) !== JSON.stringify(currentFiles)) {\n        options.files = currentFiles;\n      }\n\n      this._pond.setOptions(options);\n    } // Renders basic element hook for FilePond to attach to\n\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this3 = this;\n\n      var _props = this.props,\n          id = _props.id,\n          name = _props.name,\n          className = _props.className,\n          allowMultiple = _props.allowMultiple,\n          required = _props.required,\n          captureMethod = _props.captureMethod,\n          acceptedFileTypes = _props.acceptedFileTypes;\n      return (0, _react.createElement)('div', {\n        className: 'filepond--wrapper'\n      }, (0, _react.createElement)('input', {\n        type: 'file',\n        name: name,\n        id: id,\n        accept: acceptedFileTypes,\n        multiple: allowMultiple,\n        required: required,\n        className: className,\n        capture: captureMethod,\n        ref: function ref(element) {\n          return _this3._element = element;\n        }\n      }));\n    }\n  }]);\n\n  return FilePond;\n}(_react2.default.Component); // <File/>, needs to be further extended with prop types\n\n\nvar File = exports.File = function (_React$Component2) {\n  _inherits(File, _React$Component2);\n\n  function File() {\n    _classCallCheck(this, File);\n\n    return _possibleConstructorReturn(this, (File.__proto__ || Object.getPrototypeOf(File)).apply(this, arguments));\n  }\n\n  return File;\n}(_react2.default.Component);","/*\n * FilePond 3.9.0\n * Licensed under MIT, https://opensource.org/licenses/MIT\n * Please visit https://pqina.nl/filepond for details.\n */\n\n/* eslint-disable */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : factory(global.FilePond = {});\n})(this, function (exports) {\n  'use strict';\n\n  var isNode = function isNode(value) {\n    return value instanceof HTMLElement;\n  };\n\n  var createStore = function createStore(initialState) {\n    var queries = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    var actions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : []; // internal state\n\n    var state = Object.assign({}, initialState); // contains all actions for next frame, is clear when actions are requested\n\n    var actionQueue = [];\n    var dispatchQueue = []; // returns a duplicate of the current state\n\n    var getState = function getState() {\n      return Object.assign({}, state);\n    }; // returns a duplicate of the actions array and clears the actions array\n\n\n    var processActionQueue = function processActionQueue() {\n      // create copy of actions queue\n      var queue = [].concat(actionQueue); // clear actions queue (we don't want no double actions)\n\n      actionQueue.length = 0;\n      return queue;\n    }; // processes actions that might block the main UI thread\n\n\n    var processDispatchQueue = function processDispatchQueue() {\n      // create copy of actions queue\n      var queue = [].concat(dispatchQueue); // clear actions queue (we don't want no double actions)\n\n      dispatchQueue.length = 0; // now dispatch these actions\n\n      queue.forEach(function (_ref) {\n        var type = _ref.type,\n            data = _ref.data;\n        dispatch(type, data);\n      });\n    }; // adds a new action, calls its handler and\n\n\n    var dispatch = function dispatch(type, data, isBlocking) {\n      // is blocking action\n      if (isBlocking) {\n        dispatchQueue.push({\n          type: type,\n          data: data\n        });\n        return;\n      } // if this action has a handler, handle the action\n\n\n      if (actionHandlers[type]) {\n        actionHandlers[type](data);\n      } // now add action\n\n\n      actionQueue.push({\n        type: type,\n        data: data\n      });\n    };\n\n    var query = function query(str) {\n      var _queryHandles;\n\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      return queryHandles[str] ? (_queryHandles = queryHandles)[str].apply(_queryHandles, args) : null;\n    };\n\n    var api = {\n      getState: getState,\n      processActionQueue: processActionQueue,\n      processDispatchQueue: processDispatchQueue,\n      dispatch: dispatch,\n      query: query\n    };\n    var queryHandles = {};\n    queries.forEach(function (query) {\n      queryHandles = Object.assign({}, query(state), queryHandles);\n    });\n    var actionHandlers = {};\n    actions.forEach(function (action) {\n      actionHandlers = Object.assign({}, action(dispatch, query, state), actionHandlers);\n    });\n    return api;\n  };\n\n  var defineProperty = function defineProperty(obj, property, definition) {\n    if (typeof definition === 'function') {\n      obj[property] = definition;\n      return;\n    }\n\n    Object.defineProperty(obj, property, Object.assign({}, definition));\n  };\n\n  var forin = function forin(obj, cb) {\n    for (var key in obj) {\n      if (!obj.hasOwnProperty(key)) {\n        continue;\n      }\n\n      cb(key, obj[key]);\n    }\n  };\n\n  var createObject = function createObject(definition) {\n    var obj = {};\n    forin(definition, function (property) {\n      defineProperty(obj, property, definition[property]);\n    });\n    return obj;\n  };\n\n  var attr = function attr(node, name) {\n    var value = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n    if (value === null) {\n      return node.getAttribute(name) || node.hasAttribute(name);\n    }\n\n    node.setAttribute(name, value);\n  };\n\n  var _typeof = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n  };\n\n  var slicedToArray = function () {\n    function sliceIterator(arr, i) {\n      var _arr = [];\n      var _n = true;\n      var _d = false;\n      var _e = undefined;\n\n      try {\n        for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n          _arr.push(_s.value);\n\n          if (i && _arr.length === i) break;\n        }\n      } catch (err) {\n        _d = true;\n        _e = err;\n      } finally {\n        try {\n          if (!_n && _i['return']) _i['return']();\n        } finally {\n          if (_d) throw _e;\n        }\n      }\n\n      return _arr;\n    }\n\n    return function (arr, i) {\n      if (Array.isArray(arr)) {\n        return arr;\n      } else if (Symbol.iterator in Object(arr)) {\n        return sliceIterator(arr, i);\n      } else {\n        throw new TypeError('Invalid attempt to destructure non-iterable instance');\n      }\n    };\n  }();\n\n  var toConsumableArray = function toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n        arr2[i] = arr[i];\n      }\n\n      return arr2;\n    } else {\n      return Array.from(arr);\n    }\n  };\n\n  var ns = 'http://www.w3.org/2000/svg';\n  var svgElements = ['svg', 'path']; // only svg elements used\n\n  var isSVGElement = function isSVGElement(tag) {\n    return svgElements.includes(tag);\n  };\n\n  var createElement = function createElement(tag, className) {\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    if ((typeof className === 'undefined' ? 'undefined' : _typeof(className)) === 'object') {\n      attributes = className;\n      className = null;\n    }\n\n    var element = isSVGElement(tag) ? document.createElementNS(ns, tag) : document.createElement(tag);\n\n    if (className) {\n      if (isSVGElement(tag)) {\n        attr(element, 'class', className);\n      } else {\n        element.className = className;\n      }\n    }\n\n    forin(attributes, function (name, value) {\n      attr(element, name, value);\n    });\n    return element;\n  };\n\n  var appendChild = function appendChild(parent) {\n    return function (child, index) {\n      if (typeof index !== 'undefined' && parent.children[index]) {\n        parent.insertBefore(child, parent.children[index]);\n      } else {\n        parent.appendChild(child);\n      }\n    };\n  };\n\n  var appendChildView = function appendChildView(parent, childViews) {\n    return function (view, index) {\n      if (typeof index !== 'undefined') {\n        childViews.splice(index, 0, view);\n      } else {\n        childViews.push(view);\n      }\n\n      return view;\n    };\n  };\n\n  var removeChildView = function removeChildView(parent, childViews) {\n    return function (view) {\n      // remove from child views\n      childViews.splice(childViews.indexOf(view), 1); // remove the element\n\n      if (view.element.parentNode) {\n        parent.removeChild(view.element);\n      }\n\n      return view;\n    };\n  };\n\n  var getViewRect = function getViewRect(elementRect, childViews, offset, scale) {\n    var left = offset[0] || elementRect.left;\n    var top = offset[1] || elementRect.top;\n    var right = left + elementRect.width;\n    var bottom = top + elementRect.height * (scale[1] || 1);\n    var rect = {\n      // the rectangle of the element itself\n      element: Object.assign({}, elementRect),\n      // the rectangle of the element expanded to contain its children, does not include any margins\n      inner: {\n        left: elementRect.left,\n        top: elementRect.top,\n        right: elementRect.right,\n        bottom: elementRect.bottom\n      },\n      // the rectangle of the element expanded to contain its children including own margin and child margins\n      // margins will be added after we've recalculated the size\n      outer: {\n        left: left,\n        top: top,\n        right: right,\n        bottom: bottom\n      }\n    }; // expand rect to fit all child rectangles\n\n    childViews.filter(function (childView) {\n      return !childView.isRectIgnored();\n    }).map(function (childView) {\n      return childView.rect;\n    }).forEach(function (childViewRect) {\n      expandRect(rect.inner, Object.assign({}, childViewRect.inner));\n      expandRect(rect.outer, Object.assign({}, childViewRect.outer));\n    }); // calculate inner width and height\n\n    calculateRectSize(rect.inner); // append additional margin (top and left margins are included in top and left automatically)\n\n    rect.outer.bottom += rect.element.marginBottom;\n    rect.outer.right += rect.element.marginRight; // calculate outer width and height\n\n    calculateRectSize(rect.outer);\n    return rect;\n  };\n\n  var expandRect = function expandRect(parent, child) {\n    // adjust for parent offset\n    child.top += parent.top;\n    child.right += parent.left;\n    child.bottom += parent.top;\n    child.left += parent.left;\n\n    if (child.bottom > parent.bottom) {\n      parent.bottom = child.bottom;\n    }\n\n    if (child.right > parent.right) {\n      parent.right = child.right;\n    }\n  };\n\n  var calculateRectSize = function calculateRectSize(rect) {\n    rect.width = rect.right - rect.left;\n    rect.height = rect.bottom - rect.top;\n  };\n\n  var isNumber = function isNumber(value) {\n    return typeof value === 'number';\n  };\n  /**\n   * Determines if position is at destination\n   * @param position\n   * @param destination\n   * @param velocity\n   * @param errorMargin\n   * @returns {boolean}\n   */\n\n\n  var thereYet = function thereYet(position, destination, velocity) {\n    var errorMargin = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0.001;\n    return Math.abs(position - destination) < errorMargin && Math.abs(velocity) < errorMargin;\n  };\n  /**\n   * Spring animation\n   */\n\n\n  var spring = // default options\n  function spring() // method definition\n  {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$stiffness = _ref.stiffness,\n        stiffness = _ref$stiffness === undefined ? 0.5 : _ref$stiffness,\n        _ref$damping = _ref.damping,\n        damping = _ref$damping === undefined ? 0.75 : _ref$damping,\n        _ref$mass = _ref.mass,\n        mass = _ref$mass === undefined ? 10 : _ref$mass;\n\n    var target = null;\n    var position = null;\n    var velocity = 0;\n    var resting = false; // updates spring state\n\n    var interpolate = function interpolate() {\n      // in rest, don't animate\n      if (resting) {\n        return;\n      } // need at least a target or position to do springy things\n\n\n      if (!(isNumber(target) && isNumber(position))) {\n        resting = true;\n        velocity = 0;\n        return;\n      } // calculate spring force\n\n\n      var f = -(position - target) * stiffness; // update velocity by adding force based on mass\n\n      velocity += f / mass; // update position by adding velocity\n\n      position += velocity; // slow down based on amount of damping\n\n      velocity *= damping; // we've arrived if we're near target and our velocity is near zero\n\n      if (thereYet(position, target, velocity)) {\n        position = target;\n        velocity = 0;\n        resting = true; // we done\n\n        api.onupdate(position);\n        api.oncomplete(position);\n      } else {\n        // progress update\n        api.onupdate(position);\n      }\n    };\n    /**\n     * Set new target value\n     * @param value\n     */\n\n\n    var setTarget = function setTarget(value) {\n      // if currently has no position, set target and position to this value\n      if (isNumber(value) && !isNumber(position)) {\n        position = value;\n      } // next target value will not be animated to\n\n\n      if (target === null) {\n        target = value;\n        position = value;\n      } // let start moving to target\n\n\n      target = value; // already at target\n\n      if (position === target || typeof target === 'undefined') {\n        // now resting as target is current position, stop moving\n        resting = true;\n        velocity = 0; // done!\n\n        api.onupdate(position);\n        api.oncomplete(position);\n        return;\n      }\n\n      resting = false;\n    }; // need 'api' to call onupdate callback\n\n\n    var api = createObject({\n      interpolate: interpolate,\n      target: {\n        set: setTarget,\n        get: function get() {\n          return target;\n        }\n      },\n      resting: {\n        get: function get() {\n          return resting;\n        }\n      },\n      onupdate: function onupdate(value) {},\n      oncomplete: function oncomplete(value) {}\n    });\n    return api;\n  };\n\n  var easeInOutQuad = function easeInOutQuad(t) {\n    return t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t;\n  };\n\n  var tween = // default values\n  function tween() // method definition\n  {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$duration = _ref.duration,\n        duration = _ref$duration === undefined ? 500 : _ref$duration,\n        _ref$easing = _ref.easing,\n        easing = _ref$easing === undefined ? easeInOutQuad : _ref$easing,\n        _ref$delay = _ref.delay,\n        delay = _ref$delay === undefined ? 0 : _ref$delay;\n\n    var start = null;\n    var t = void 0;\n    var p = void 0;\n    var resting = true;\n    var reverse = false;\n    var target = null;\n\n    var interpolate = function interpolate(ts) {\n      if (resting || target === null) {\n        return;\n      }\n\n      if (start === null) {\n        start = ts;\n      }\n\n      if (ts - start < delay) {\n        return;\n      }\n\n      t = ts - start - delay;\n\n      if (t < duration) {\n        p = t / duration;\n        api.onupdate((t >= 0 ? easing(reverse ? 1 - p : p) : 0) * target);\n      } else {\n        t = 1;\n        p = reverse ? 0 : 1;\n        api.onupdate(p * target);\n        api.oncomplete(p * target);\n        resting = true;\n      }\n    }; // need 'api' to call onupdate callback\n\n\n    var api = createObject({\n      interpolate: interpolate,\n      target: {\n        get: function get() {\n          return reverse ? 0 : target;\n        },\n        set: function set(value) {\n          // is initial value\n          if (target === null) {\n            target = value;\n            api.onupdate(value);\n            api.oncomplete(value);\n            return;\n          } // want to tween to a smaller value and have a current value\n\n\n          if (value < target) {\n            target = 1;\n            reverse = true;\n          } else {\n            // not tweening to a smaller value\n            reverse = false;\n            target = value;\n          } // let's go!\n\n\n          resting = false;\n          start = null;\n        }\n      },\n      resting: {\n        get: function get() {\n          return resting;\n        }\n      },\n      onupdate: function onupdate(value) {},\n      oncomplete: function oncomplete(value) {}\n    });\n    return api;\n  };\n\n  var animator = {\n    spring: spring,\n    tween: tween\n  };\n  /*\n  { type: 'spring', stiffness: .5, damping: .75, mass: 10 };\n  { translation: { type: 'spring', ... }, ... }\n  { translation: { x: { type: 'spring', ... } } }\n  */\n\n  var createAnimator = function createAnimator(definition, category, property) {\n    // default is single definition\n    // we check if transform is set, if so, we check if property is set\n    var def = definition[category] && _typeof(definition[category][property]) === 'object' ? definition[category][property] : definition[category] || definition;\n    var type = typeof def === 'string' ? def : def.type;\n    var props = (typeof def === 'undefined' ? 'undefined' : _typeof(def)) === 'object' ? Object.assign({}, def) : {};\n    return animator[type] ? animator[type](props) : null;\n  };\n\n  var addGetSet = function addGetSet(keys, obj, props) {\n    var overwrite = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    obj = Array.isArray(obj) ? obj : [obj];\n    obj.forEach(function (o) {\n      keys.forEach(function (key) {\n        var name = key;\n\n        var getter = function getter() {\n          return props[key];\n        };\n\n        var setter = function setter(value) {\n          return props[key] = value;\n        };\n\n        if ((typeof key === 'undefined' ? 'undefined' : _typeof(key)) === 'object') {\n          name = key.key;\n          getter = key.getter || getter;\n          setter = key.setter || setter;\n        }\n\n        if (o[name] && !overwrite) {\n          return;\n        }\n\n        o[name] = {\n          get: getter,\n          set: setter\n        };\n      });\n    });\n  };\n\n  var isDefined = function isDefined(value) {\n    return value != null;\n  }; // add to state,\n  // add getters and setters to internal and external api (if not set)\n  // setup animators\n\n\n  var animations = function animations(_ref) {\n    var mixinConfig = _ref.mixinConfig,\n        viewProps = _ref.viewProps,\n        viewInternalAPI = _ref.viewInternalAPI,\n        viewExternalAPI = _ref.viewExternalAPI; // initial properties\n\n    var initialProps = Object.assign({}, viewProps); // list of all active animations\n\n    var animations = []; // setup animators\n\n    forin(mixinConfig, function (property, animation) {\n      var animator = createAnimator(animation);\n\n      if (!animator) {\n        return;\n      } // when the animator updates, update the view state value\n\n\n      animator.onupdate = function (value) {\n        viewProps[property] = value;\n      }; // set animator target\n\n\n      animator.target = initialProps[property]; // when value is set, set the animator target value\n\n      var prop = {\n        key: property,\n        setter: function setter(value) {\n          // if already at target, we done!\n          if (animator.target === value) {\n            return;\n          }\n\n          animator.target = value;\n        },\n        getter: function getter() {\n          return viewProps[property];\n        }\n      }; // add getters and setters\n\n      addGetSet([prop], [viewInternalAPI, viewExternalAPI], viewProps, true); // add it to the list for easy updating from the _write method\n\n      animations.push(animator);\n    }); // expose internal write api\n\n    return {\n      write: function write(ts) {\n        var resting = true;\n        animations.forEach(function (animation) {\n          if (!animation.resting) {\n            resting = false;\n          }\n\n          animation.interpolate(ts);\n        });\n        return resting;\n      },\n      destroy: function destroy() {}\n    };\n  };\n\n  var addEvent = function addEvent(element) {\n    return function (type, fn) {\n      element.addEventListener(type, fn);\n    };\n  };\n\n  var removeEvent = function removeEvent(element) {\n    return function (type, fn) {\n      element.removeEventListener(type, fn);\n    };\n  }; // mixin\n\n\n  var listeners = function listeners(_ref) {\n    var mixinConfig = _ref.mixinConfig,\n        viewProps = _ref.viewProps,\n        viewInternalAPI = _ref.viewInternalAPI,\n        viewExternalAPI = _ref.viewExternalAPI,\n        viewState = _ref.viewState,\n        view = _ref.view;\n    var events = [];\n    var add = addEvent(view.element);\n    var remove = removeEvent(view.element);\n\n    viewExternalAPI.on = function (type, fn) {\n      events.push({\n        type: type,\n        fn: fn\n      });\n      add(type, fn);\n    };\n\n    viewExternalAPI.off = function (type, fn) {\n      events.splice(events.findIndex(function (event) {\n        return event.type === type && event.fn === fn;\n      }), 1);\n      remove(type, fn);\n    };\n\n    return {\n      write: function write() {\n        // not busy\n        return true;\n      },\n      destroy: function destroy() {\n        events.forEach(function (event) {\n          remove(event.type, event.fn);\n        });\n      }\n    };\n  }; // add to external api and link to props\n\n\n  var apis = function apis(_ref) {\n    var mixinConfig = _ref.mixinConfig,\n        viewProps = _ref.viewProps,\n        viewExternalAPI = _ref.viewExternalAPI;\n    addGetSet(mixinConfig, viewExternalAPI, viewProps);\n  }; // add to state,\n  // add getters and setters to internal and external api (if not set)\n  // set initial state based on props in viewProps\n  // apply as transforms each frame\n\n\n  var defaults$1 = {\n    opacity: 1,\n    scaleX: 1,\n    scaleY: 1,\n    translateX: 0,\n    translateY: 0,\n    rotateX: 0,\n    rotateY: 0,\n    rotateZ: 0,\n    originX: 0,\n    originY: 0\n  };\n\n  var styles = function styles(_ref) {\n    var mixinConfig = _ref.mixinConfig,\n        viewProps = _ref.viewProps,\n        viewInternalAPI = _ref.viewInternalAPI,\n        viewExternalAPI = _ref.viewExternalAPI,\n        view = _ref.view; // initial props\n\n    var initialProps = Object.assign({}, viewProps); // current props\n\n    var currentProps = {}; // we will add those properties to the external API and link them to the viewState\n\n    addGetSet(mixinConfig, [viewInternalAPI, viewExternalAPI], viewProps); // override rect on internal and external rect getter so it takes in account transforms\n\n    var getOffset = function getOffset() {\n      return [viewProps['translateX'] || 0, viewProps['translateY'] || 0];\n    };\n\n    var getScale = function getScale() {\n      return [viewProps['scaleX'] || 0, viewProps['scaleY'] || 0];\n    };\n\n    var getRect = function getRect() {\n      return view.rect ? getViewRect(view.rect, view.childViews, getOffset(), getScale()) : null;\n    };\n\n    viewInternalAPI.rect = {\n      get: getRect\n    };\n    viewExternalAPI.rect = {\n      get: getRect\n    }; // apply view props\n\n    mixinConfig.forEach(function (key) {\n      viewProps[key] = typeof initialProps[key] === 'undefined' ? defaults$1[key] : initialProps[key];\n    }); // expose api\n\n    return {\n      write: function write() {\n        // see if props have changed\n        if (!propsHaveChanged(currentProps, viewProps)) {\n          return;\n        } // moves element to correct position on screen\n\n\n        applyStyles(view.element, viewProps); // store new transforms\n\n        Object.assign(currentProps, Object.assign({}, viewProps)); // no longer busy\n\n        return true;\n      },\n      destroy: function destroy() {}\n    };\n  };\n\n  var propsHaveChanged = function propsHaveChanged(currentProps, newProps) {\n    // different amount of keys\n    if (Object.keys(currentProps).length !== Object.keys(newProps).length) {\n      return true;\n    } // lets analyze the individual props\n\n\n    for (var prop in newProps) {\n      if (newProps[prop] !== currentProps[prop]) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  var applyStyles = function applyStyles(element, _ref2) {\n    var opacity = _ref2.opacity,\n        perspective = _ref2.perspective,\n        translateX = _ref2.translateX,\n        translateY = _ref2.translateY,\n        scaleX = _ref2.scaleX,\n        scaleY = _ref2.scaleY,\n        rotateX = _ref2.rotateX,\n        rotateY = _ref2.rotateY,\n        rotateZ = _ref2.rotateZ,\n        originX = _ref2.originX,\n        originY = _ref2.originY,\n        width = _ref2.width,\n        height = _ref2.height;\n    var transforms = '';\n    var styles = ''; // handle transform origin\n\n    if (isDefined(originX) || isDefined(originY)) {\n      styles += 'transform-origin: ' + (originX || 0) + 'px ' + (originY || 0) + 'px;';\n    } // transform order is relevant\n    // 0. perspective\n\n\n    if (isDefined(perspective)) {\n      transforms += 'perspective(' + perspective + 'px) ';\n    } // 1. translate\n\n\n    if (isDefined(translateX) || isDefined(translateY)) {\n      transforms += 'translate3d(' + (translateX || 0) + 'px, ' + (translateY || 0) + 'px, 0) ';\n    } // 2. scale\n\n\n    if (isDefined(scaleX) || isDefined(scaleY)) {\n      transforms += 'scale3d(' + (isDefined(scaleX) ? scaleX : 1) + ', ' + (isDefined(scaleY) ? scaleY : 1) + ', 1) ';\n    } // 3. rotate\n\n\n    if (isDefined(rotateZ)) {\n      transforms += 'rotateZ(' + rotateZ + 'rad) ';\n    }\n\n    if (isDefined(rotateX)) {\n      transforms += 'rotateX(' + rotateX + 'rad) ';\n    }\n\n    if (isDefined(rotateY)) {\n      transforms += 'rotateY(' + rotateY + 'rad) ';\n    } // add transforms\n\n\n    if (transforms.length) {\n      styles += 'transform:' + transforms + ';';\n    } // add opacity\n\n\n    if (isDefined(opacity)) {\n      styles += 'opacity:' + opacity + ';'; // if we reach zero, we make the element inaccessible\n\n      if (opacity === 0) {\n        styles += 'visibility:hidden;';\n      } // if we're below 100% opacity this element can't be clicked\n\n\n      if (opacity < 1) {\n        styles += 'pointer-events:none;';\n      }\n    } // add height\n\n\n    if (isDefined(height)) {\n      styles += 'height:' + height + 'px;';\n    } // add width\n\n\n    if (isDefined(width)) {\n      styles += 'width:' + width + 'px;';\n    } // apply styles\n\n\n    var elementCurrentStyle = element.elementCurrentStyle || ''; // if new styles does not match current styles, lets update!\n\n    if (styles.length !== elementCurrentStyle.length || styles !== elementCurrentStyle) {\n      element.setAttribute('style', styles); // store current styles so we can compare them to new styles later on\n      // _not_ getting the style attribute is faster\n\n      element.elementCurrentStyle = styles;\n    }\n  };\n\n  var Mixins = {\n    styles: styles,\n    listeners: listeners,\n    animations: animations,\n    apis: apis\n  };\n\n  var updateRect = function updateRect() {\n    var rect = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var element = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var style = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    if (!element.layoutCalculated) {\n      rect.paddingTop = parseInt(style.paddingTop, 10) || 0;\n      rect.marginTop = parseInt(style.marginTop, 10) || 0;\n      rect.marginRight = parseInt(style.marginRight, 10) || 0;\n      rect.marginBottom = parseInt(style.marginBottom, 10) || 0;\n      rect.marginLeft = parseInt(style.marginLeft, 10) || 0;\n      element.layoutCalculated = true;\n    }\n\n    rect.left = element.offsetLeft || 0;\n    rect.top = element.offsetTop || 0;\n    rect.width = element.offsetWidth || 0;\n    rect.height = element.offsetHeight || 0;\n    rect.right = rect.left + rect.width;\n    rect.bottom = rect.top + rect.height;\n    rect.scrollTop = element.scrollTop;\n    rect.hidden = element.offsetParent === null;\n    return rect;\n  };\n\n  var createView = // default view definition\n  function createView() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$tag = _ref.tag,\n        tag = _ref$tag === undefined ? 'div' : _ref$tag,\n        _ref$name = _ref.name,\n        name = _ref$name === undefined ? null : _ref$name,\n        _ref$attributes = _ref.attributes,\n        attributes = _ref$attributes === undefined ? {} : _ref$attributes,\n        _ref$read = _ref.read,\n        read = _ref$read === undefined ? function () {} : _ref$read,\n        _ref$write = _ref.write,\n        write = _ref$write === undefined ? function () {} : _ref$write,\n        _ref$create = _ref.create,\n        create = _ref$create === undefined ? function () {} : _ref$create,\n        _ref$destroy = _ref.destroy,\n        destroy = _ref$destroy === undefined ? function () {} : _ref$destroy,\n        _ref$filterFrameActio = _ref.filterFrameActionsForChild,\n        filterFrameActionsForChild = _ref$filterFrameActio === undefined ? function (child, actions) {\n      return actions;\n    } : _ref$filterFrameActio,\n        _ref$didCreateView = _ref.didCreateView,\n        didCreateView = _ref$didCreateView === undefined ? function () {} : _ref$didCreateView,\n        _ref$didWriteView = _ref.didWriteView,\n        didWriteView = _ref$didWriteView === undefined ? function () {} : _ref$didWriteView,\n        _ref$ignoreRect = _ref.ignoreRect,\n        ignoreRect = _ref$ignoreRect === undefined ? false : _ref$ignoreRect,\n        _ref$ignoreRectUpdate = _ref.ignoreRectUpdate,\n        ignoreRectUpdate = _ref$ignoreRectUpdate === undefined ? false : _ref$ignoreRectUpdate,\n        _ref$mixins = _ref.mixins,\n        mixins = _ref$mixins === undefined ? [] : _ref$mixins;\n\n    return function ( // each view requires reference to store\n    store) {\n      var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; // root element should not be changed\n\n      var element = createElement(tag, 'filepond--' + name, attributes); // style reference should also not be changed\n\n      var style = window.getComputedStyle(element, null); // element rectangle\n\n      var rect = updateRect();\n      var frameRect = null; // rest state\n\n      var isResting = false; // pretty self explanatory\n\n      var childViews = []; // loaded mixins\n\n      var activeMixins = []; // references to created children\n\n      var ref = {}; // state used for each instance\n\n      var state = {}; // list of writers that will be called to update this view\n\n      var writers = [write // default writer\n      ];\n      var readers = [read // default reader\n      ];\n      var destroyers = [destroy // default destroy\n      ]; // core view methods\n\n      var getElement = function getElement() {\n        return element;\n      };\n\n      var getChildViews = function getChildViews() {\n        return [].concat(childViews);\n      };\n\n      var getReference = function getReference() {\n        return ref;\n      };\n\n      var createChildView = function createChildView(store) {\n        return function (view, props) {\n          return view(store, props);\n        };\n      };\n\n      var getRect = function getRect() {\n        if (frameRect) {\n          return frameRect;\n        }\n\n        frameRect = getViewRect(rect, childViews, [0, 0], [1, 1]);\n        return frameRect;\n      };\n\n      var getStyle = function getStyle() {\n        return style;\n      };\n      /**\n       * Read data from DOM\n       * @private\n       */\n\n\n      var _read = function _read() {\n        frameRect = null; // read child views\n\n        childViews.forEach(function (child) {\n          return child._read();\n        });\n        var shouldUpdate = !(ignoreRectUpdate && rect.width && rect.height);\n\n        if (shouldUpdate) {\n          updateRect(rect, element, style);\n        } // readers\n\n\n        var api = {\n          root: internalAPI,\n          props: props,\n          rect: rect\n        };\n        readers.forEach(function (reader) {\n          return reader(api);\n        });\n      };\n      /**\n       * Write data to DOM\n       * @private\n       */\n\n\n      var _write = function _write(ts) {\n        var frameActions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : []; // if no actions, we assume that the view is resting\n\n        var resting = frameActions.length === 0; // writers\n\n        writers.forEach(function (writer) {\n          var writerResting = writer({\n            props: props,\n            root: internalAPI,\n            actions: frameActions,\n            timestamp: ts\n          });\n\n          if (writerResting === false) {\n            resting = false;\n          }\n        }); // run mixins\n\n        activeMixins.forEach(function (mixin) {\n          // if one of the mixins is still busy after write operation, we are not resting\n          var mixinResting = mixin.write(ts);\n\n          if (mixinResting === false) {\n            resting = false;\n          }\n        }); // updates child views that are currently attached to the DOM\n\n        childViews.filter(function (child) {\n          return !!child.element.parentNode;\n        }).forEach(function (child) {\n          // if a child view is not resting, we are not resting\n          var childResting = child._write(ts, filterFrameActionsForChild(child, frameActions));\n\n          if (!childResting) {\n            resting = false;\n          }\n        }); // append new elements to DOM and update those\n\n        childViews //.filter(child => !child.element.parentNode)\n        .forEach(function (child, index) {\n          // skip\n          if (child.element.parentNode) {\n            return;\n          } // append to DOM\n\n\n          internalAPI.appendChild(child.element, index); // call read (need to know the size of these elements)\n\n          child._read(); // re-call write\n\n\n          child._write(ts, filterFrameActionsForChild(child, frameActions)); // we just added somthing to the dom, no rest\n\n\n          resting = false;\n        }); // update resting state\n\n        isResting = resting;\n        didWriteView({\n          props: props,\n          root: internalAPI,\n          actions: frameActions,\n          timestamp: ts\n        }); // let parent know if we are resting\n\n        return resting;\n      };\n\n      var _destroy = function _destroy() {\n        activeMixins.forEach(function (mixin) {\n          return mixin.destroy();\n        });\n        destroyers.forEach(function (destroyer) {\n          destroyer({\n            root: internalAPI,\n            props: props\n          });\n        });\n        childViews.forEach(function (child) {\n          return child._destroy();\n        });\n      }; // sharedAPI\n\n\n      var sharedAPIDefinition = {\n        element: {\n          get: getElement\n        },\n        style: {\n          get: getStyle\n        },\n        childViews: {\n          get: getChildViews\n        }\n      }; // private API definition\n\n      var internalAPIDefinition = Object.assign({}, sharedAPIDefinition, {\n        rect: {\n          get: getRect\n        },\n        // access to custom children references\n        ref: {\n          get: getReference\n        },\n        // dom modifiers\n        is: function is(needle) {\n          return name === needle;\n        },\n        appendChild: appendChild(element),\n        createChildView: createChildView(store),\n        linkView: function linkView(view) {\n          childViews.push(view);\n          return view;\n        },\n        unlinkView: function unlinkView(view) {\n          childViews.splice(childViews.indexOf(view), 1);\n        },\n        appendChildView: appendChildView(element, childViews),\n        removeChildView: removeChildView(element, childViews),\n        registerWriter: function registerWriter(writer) {\n          return writers.push(writer);\n        },\n        registerReader: function registerReader(reader) {\n          return readers.push(reader);\n        },\n        registerDestroyer: function registerDestroyer(destroyer) {\n          return destroyers.push(destroyer);\n        },\n        invalidateLayout: function invalidateLayout() {\n          return element.layoutCalculated = false;\n        },\n        // access to data store\n        dispatch: store.dispatch,\n        query: store.query\n      }); // public view API methods\n\n      var externalAPIDefinition = {\n        element: {\n          get: getElement\n        },\n        childViews: {\n          get: getChildViews\n        },\n        rect: {\n          get: getRect\n        },\n        resting: {\n          get: function get() {\n            return isResting;\n          }\n        },\n        isRectIgnored: function isRectIgnored() {\n          return ignoreRect;\n        },\n        _read: _read,\n        _write: _write,\n        _destroy: _destroy\n      }; // mixin API methods\n\n      var mixinAPIDefinition = Object.assign({}, sharedAPIDefinition, {\n        rect: {\n          get: function get() {\n            return rect;\n          }\n        }\n      }); // add mixin functionality\n\n      Object.keys(mixins).sort(function (a, b) {\n        // move styles to the back of the mixin list (so adjustments of other mixins are applied to the props correctly)\n        if (a === 'styles') {\n          return 1;\n        } else if (b === 'styles') {\n          return -1;\n        }\n\n        return 0;\n      }).forEach(function (key) {\n        var mixinAPI = Mixins[key]({\n          mixinConfig: mixins[key],\n          viewProps: props,\n          viewState: state,\n          viewInternalAPI: internalAPIDefinition,\n          viewExternalAPI: externalAPIDefinition,\n          view: createObject(mixinAPIDefinition)\n        });\n\n        if (mixinAPI) {\n          activeMixins.push(mixinAPI);\n        }\n      }); // construct private api\n\n      var internalAPI = createObject(internalAPIDefinition); // create the view\n\n      create({\n        root: internalAPI,\n        props: props\n      }); // append created child views to root node\n\n      var childCount = element.children.length; // need to know the current child count so appending happens in correct order\n\n      childViews.forEach(function (child, index) {\n        internalAPI.appendChild(child.element, childCount + index);\n      }); // call did create\n\n      didCreateView(internalAPI); // expose public api\n\n      return createObject(externalAPIDefinition, props);\n    };\n  };\n\n  var createPainter = function createPainter(read, write) {\n    var fps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 60;\n    var name = '__framePainter'; // set global painter\n\n    if (window[name]) {\n      window[name].readers.push(read);\n      window[name].writers.push(write);\n      return;\n    }\n\n    window[name] = {\n      readers: [read],\n      writers: [write]\n    };\n    var painter = window[name];\n    var interval = 1000 / fps;\n    var last = null;\n    var frame = null;\n\n    var tick = function tick(ts) {\n      // queue next tick\n      frame = window.requestAnimationFrame(tick); // limit fps\n\n      if (!last) {\n        last = ts;\n      }\n\n      var delta = ts - last;\n\n      if (delta <= interval) {\n        // skip frame\n        return;\n      } // align next frame\n\n\n      last = ts - delta % interval; // update view\n\n      painter.readers.forEach(function (read) {\n        return read();\n      });\n      painter.writers.forEach(function (write) {\n        return write(ts);\n      });\n    };\n\n    tick(performance.now());\n    return {\n      pause: function pause() {\n        window.cancelAnimationFrame(frame);\n      }\n    };\n  };\n\n  var createRoute = function createRoute(routes, fn) {\n    return function (_ref) {\n      var root = _ref.root,\n          props = _ref.props,\n          _ref$actions = _ref.actions,\n          actions = _ref$actions === undefined ? [] : _ref$actions,\n          timestamp = _ref.timestamp;\n      actions.filter(function (action) {\n        return routes[action.type];\n      }).forEach(function (action) {\n        return routes[action.type]({\n          root: root,\n          props: props,\n          action: action.data,\n          timestamp: timestamp\n        });\n      });\n\n      if (fn) {\n        fn({\n          root: root,\n          props: props,\n          actions: actions,\n          timestamp: timestamp\n        });\n      }\n    };\n  };\n\n  var insertBefore = function insertBefore(newNode, referenceNode) {\n    return referenceNode.parentNode.insertBefore(newNode, referenceNode);\n  };\n\n  var insertAfter = function insertAfter(newNode, referenceNode) {\n    return referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);\n  };\n\n  var isArray = function isArray(value) {\n    return Array.isArray(value);\n  };\n\n  var isEmpty = function isEmpty(value) {\n    return value == null;\n  };\n\n  var trim = function trim(str) {\n    return str.trim();\n  };\n\n  var toString = function toString(value) {\n    return '' + value;\n  };\n\n  var toArray$1 = function toArray(value) {\n    var splitter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ',';\n\n    if (isEmpty(value)) {\n      return [];\n    }\n\n    if (isArray(value)) {\n      return value;\n    }\n\n    return toString(value).split(splitter).map(trim).filter(function (str) {\n      return str.length;\n    });\n  };\n\n  var isBoolean = function isBoolean(value) {\n    return typeof value === 'boolean';\n  };\n\n  var toBoolean = function toBoolean(value) {\n    return isBoolean(value) ? value : value === 'true';\n  };\n\n  var isString = function isString(value) {\n    return typeof value === 'string';\n  };\n\n  var toNumber = function toNumber(value) {\n    return isNumber(value) ? value : isString(value) ? toString(value).replace(/[a-z]+/gi, '') : 0;\n  };\n\n  var toInt = function toInt(value) {\n    return parseInt(toNumber(value), 10);\n  };\n\n  var toFloat = function toFloat(value) {\n    return parseFloat(toNumber(value));\n  };\n\n  var isInt = function isInt(value) {\n    return isNumber(value) && isFinite(value) && Math.floor(value) === value;\n  };\n\n  var toBytes = function toBytes(value) {\n    // is in bytes\n    if (isInt(value)) {\n      return value;\n    } // is natural file size\n\n\n    var naturalFileSize = toString(value).trim(); // if is value in megabytes\n\n    if (/MB$/i.test(naturalFileSize)) {\n      naturalFileSize = naturalFileSize.replace(/MB$i/, '').trim();\n      return toInt(naturalFileSize) * 1000 * 1000;\n    } // if is value in kilobytes\n\n\n    if (/KB/i.test(naturalFileSize)) {\n      naturalFileSize = naturalFileSize.replace(/KB$i/, '').trim();\n      return toInt(naturalFileSize) * 1000;\n    }\n\n    return toInt(naturalFileSize);\n  };\n\n  var isFunction = function isFunction(value) {\n    return typeof value === 'function';\n  };\n\n  var toFunctionReference = function toFunctionReference(string) {\n    var ref = self;\n    var levels = string.split('.');\n    var level = null;\n\n    while (level = levels.shift()) {\n      ref = ref[level];\n\n      if (!ref) {\n        return null;\n      }\n    }\n\n    return ref;\n  };\n\n  var methods = {\n    process: 'POST',\n    revert: 'DELETE',\n    fetch: 'GET',\n    restore: 'GET',\n    load: 'GET'\n  };\n\n  var createServerAPI = function createServerAPI(outline) {\n    var api = {};\n    api.url = isString(outline) ? outline : outline.url || '';\n    api.timeout = outline.timeout ? parseInt(outline.timeout, 10) : 0;\n    forin(methods, function (key) {\n      api[key] = createAction(key, outline[key], methods[key], api.timeout);\n    }); // special treatment for remove\n\n    api.remove = outline.remove || null;\n    return api;\n  };\n\n  var createAction = function createAction(name, outline, method, timeout) {\n    // is explicitely set to null so disable\n    if (outline === null) {\n      return null;\n    } // if is custom function, done! Dev handles everything.\n\n\n    if (typeof outline === 'function') {\n      return outline;\n    } // build action object\n\n\n    var action = {\n      url: method === 'GET' ? '?' + name + '=' : '',\n      method: method,\n      headers: {},\n      withCredentials: false,\n      timeout: timeout,\n      onload: null,\n      ondata: null,\n      onerror: null\n    }; // is a single url\n\n    if (isString(outline)) {\n      action.url = outline;\n      return action;\n    } // overwrite\n\n\n    Object.assign(action, outline); // see if should reformat headers;\n\n    if (isString(action.headers)) {\n      var parts = action.headers.split(/:(.+)/);\n      action.headers = {\n        header: parts[0],\n        value: parts[1]\n      };\n    } // if is bool withCredentials\n\n\n    action.withCredentials = toBoolean(action.withCredentials);\n    return action;\n  };\n\n  var toServerAPI = function toServerAPI(value) {\n    return createServerAPI(value);\n  };\n\n  var isNull = function isNull(value) {\n    return value === null;\n  };\n\n  var isObject = function isObject(value) {\n    return (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && value !== null;\n  };\n\n  var isAPI = function isAPI(value) {\n    return isObject(value) && isString(value.url) && isObject(value.process) && isObject(value.revert) && isObject(value.restore) && isObject(value.fetch);\n  };\n\n  var getType = function getType(value) {\n    if (isArray(value)) {\n      return 'array';\n    }\n\n    if (isNull(value)) {\n      return 'null';\n    }\n\n    if (isInt(value)) {\n      return 'int';\n    }\n\n    if (/^[0-9]+ ?(?:GB|MB|KB)$/gi.test(value)) {\n      return 'bytes';\n    }\n\n    if (isAPI(value)) {\n      return 'api';\n    }\n\n    return typeof value === 'undefined' ? 'undefined' : _typeof(value);\n  };\n\n  var replaceSingleQuotes = function replaceSingleQuotes(str) {\n    return str.replace(/{\\s*'/g, '{\"').replace(/'\\s*}/g, '\"}').replace(/'\\s*:/g, '\":').replace(/:\\s*'/g, ':\"').replace(/,\\s*'/g, ',\"').replace(/'\\s*,/g, '\",');\n  };\n\n  var conversionTable = {\n    array: toArray$1,\n    boolean: toBoolean,\n    int: function int(value) {\n      return getType(value) === 'bytes' ? toBytes(value) : toInt(value);\n    },\n    float: toFloat,\n    bytes: toBytes,\n    string: function string(value) {\n      return isFunction(value) ? value : toString(value);\n    },\n    serverapi: toServerAPI,\n    object: function object(value) {\n      try {\n        return JSON.parse(replaceSingleQuotes(value));\n      } catch (e) {\n        return null;\n      }\n    },\n    function: function _function(value) {\n      return toFunctionReference(value);\n    }\n  };\n\n  var convertTo = function convertTo(value, type) {\n    return conversionTable[type](value);\n  };\n\n  var getValueByType = function getValueByType(newValue, defaultValue, valueType) {\n    // can always assign default value\n    if (newValue === defaultValue) {\n      return newValue;\n    } // get the type of the new value\n\n\n    var newValueType = getType(newValue); // is valid type?\n\n    if (newValueType !== valueType) {\n      // is string input, let's attempt to convert\n      var convertedValue = convertTo(newValue, valueType); // what is the type now\n\n      newValueType = getType(convertedValue); // no valid conversions found\n\n      if (convertedValue === null) {\n        throw 'Trying to assign value with incorrect type to \"' + option + '\", allowed type: \"' + valueType + '\"';\n      } else {\n        newValue = convertedValue;\n      }\n    } // assign new value\n\n\n    return newValue;\n  };\n\n  var createOption = function createOption(defaultValue, valueType) {\n    var currentValue = defaultValue;\n    return {\n      enumerable: true,\n      get: function get() {\n        return currentValue;\n      },\n      set: function set(newValue) {\n        currentValue = getValueByType(newValue, defaultValue, valueType);\n      }\n    };\n  };\n\n  var createOptions = function createOptions(options) {\n    var obj = {};\n    forin(options, function (prop) {\n      var optionDefinition = options[prop];\n      obj[prop] = createOption(optionDefinition[0], optionDefinition[1]);\n    });\n    return createObject(obj);\n  };\n\n  var createInitialState = function createInitialState(options) {\n    return {\n      // model\n      items: [],\n      // timeout used for calling update items\n      listUpdateTimeout: null,\n      // queue of items waiting to be processed\n      processingQueue: [],\n      // options\n      options: createOptions(options)\n    };\n  };\n\n  var fromCamels = function fromCamels(string) {\n    var separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '-';\n    return string.split(/(?=[A-Z])/).map(function (part) {\n      return part.toLowerCase();\n    }).join(separator);\n  };\n\n  var createOptionAPI = function createOptionAPI(store, options) {\n    var obj = {};\n    forin(options, function (key) {\n      obj[key] = {\n        get: function get() {\n          return store.getState().options[key];\n        },\n        set: function set(value) {\n          store.dispatch('SET_' + fromCamels(key, '_').toUpperCase(), {\n            value: value\n          });\n        }\n      };\n    });\n    return obj;\n  };\n\n  var createOptionActions = function createOptionActions(options) {\n    return function (dispatch, query, state) {\n      var obj = {};\n      forin(options, function (key) {\n        var name = fromCamels(key, '_').toUpperCase();\n\n        obj['SET_' + name] = function (action) {\n          try {\n            state.options[key] = action.value;\n          } catch (e) {} // nope, failed\n          // we successfully set the value of this option\n\n\n          dispatch('DID_SET_' + name, {\n            value: state.options[key]\n          });\n        };\n      });\n      return obj;\n    };\n  };\n\n  var createOptionQueries = function createOptionQueries(options) {\n    return function (state) {\n      var obj = {};\n      forin(options, function (key) {\n        obj['GET_' + fromCamels(key, '_').toUpperCase()] = function (action) {\n          return state.options[key];\n        };\n      });\n      return obj;\n    };\n  };\n\n  var InteractionMethod = {\n    API: 1,\n    DROP: 2,\n    BROWSE: 3,\n    PASTE: 4,\n    NONE: 5\n  };\n\n  var getUniqueId = function getUniqueId() {\n    return Math.random().toString(36).substr(2, 9);\n  };\n\n  var forEachDelayed = function forEachDelayed(items, cb) {\n    var delay = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 75;\n    return items.map(function (item, index) {\n      return new Promise(function (resolve, reject) {\n        setTimeout(function () {\n          cb(item);\n          resolve();\n        }, delay * index);\n      });\n    });\n  };\n\n  var arrayRemove = function arrayRemove(arr, index) {\n    return arr.splice(index, 1);\n  };\n\n  var on = function on() {\n    var listeners = [];\n\n    var off = function off(event, cb) {\n      arrayRemove(listeners, listeners.findIndex(function (listener) {\n        return listener.event === event && (listener.cb === cb || !cb);\n      }));\n    };\n\n    return {\n      fire: function fire(event) {\n        for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n\n        listeners.filter(function (listener) {\n          return listener.event === event;\n        }).map(function (listener) {\n          return listener.cb;\n        }).forEach(function (cb) {\n          setTimeout(function () {\n            cb.apply(undefined, args);\n          }, 0);\n        });\n      },\n      on: function on(event, cb) {\n        listeners.push({\n          event: event,\n          cb: cb\n        });\n      },\n      onOnce: function onOnce(event, _cb) {\n        listeners.push({\n          event: event,\n          cb: function cb() {\n            off(event, _cb);\n\n            _cb.apply(undefined, arguments);\n          }\n        });\n      },\n      off: off\n    };\n  };\n\n  var copyObjectPropertiesToObject = function copyObjectPropertiesToObject(src, target, excluded) {\n    Object.getOwnPropertyNames(src).filter(function (property) {\n      return !excluded.includes(property);\n    }).forEach(function (key) {\n      return Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(src, key));\n    });\n  };\n\n  var PRIVATE = ['fire', 'process', 'revert', 'load', 'on', 'off', 'onOnce', 'retryLoad', 'extend', 'archive', 'archived', 'release', 'released', 'requestProcessing'];\n\n  var createItemAPI = function createItemAPI(item) {\n    var api = {};\n    copyObjectPropertiesToObject(item, api, PRIVATE);\n    return api;\n  };\n\n  var removeReleasedItems = function removeReleasedItems(items) {\n    items.forEach(function (item, index) {\n      if (item.released) {\n        arrayRemove(items, index);\n      }\n    });\n  };\n\n  var getNonNumeric = function getNonNumeric(str) {\n    return /[^0-9]+/.exec(str);\n  };\n\n  var getDecimalSeparator = function getDecimalSeparator() {\n    return getNonNumeric(1.1.toLocaleString())[0];\n  };\n\n  var getThousandsSeparator = function getThousandsSeparator() {\n    // Added for browsers that do not return the thousands separator (happend on native browser Android 4.4.4)\n    // We check against the normal toString output and if they're the same return a comma when decimal separator is a dot\n    var decimalSeparator = getDecimalSeparator();\n    var thousandsStringWithSeparator = 1000.0.toLocaleString();\n    var thousandsStringWithoutSeparator = 1000.0.toString();\n\n    if (thousandsStringWithSeparator !== thousandsStringWithoutSeparator) {\n      return getNonNumeric(thousandsStringWithSeparator)[0];\n    }\n\n    return decimalSeparator === '.' ? ',' : '.';\n  };\n\n  var Type = {\n    BOOLEAN: 'boolean',\n    INT: 'int',\n    STRING: 'string',\n    ARRAY: 'array',\n    OBJECT: 'object',\n    FUNCTION: 'function',\n    ACTION: 'action',\n    SERVER_API: 'serverapi',\n    REGEX: 'regex'\n  }; // all registered filters\n\n  var filters = []; // loops over matching filters and passes options to each filter, returning the mapped results\n\n  var applyFilterChain = function applyFilterChain(key, value, utils) {\n    return new Promise(function (resolve, reject) {\n      // find matching filters for this key\n      var matchingFilters = filters.filter(function (f) {\n        return f.key === key;\n      }).map(function (f) {\n        return f.cb;\n      }); // resolve now\n\n      if (matchingFilters.length === 0) {\n        resolve(value);\n        return;\n      } // first filter to kick things of\n\n\n      var initialFilter = matchingFilters.shift(); // chain filters\n\n      matchingFilters.reduce( // loop over promises passing value to next promise\n      function (current, next) {\n        return current.then(function (value) {\n          return next(value, utils);\n        });\n      }, // call initial filter, will return a promise\n      initialFilter(value, utils) // all executed\n      ).then(function (value) {\n        return resolve(value);\n      }).catch(function (error) {\n        return reject(error);\n      });\n    });\n  };\n\n  var applyFilters = function applyFilters(key, value, utils) {\n    return filters.filter(function (f) {\n      return f.key === key;\n    }).map(function (f) {\n      return f.cb(value, utils);\n    });\n  }; // adds a new filter to the list\n\n\n  var addFilter = function addFilter(key, cb) {\n    return filters.push({\n      key: key,\n      cb: cb\n    });\n  };\n\n  var extendDefaultOptions = function extendDefaultOptions(additionalOptions) {\n    return Object.assign(defaultOptions, additionalOptions);\n  };\n\n  var getOptions$1 = function getOptions() {\n    return Object.assign({}, defaultOptions);\n  };\n\n  var setOptions$1 = function setOptions(opts) {\n    forin(opts, function (key, value) {\n      // key does not exist, so this option cannot be set\n      if (!defaultOptions[key]) {\n        return;\n      }\n\n      defaultOptions[key][0] = getValueByType(value, defaultOptions[key][0], defaultOptions[key][1]);\n    });\n  }; // default options on app\n\n\n  var defaultOptions = {\n    // the id to add to the root element\n    id: [null, Type.STRING],\n    // input field name to use\n    name: ['filepond', Type.STRING],\n    // classname to put on wrapper\n    className: [null, Type.STRING],\n    // is the field required\n    required: [false, Type.BOOLEAN],\n    // Allow media capture when value is set\n    captureMethod: [null, Type.STRING],\n    // - \"camera\", \"microphone\" or \"camcorder\",\n    // - Does not work with multiple on apple devices\n    // - If set, acceptedFileTypes must be made to match with media wildcard \"image/*\", \"audio/*\" or \"video/*\"\n    // Feature toggles\n    allowDrop: [true, Type.BOOLEAN],\n    // Allow dropping of files\n    allowBrowse: [true, Type.BOOLEAN],\n    // Allow browsing the file system\n    allowPaste: [true, Type.BOOLEAN],\n    // Allow pasting files\n    allowMultiple: [false, Type.BOOLEAN],\n    // Allow multiple files (disabled by default, as multiple attribute is also required on input to allow multiple)\n    allowReplace: [true, Type.BOOLEAN],\n    // Allow dropping a file on other file to replace it (only works when multiple is set to false)\n    allowRevert: [true, Type.BOOLEAN],\n    // Allows user to revert file upload\n    // Revert mode\n    forceRevert: [false, Type.BOOLEAN],\n    // Set to 'force' to require the file to be reverted before removal\n    // Input requirements\n    maxFiles: [null, Type.INT],\n    // Max number of files\n    checkValidity: [false, Type.BOOLEAN],\n    // Enables custom validity messages\n    // Drag 'n Drop related\n    dropOnPage: [false, Type.BOOLEAN],\n    // Allow dropping of files anywhere on page (prevents browser from opening file if dropped outside of Up)\n    dropOnElement: [true, Type.BOOLEAN],\n    // Drop needs to happen on element (set to false to also load drops outside of Up)\n    dropValidation: [false, Type.BOOLEAN],\n    // Enable or disable validating files on drop\n    ignoredFiles: [['.ds_store', 'thumbs.db', 'desktop.ini'], Type.ARRAY],\n    // Upload related\n    instantUpload: [true, Type.BOOLEAN],\n    // Should upload files immidiately on drop\n    maxParallelUploads: [2, Type.INT],\n    // Maximum files to upload in parallel\n    // The server api end points to use for uploading (see docs)\n    server: [null, Type.SERVER_API],\n    // Labels and status messages\n    labelDecimalSeparator: [getDecimalSeparator(), Type.STRING],\n    // Default is locale separator\n    labelThousandsSeparator: [getThousandsSeparator(), Type.STRING],\n    // Default is locale separator\n    labelIdle: ['Drag & Drop your files or <span class=\"filepond--label-action\">Browse</span>', Type.STRING],\n    labelInvalidField: ['Field contains invalid files', Type.STRING],\n    labelFileWaitingForSize: ['Waiting for size', Type.STRING],\n    labelFileSizeNotAvailable: ['Size not available', Type.STRING],\n    labelFileCountSingular: ['file in list', Type.STRING],\n    labelFileCountPlural: ['files in list', Type.STRING],\n    labelFileLoading: ['Loading', Type.STRING],\n    labelFileAdded: ['Added', Type.STRING],\n    // assistive only\n    labelFileLoadError: ['Error during load', Type.STRING],\n    labelFileRemoved: ['Removed', Type.STRING],\n    // assistive only\n    labelFileRemoveError: ['Error during remove', Type.STRING],\n    labelFileProcessing: ['Uploading', Type.STRING],\n    labelFileProcessingComplete: ['Upload complete', Type.STRING],\n    labelFileProcessingAborted: ['Upload cancelled', Type.STRING],\n    labelFileProcessingError: ['Error during upload', Type.STRING],\n    labelFileProcessingRevertError: ['Error during revert', Type.STRING],\n    labelTapToCancel: ['tap to cancel', Type.STRING],\n    labelTapToRetry: ['tap to retry', Type.STRING],\n    labelTapToUndo: ['tap to undo', Type.STRING],\n    labelButtonRemoveItem: ['Remove', Type.STRING],\n    labelButtonAbortItemLoad: ['Abort', Type.STRING],\n    labelButtonRetryItemLoad: ['Retry', Type.STRING],\n    labelButtonAbortItemProcessing: ['Cancel', Type.STRING],\n    labelButtonUndoItemProcessing: ['Undo', Type.STRING],\n    labelButtonRetryItemProcessing: ['Retry', Type.STRING],\n    labelButtonProcessItem: ['Upload', Type.STRING],\n    // make sure width and height plus viewpox are even numbers so icons are nicely centered\n    iconRemove: ['<svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M11.586 13l-2.293 2.293a1 1 0 0 0 1.414 1.414L13 14.414l2.293 2.293a1 1 0 0 0 1.414-1.414L14.414 13l2.293-2.293a1 1 0 0 0-1.414-1.414L13 11.586l-2.293-2.293a1 1 0 0 0-1.414 1.414L11.586 13z\" fill=\"currentColor\" fill-rule=\"nonzero\"/></svg>', Type.STRING],\n    iconProcess: ['<svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M14 10.414v3.585a1 1 0 0 1-2 0v-3.585l-1.293 1.293a1 1 0 0 1-1.414-1.415l3-3a1 1 0 0 1 1.414 0l3 3a1 1 0 0 1-1.414 1.415L14 10.414zM9 18a1 1 0 0 1 0-2h8a1 1 0 0 1 0 2H9z\" fill=\"currentColor\" fill-rule=\"evenodd\"/></svg>', Type.STRING],\n    iconRetry: ['<svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10.81 9.185l-.038.02A4.997 4.997 0 0 0 8 13.683a5 5 0 0 0 5 5 5 5 0 0 0 5-5 1 1 0 0 1 2 0A7 7 0 1 1 9.722 7.496l-.842-.21a.999.999 0 1 1 .484-1.94l3.23.806c.535.133.86.675.73 1.21l-.804 3.233a.997.997 0 0 1-1.21.73.997.997 0 0 1-.73-1.21l.23-.928v-.002z\" fill=\"currentColor\" fill-rule=\"nonzero\"/></svg>', Type.STRING],\n    iconUndo: ['<svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M9.185 10.81l.02-.038A4.997 4.997 0 0 1 13.683 8a5 5 0 0 1 5 5 5 5 0 0 1-5 5 1 1 0 0 0 0 2A7 7 0 1 0 7.496 9.722l-.21-.842a.999.999 0 1 0-1.94.484l.806 3.23c.133.535.675.86 1.21.73l3.233-.803a.997.997 0 0 0 .73-1.21.997.997 0 0 0-1.21-.73l-.928.23-.002-.001z\" fill=\"currentColor\" fill-rule=\"nonzero\"/></svg>', Type.STRING],\n    iconDone: ['<svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M18.293 9.293a1 1 0 0 1 1.414 1.414l-7.002 7a1 1 0 0 1-1.414 0l-3.998-4a1 1 0 1 1 1.414-1.414L12 15.586l6.294-6.293z\" fill=\"currentColor\" fill-rule=\"nonzero\"/></svg>', Type.STRING],\n    // event handlers\n    oninit: [null, Type.FUNCTION],\n    onwarning: [null, Type.FUNCTION],\n    onerror: [null, Type.FUNCTION],\n    onaddfilestart: [null, Type.FUNCTION],\n    onaddfileprogress: [null, Type.FUNCTION],\n    onaddfile: [null, Type.FUNCTION],\n    onprocessfilestart: [null, Type.FUNCTION],\n    onprocessfileprogress: [null, Type.FUNCTION],\n    onprocessfileabort: [null, Type.FUNCTION],\n    onprocessfilerevert: [null, Type.FUNCTION],\n    onprocessfile: [null, Type.FUNCTION],\n    onremovefile: [null, Type.FUNCTION],\n    onpreparefile: [null, Type.FUNCTION],\n    onupdatefiles: [null, Type.FUNCTION],\n    // hooks\n    beforeAddFile: [null, Type.FUNCTION],\n    beforeRemoveFile: [null, Type.FUNCTION],\n    // styles\n    stylePanelLayout: [null, Type.STRING],\n    // null 'integrated', 'compact', 'circle'\n    stylePanelAspectRatio: [null, Type.STRING],\n    // null or '3:2' or 1\n    styleButtonRemoveItemPosition: ['left', Type.STRING],\n    styleButtonProcessItemPosition: ['right', Type.STRING],\n    styleLoadIndicatorPosition: ['right', Type.STRING],\n    styleProgressIndicatorPosition: ['right', Type.STRING],\n    // custom initial files array\n    files: [[], Type.ARRAY]\n  };\n\n  var getItemByQuery = function getItemByQuery(items, query) {\n    // just return first index\n    if (isEmpty(query)) {\n      return items[0] || null;\n    } // query is index\n\n\n    if (isInt(query)) {\n      return items[query] || null;\n    } // if query is item, get the id\n\n\n    if ((typeof query === 'undefined' ? 'undefined' : _typeof(query)) === 'object') {\n      query = query.id;\n    } // assume query is a string and return item by id\n\n\n    return items.find(function (item) {\n      return item.id === query;\n    }) || null;\n  };\n\n  var getNumericAspectRatioFromString = function getNumericAspectRatioFromString(aspectRatio) {\n    if (isEmpty(aspectRatio)) {\n      return aspectRatio;\n    }\n\n    if (/:/.test(aspectRatio)) {\n      var _aspectRatio$split = aspectRatio.split(':'),\n          _aspectRatio$split2 = slicedToArray(_aspectRatio$split, 2),\n          w = _aspectRatio$split2[0],\n          h = _aspectRatio$split2[1];\n\n      return h / w;\n    }\n\n    return parseFloat(aspectRatio);\n  };\n\n  var getActiveItems = function getActiveItems(items) {\n    return items.filter(function (item) {\n      return !item.archived;\n    });\n  };\n\n  var queries = function queries(state) {\n    return {\n      GET_ITEM: function GET_ITEM(query) {\n        return getItemByQuery(state.items, query);\n      },\n      GET_ACTIVE_ITEM: function GET_ACTIVE_ITEM(query) {\n        return getItemByQuery(getActiveItems(state.items), query);\n      },\n      GET_ACTIVE_ITEMS: function GET_ACTIVE_ITEMS(query) {\n        return getActiveItems(state.items);\n      },\n      GET_ITEMS: function GET_ITEMS(query) {\n        return state.items;\n      },\n      GET_ITEM_NAME: function GET_ITEM_NAME(query) {\n        var item = getItemByQuery(state.items, query);\n        return item ? item.filename : null;\n      },\n      GET_ITEM_SIZE: function GET_ITEM_SIZE(query) {\n        var item = getItemByQuery(state.items, query);\n        return item ? item.fileSize : null;\n      },\n      GET_STYLES: function GET_STYLES() {\n        return Object.keys(state.options).filter(function (key) {\n          return /^style/.test(key);\n        }).map(function (option) {\n          return {\n            name: option,\n            value: state.options[option]\n          };\n        });\n      },\n      GET_PANEL_ASPECT_RATIO: function GET_PANEL_ASPECT_RATIO() {\n        var isShapeCircle = /circle/.test(state.options.stylePanelLayout);\n        var aspectRatio = isShapeCircle ? 1 : getNumericAspectRatioFromString(state.options.stylePanelAspectRatio);\n        return aspectRatio;\n      },\n      GET_ITEMS_BY_STATUS: function GET_ITEMS_BY_STATUS(status) {\n        return getActiveItems(state.items).filter(function (item) {\n          return item.status === status;\n        });\n      },\n      GET_TOTAL_ITEMS: function GET_TOTAL_ITEMS() {\n        return getActiveItems(state.items).length;\n      },\n      IS_ASYNC: function IS_ASYNC() {\n        return isObject(state.options.server) && (isObject(state.options.server.process) || isFunction(state.options.server.process));\n      }\n    };\n  };\n\n  var hasRoomForItem = function hasRoomForItem(state) {\n    var count = getActiveItems(state.items).length; // if cannot have multiple items, to add one item it should currently not contain items\n\n    if (!state.options.allowMultiple) {\n      return count === 0;\n    } // if allows multiple items, we check if a max item count has been set, if not, there's no limit\n\n\n    var maxFileCount = state.options.maxFiles;\n\n    if (maxFileCount === null) {\n      return true;\n    } // we check if the current count is smaller than the max count, if so, another file can still be added\n\n\n    if (count < maxFileCount) {\n      return true;\n    } // no more room for another file\n\n\n    return false;\n  };\n\n  var limit = function limit(value, min, max) {\n    return Math.max(Math.min(max, value), min);\n  };\n\n  var arrayInsert = function arrayInsert(arr, index, item) {\n    return arr.splice(index, 0, item);\n  };\n\n  var insertItem = function insertItem(items, item, index) {\n    if (isEmpty(item)) {\n      return null;\n    } // if index is undefined, append\n\n\n    if (typeof index === 'undefined') {\n      items.push(item);\n      return item;\n    } // limit the index to the size of the items array\n\n\n    index = limit(index, 0, items.length); // add item to array\n\n    arrayInsert(items, index, item); // expose\n\n    return item;\n  };\n\n  var isBase64DataURI = function isBase64DataURI(str) {\n    return /^\\s*data:([a-z]+\\/[a-z0-9-+.]+(;[a-z-]+=[a-z0-9-]+)?)?(;base64)?,([a-z0-9!$&',()*+;=\\-._~:@\\/?%\\s]*)\\s*$/i.test(str);\n  };\n\n  var getFilenameFromURL = function getFilenameFromURL(url) {\n    return url.split('/').pop().split('?').shift();\n  };\n\n  var getExtensionFromFilename = function getExtensionFromFilename(name) {\n    return name.split('.').pop();\n  };\n\n  var guesstimateExtension = function guesstimateExtension(type) {\n    // if no extension supplied, exit here\n    if (typeof type !== 'string') {\n      return '';\n    } // get subtype\n\n\n    var subtype = type.split('/').pop(); // is svg subtype\n\n    if (/svg/.test(subtype)) {\n      return 'svg';\n    }\n\n    if (/zip|compressed/.test(subtype)) {\n      return 'zip';\n    }\n\n    if (/plain/.test(subtype)) {\n      return 'txt';\n    }\n\n    if (/msword/.test(subtype)) {\n      return 'doc';\n    } // if is valid subtype\n\n\n    if (/[a-z]+/.test(subtype)) {\n      // always use jpg extension\n      if (subtype === 'jpeg') {\n        return 'jpg';\n      } // return subtype\n\n\n      return subtype;\n    }\n\n    return '';\n  };\n\n  var leftPad = function leftPad(value) {\n    var padding = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    return (padding + value).slice(-padding.length);\n  };\n\n  var getDateString = function getDateString() {\n    var date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Date();\n    return date.getFullYear() + '-' + leftPad(date.getMonth() + 1, '00') + '-' + leftPad(date.getDate(), '00') + '_' + leftPad(date.getHours(), '00') + '-' + leftPad(date.getMinutes(), '00') + '-' + leftPad(date.getSeconds(), '00');\n  };\n\n  var getFileFromBlob = function getFileFromBlob(blob, filename) {\n    var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    var extension = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n    var file = typeof type === 'string' ? blob.slice(0, blob.size, type) : blob.slice(0, blob.size, blob.type);\n    file.lastModifiedDate = new Date(); // if blob has name property, use as filename if no filename supplied\n\n    if (!isString(filename)) {\n      filename = getDateString();\n    } // if filename supplied but no extension and filename has extension\n\n\n    if (filename && extension === null && getExtensionFromFilename(filename)) {\n      file.name = filename;\n    } else {\n      extension = extension || guesstimateExtension(file.type);\n      file.name = filename + (extension ? '.' + extension : '');\n    }\n\n    return file;\n  };\n\n  var getBlobBuilder = function getBlobBuilder() {\n    return window.BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder;\n  };\n\n  var createBlob = function createBlob(arrayBuffer, mimeType) {\n    var BB = getBlobBuilder();\n\n    if (BB) {\n      var bb = new BB();\n      bb.append(arrayBuffer);\n      return bb.getBlob(mimeType);\n    }\n\n    return new Blob([arrayBuffer], {\n      type: mimeType\n    });\n  };\n\n  var getBlobFromByteStringWithMimeType = function getBlobFromByteStringWithMimeType(byteString, mimeType) {\n    var ab = new ArrayBuffer(byteString.length);\n    var ia = new Uint8Array(ab);\n\n    for (var i = 0; i < byteString.length; i++) {\n      ia[i] = byteString.charCodeAt(i);\n    }\n\n    return createBlob(ab, mimeType);\n  };\n\n  var getMimeTypeFromBase64DataURI = function getMimeTypeFromBase64DataURI(dataURI) {\n    return (/^data:(.+);/.exec(dataURI) || [])[1] || null;\n  };\n\n  var getBase64DataFromBase64DataURI = function getBase64DataFromBase64DataURI(dataURI) {\n    // get data part of string (remove data:image/jpeg...,)\n    var data = dataURI.split(',')[1]; // remove any whitespace as that causes InvalidCharacterError in IE\n\n    return data.replace(/\\s/g, '');\n  };\n\n  var getByteStringFromBase64DataURI = function getByteStringFromBase64DataURI(dataURI) {\n    return atob(getBase64DataFromBase64DataURI(dataURI));\n  };\n\n  var getBlobFromBase64DataURI = function getBlobFromBase64DataURI(dataURI) {\n    var mimeType = getMimeTypeFromBase64DataURI(dataURI);\n    var byteString = getByteStringFromBase64DataURI(dataURI);\n    return getBlobFromByteStringWithMimeType(byteString, mimeType);\n  };\n\n  var getFileFromBase64DataURI = function getFileFromBase64DataURI(dataURI, filename, extension) {\n    return getFileFromBlob(getBlobFromBase64DataURI(dataURI), filename, null, extension);\n  };\n\n  var getFileNameFromHeader = function getFileNameFromHeader(header) {\n    var matches = header.match(/(?:filename=\"(.+)\")|(?:filename=(.+))/) || [];\n    return matches[1] || matches[2];\n  };\n\n  var getFileSizeFromHeader = function getFileSizeFromHeader(header) {\n    if (/content-length:/i.test(header)) {\n      var size = header.match(/[0-9]+/)[0];\n      return size ? parseInt(size, 10) : null;\n    }\n\n    return null;\n  };\n\n  var getTranfserIdFromHeader = function getTranfserIdFromHeader(header) {\n    if (/x-content-transfer-id:/i.test(header)) {\n      var id = (header.split(':')[1] || '').trim();\n      return id || null;\n    }\n\n    return null;\n  };\n\n  var getFileInfoFromHeaders = function getFileInfoFromHeaders(headers) {\n    var info = {\n      source: null,\n      name: null,\n      size: null\n    };\n    var rows = headers.split('\\n');\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var header = _step.value;\n        var name = getFileNameFromHeader(header);\n\n        if (name) {\n          info.name = name;\n          continue;\n        }\n\n        var size = getFileSizeFromHeader(header);\n\n        if (size) {\n          info.size = size;\n          continue;\n        }\n\n        var source = getTranfserIdFromHeader(header);\n\n        if (source) {\n          info.source = source;\n          continue;\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    return info;\n  };\n\n  var createFileLoader = function createFileLoader(fetchFn) {\n    var state = {\n      source: null,\n      complete: false,\n      progress: 0,\n      size: null,\n      timestamp: null,\n      duration: 0,\n      request: null\n    };\n\n    var getProgress = function getProgress() {\n      return state.progress;\n    };\n\n    var abort = function abort() {\n      if (!state.request) {\n        return;\n      }\n\n      state.request.abort();\n    }; // load source\n\n\n    var load = function load() {\n      // get quick reference\n      var source = state.source;\n      api.fire('init', source); // Load Files\n\n      if (source instanceof File) {\n        api.fire('load', source);\n      } else if (source instanceof Blob) {\n        // Load blobs, set default name to current date\n        api.fire('load', getFileFromBlob(source, source.name));\n      } else if (isBase64DataURI(source)) {\n        // Load base 64, set default name to current date\n        api.fire('load', getFileFromBase64DataURI(source));\n      } else {\n        // Deal as if is external URL, let's load it!\n        loadURL(source);\n      }\n    }; // loads a url\n\n\n    var loadURL = function loadURL(url) {\n      // is remote url and no fetch method supplied\n      if (!fetchFn) {\n        api.fire('error', {\n          type: 'error',\n          body: \"Can't load URL\",\n          code: 400\n        });\n        return;\n      } // set request start\n\n\n      state.timestamp = Date.now(); // load file\n\n      state.request = fetchFn(url, function (response) {\n        // update duration\n        state.duration = Date.now() - state.timestamp; // done!\n\n        state.complete = true; // turn blob response into a file\n\n        if (response instanceof Blob) {\n          response = getFileFromBlob(response, getFilenameFromURL(url));\n        }\n\n        api.fire('load', response instanceof Blob ? response : response.body);\n      }, function (error) {\n        api.fire('error', typeof error === 'string' ? {\n          type: 'error',\n          code: 0,\n          body: error\n        } : error);\n      }, function (computable, current, total) {\n        // collected some meta data already\n        if (total) {\n          state.size = total;\n        } // update duration\n\n\n        state.duration = Date.now() - state.timestamp; // if we can't compute progress, we're not going to fire progress events\n\n        if (!computable) {\n          state.progress = null;\n          return;\n        } // update progress percentage\n\n\n        state.progress = current / total; // expose\n\n        api.fire('progress', state.progress);\n      }, function () {\n        api.fire('abort');\n      }, function (response) {\n        var fileinfo = getFileInfoFromHeaders(typeof response === 'string' ? response : response.headers);\n        api.fire('meta', {\n          size: state.size || fileinfo.size,\n          filename: fileinfo.name,\n          source: fileinfo.source\n        });\n      });\n    };\n\n    var api = Object.assign({}, on(), {\n      setSource: function setSource(source) {\n        return state.source = source;\n      },\n      getProgress: getProgress,\n      // file load progress\n      abort: abort,\n      // abort file load\n      load: load // start load\n\n    });\n    return api;\n  };\n\n  var isGet = function isGet(method) {\n    return /GET|HEAD/.test(method);\n  };\n\n  var sendRequest = function sendRequest(data, url, options) {\n    var api = {\n      onheaders: function onheaders() {},\n      onprogress: function onprogress() {},\n      onload: function onload() {},\n      ontimeout: function ontimeout() {},\n      onerror: function onerror() {},\n      onabort: function onabort() {},\n      abort: function abort() {\n        aborted = true;\n        xhr.abort();\n      }\n    }; // timeout identifier, only used when timeout is defined\n\n    var aborted = false;\n    var headersReceived = false; // set default options\n\n    options = Object.assign({\n      method: 'POST',\n      headers: {},\n      withCredentials: false\n    }, options); // encode url\n\n    url = encodeURI(url); // if method is GET, add any received data to url\n\n    if (isGet(options.method) && data) {\n      url = '' + url + encodeURIComponent(typeof data === 'string' ? data : JSON.stringify(data));\n    } // create request\n\n\n    var xhr = new XMLHttpRequest(); // progress of load\n\n    var process = isGet(options.method) ? xhr : xhr.upload;\n\n    process.onprogress = function (e) {\n      // no progress event when aborted ( onprogress is called once after abort() )\n      if (aborted) {\n        return;\n      }\n\n      api.onprogress(e.lengthComputable, e.loaded, e.total);\n    }; // tries to get header info to the app as fast as possible\n\n\n    xhr.onreadystatechange = function () {\n      // not interesting in these states ('unsent' and 'openend' as they don't give us any additional info)\n      if (xhr.readyState < 2) {\n        return;\n      } // no server response\n\n\n      if (xhr.readyState === 4 && xhr.status === 0) {\n        return;\n      }\n\n      if (headersReceived) {\n        return;\n      }\n\n      headersReceived = true; // we've probably received some useful data in response headers\n\n      api.onheaders(xhr);\n    }; // load successful\n\n\n    xhr.onload = function () {\n      // is classified as valid response\n      if (xhr.status >= 200 && xhr.status < 300) {\n        api.onload(xhr);\n      } else {\n        api.onerror(xhr);\n      }\n    }; // error during load\n\n\n    xhr.onerror = function () {\n      return api.onerror(xhr);\n    }; // request aborted\n\n\n    xhr.onabort = function () {\n      aborted = true;\n      api.onabort();\n    }; // request timeout\n\n\n    xhr.ontimeout = function () {\n      return api.ontimeout(xhr);\n    }; // open up open up!\n\n\n    xhr.open(options.method, url, true); // set timeout if defined (do it after open so IE11 plays ball)\n\n    if (isInt(options.timeout)) {\n      xhr.timeout = options.timeout;\n    } // add headers\n\n\n    Object.keys(options.headers).forEach(function (key) {\n      xhr.setRequestHeader(key, options.headers[key]);\n    }); // set type of response\n\n    if (options.responseType) {\n      xhr.responseType = options.responseType;\n    } // set credentials\n\n\n    if (options.withCredentials) {\n      xhr.withCredentials = true;\n    } // let's send our data\n\n\n    xhr.send(data);\n    return api;\n  };\n\n  var createResponse = function createResponse(type, code, body, headers) {\n    return {\n      type: type,\n      code: code,\n      body: body,\n      headers: headers\n    };\n  };\n\n  var createTimeoutResponse = function createTimeoutResponse(cb) {\n    return function (xhr) {\n      cb(createResponse('error', 0, 'Timeout', xhr.getAllResponseHeaders()));\n    };\n  };\n\n  var createFetchFunction = function createFetchFunction() {\n    var apiUrl = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var action = arguments[1]; // custom handler (should also handle file, load, error, progress and abort)\n\n    if (typeof action === 'function') {\n      return action;\n    } // no action supplied\n\n\n    if (!action || !isString(action.url)) {\n      return null;\n    } // set onload hanlder\n\n\n    var onload = action.onload || function (res) {\n      return res;\n    };\n\n    var onerror = action.onerror || function (res) {\n      return null;\n    }; // internal handler\n\n\n    return function (url, load, error, progress, abort, headers) {\n      // do local or remote request based on if the url is external\n      var request = sendRequest(url, apiUrl + action.url, Object.assign({}, action, {\n        responseType: 'blob'\n      }));\n\n      request.onload = function (xhr) {\n        // get headers\n        var headers = xhr.getAllResponseHeaders(); // get filename\n\n        var filename = getFileInfoFromHeaders(headers).name || getFilenameFromURL(url); // create response\n\n        load(createResponse('load', xhr.status, getFileFromBlob(onload(xhr.response), filename), headers));\n      };\n\n      request.onerror = function (xhr) {\n        error(createResponse('error', xhr.status, onerror(xhr.response) || xhr.statusText, xhr.getAllResponseHeaders()));\n      };\n\n      request.onheaders = function (xhr) {\n        headers(createResponse('headers', xhr.status, null, xhr.getAllResponseHeaders()));\n      };\n\n      request.ontimeout = createTimeoutResponse(error);\n      request.onprogress = progress;\n      request.onabort = abort; // should return request\n\n      return request;\n    };\n  };\n  /*\n  function signature:\n  (file, metadata, load, error, progress, abort) => {\n    return {\n    abort:() => {}\n  }\n  }\n  */\n\n\n  var createProcessorFunction = function createProcessorFunction() {\n    var apiUrl = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var action = arguments[1];\n    var name = arguments[2]; // custom handler (should also handle file, load, error, progress and abort)\n\n    if (typeof action === 'function') {\n      return function () {\n        for (var _len = arguments.length, params = Array(_len), _key = 0; _key < _len; _key++) {\n          params[_key] = arguments[_key];\n        }\n\n        return action.apply(undefined, [name].concat(params));\n      };\n    } // no action supplied\n\n\n    if (!action || !isString(action.url)) {\n      return null;\n    } // internal handler\n\n\n    return function (file, metadata, load, error, progress, abort) {\n      // set onload hanlder\n      var ondata = action.ondata || function (fd) {\n        return fd;\n      };\n\n      var onload = action.onload || function (res) {\n        return res;\n      };\n\n      var onerror = action.onerror || function (res) {\n        return null;\n      }; // no file received\n\n\n      if (!file) return; // create formdata object\n\n      var formData = new FormData(); // add metadata under same name\n\n      if (isObject(metadata)) {\n        formData.append(name, JSON.stringify(metadata));\n      } // Turn into an array of objects so no matter what the input, we can handle it the same way\n\n\n      (file instanceof Blob ? [{\n        name: null,\n        file: file\n      }] : file).forEach(function (item) {\n        formData.append(name, item.file, item.name === null ? item.file.name : '' + item.name + item.file.name);\n      }); // send request object\n\n      var request = sendRequest(ondata(formData), apiUrl + action.url, action);\n\n      request.onload = function (xhr) {\n        load(createResponse('load', xhr.status, onload(xhr.response), xhr.getAllResponseHeaders()));\n      };\n\n      request.onerror = function (xhr) {\n        error(createResponse('error', xhr.status, onerror(xhr.response) || xhr.statusText, xhr.getAllResponseHeaders()));\n      };\n\n      request.ontimeout = createTimeoutResponse(error);\n      request.onprogress = progress;\n      request.onabort = abort; // should return request\n\n      return request;\n    };\n  };\n  /*\n  function signature:\n  (uniqueFileId, load, error) => { }\n  */\n\n\n  var createRevertFunction = function createRevertFunction() {\n    var apiUrl = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var action = arguments[1]; // is custom implementation\n\n    if (typeof action === 'function') {\n      return action;\n    } // no action supplied, return stub function, interface will work, but file won't be removed\n\n\n    if (!action || !isString(action.url)) {\n      return function (uniqueFileId, load) {\n        return load();\n      };\n    } // set onload hanlder\n\n\n    var onload = action.onload || function (res) {\n      return res;\n    };\n\n    var onerror = action.onerror || function (res) {\n      return null;\n    }; // internal implementation\n\n\n    return function (uniqueFileId, load, error) {\n      var request = sendRequest(uniqueFileId, apiUrl + action.url, action // contains method, headers and withCredentials properties\n      );\n\n      request.onload = function (xhr) {\n        load(createResponse('load', xhr.status, onload(xhr.response), xhr.getAllResponseHeaders()));\n      };\n\n      request.onerror = function (xhr) {\n        error(createResponse('error', xhr.status, onerror(xhr.response) || xhr.statusText, xhr.getAllResponseHeaders()));\n      };\n\n      request.ontimeout = createTimeoutResponse(error);\n      return request;\n    };\n  };\n\n  var getRandomNumber = function getRandomNumber() {\n    var min = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var max = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    return min + Math.random() * (max - min);\n  };\n\n  var createPerceivedPerformanceUpdater = function createPerceivedPerformanceUpdater(cb) {\n    var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1000;\n    var tickMin = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 25;\n    var tickMax = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 250;\n    var timeout = null;\n    var start = Date.now();\n\n    var tick = function tick() {\n      var runtime = Date.now() - start;\n      var delay = getRandomNumber(tickMin, tickMax);\n\n      if (runtime + delay > duration) {\n        delay = runtime + delay - duration;\n      }\n\n      var progress = runtime / duration;\n\n      if (progress >= 1) {\n        cb(1);\n        return;\n      }\n\n      cb(progress);\n      timeout = setTimeout(tick, delay);\n    };\n\n    tick();\n    return {\n      clear: function clear() {\n        clearTimeout(timeout);\n      }\n    };\n  };\n\n  var createFileProcessor = function createFileProcessor(processFn) {\n    var state = {\n      complete: false,\n      perceivedProgress: 0,\n      perceivedPerformanceUpdater: null,\n      progress: null,\n      timestamp: null,\n      perceivedDuration: 0,\n      duration: 0,\n      request: null,\n      response: null\n    };\n\n    var process = function process(file, metadata) {\n      var progressFn = function progressFn() {\n        // we've not yet started the real download, stop here\n        // the request might not go through, for instance, there might be some server trouble\n        // if state.progress is null, the server does not allow computing progress and we show the spinner instead\n        if (state.duration === 0 || state.progress === null) {\n          return;\n        } // as we're now processing, fire the progress event\n\n\n        api.fire('progress', api.getProgress());\n      };\n\n      var completeFn = function completeFn() {\n        state.complete = true;\n        api.fire('load-perceived', state.response.body);\n      }; // let's start processing\n\n\n      api.fire('start'); // set request start\n\n      state.timestamp = Date.now(); // create perceived performance progress indicator\n\n      state.perceivedPerformanceUpdater = createPerceivedPerformanceUpdater(function (progress) {\n        state.perceivedProgress = progress;\n        state.perceivedDuration = Date.now() - state.timestamp;\n        progressFn(); // if fake progress is done, and a response has been received,\n        // and we've not yet called the complete method\n\n        if (state.response && state.perceivedProgress === 1 && !state.complete) {\n          // we done!\n          completeFn();\n        }\n      }, // random delay as in a list of files you start noticing\n      // files uploading at the exact same speed\n      getRandomNumber(750, 1500)); // remember request so we can abort it later\n\n      state.request = processFn( // the file to process\n      file, // the metadata to send along\n      metadata, // callbacks (load, error, progress, abort)\n      // load expects the body to be a server id if\n      // you want to make use of revert\n      function (response) {\n        // we put the response in state so we can access\n        // it outside of this method\n        state.response = isObject(response) ? response : {\n          type: 'load',\n          code: 200,\n          body: '' + response,\n          headers: {}\n        }; // update duration\n\n        state.duration = Date.now() - state.timestamp; // force progress to 1 as we're now done\n\n        state.progress = 1; // actual load is done let's share results\n\n        api.fire('load', state.response.body); // we are really done\n        // if perceived progress is 1 ( wait for perceived progress to complete )\n        // or if server does not support progress ( null )\n\n        if (state.perceivedProgress === 1) {\n          completeFn();\n        }\n      }, // error is expected to be an object with type, code, body\n      function (error) {\n        // cancel updater\n        state.perceivedPerformanceUpdater.clear(); // update others about this error\n\n        api.fire('error', isObject(error) ? error : {\n          type: 'error',\n          code: 0,\n          body: '' + error\n        });\n      }, // actual processing progress\n      function (computable, current, total) {\n        // update actual duration\n        state.duration = Date.now() - state.timestamp; // update actual progress\n\n        state.progress = computable ? current / total : null;\n        progressFn();\n      }, // abort does not expect a value\n      function () {\n        // stop updater\n        state.perceivedPerformanceUpdater.clear(); // fire the abort event so we can switch visuals\n\n        api.fire('abort', state.response ? state.response.body : null);\n      });\n    };\n\n    var abort = function abort() {\n      // no request running, can't abort\n      if (!state.request) {\n        return;\n      } // stop updater\n\n\n      state.perceivedPerformanceUpdater.clear(); // abort actual request\n\n      state.request.abort(); // if has response object, we've completed the request\n\n      state.complete = true;\n    };\n\n    var reset = function reset() {\n      abort();\n      state.complete = false;\n      state.perceivedProgress = 0;\n      state.progress = 0;\n      state.timestamp = null;\n      state.perceivedDuration = 0;\n      state.duration = 0;\n      state.request = null;\n      state.response = null;\n    };\n\n    var getProgress = function getProgress() {\n      return state.progress ? Math.min(state.progress, state.perceivedProgress) : null;\n    };\n\n    var getDuration = function getDuration() {\n      return Math.min(state.duration, state.perceivedDuration);\n    };\n\n    var api = Object.assign({}, on(), {\n      process: process,\n      // start processing file\n      abort: abort,\n      // abort active process request\n      getProgress: getProgress,\n      getDuration: getDuration,\n      reset: reset\n    });\n    return api;\n  };\n\n  var getFilenameWithoutExtension = function getFilenameWithoutExtension(name) {\n    return name.substr(0, name.lastIndexOf('.')) || name;\n  };\n\n  var ItemStatus = {\n    INIT: 1,\n    IDLE: 2,\n    PROCESSING_QUEUED: 9,\n    PROCESSING: 3,\n    PROCESSING_COMPLETE: 5,\n    PROCESSING_ERROR: 6,\n    PROCESSING_REVERT_ERROR: 10,\n    LOADING: 7,\n    LOAD_ERROR: 8\n  };\n\n  var createFileStub = function createFileStub(source) {\n    var data = [source.name, source.size, source.type]; // is blob or base64, then we need to set the name\n\n    if (source instanceof Blob || isBase64DataURI(source)) {\n      data[0] = source.name || getDateString();\n    } else if (isBase64DataURI(source)) {\n      // if is base64 data uri we need to determine the average size and type\n      data[1] = source.length;\n      data[2] = getMimeTypeFromBase64DataURI(source);\n    } else if (isString(source)) {\n      // url\n      data[0] = getFilenameFromURL(source);\n      data[1] = 0;\n      data[2] = 'application/octet-stream';\n    }\n\n    return {\n      name: data[0],\n      size: data[1],\n      type: data[2]\n    };\n  };\n\n  var FileOrigin$1 = {\n    INPUT: 1,\n    LIMBO: 2,\n    LOCAL: 3\n  };\n\n  var deepCloneObject = function deepCloneObject(src) {\n    if (!isObject(src)) return src;\n    var target = isArray(src) ? [] : {};\n\n    for (var key in src) {\n      if (!src.hasOwnProperty(key)) continue;\n      var v = src[key];\n      target[key] = v && isObject(v) ? deepCloneObject(v) : v;\n    }\n\n    return target;\n  };\n\n  var createItem = function createItem() {\n    var origin = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    var serverFileReference = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    var file = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null; // unique id for this item, is used to identify the item across views\n\n    var id = getUniqueId();\n    /**\n     * Internal item state\n     */\n\n    var state = {\n      // is archived\n      archived: false,\n      // removed from view\n      released: false,\n      // original source\n      source: null,\n      // file model reference\n      file: file,\n      // id of file on server\n      serverFileReference: serverFileReference,\n      // current item status\n      status: serverFileReference ? ItemStatus.PROCESSING_COMPLETE : ItemStatus.INIT,\n      // active processes\n      activeLoader: null,\n      activeProcessor: null\n    }; // callback used when abort processing is called to link back to the resolve method\n\n    var abortProcessingRequestComplete = null;\n    /**\n     * Externally added item metadata\n     */\n\n    var metadata = {}; // item data\n\n    var setStatus = function setStatus(status) {\n      return state.status = status;\n    }; // fire event unless the item has been archived\n\n\n    var fire = function fire(event) {\n      for (var _len = arguments.length, params = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        params[_key - 1] = arguments[_key];\n      }\n\n      if (state.released) return;\n      api.fire.apply(api, [event].concat(params));\n    }; // file data\n\n\n    var getFileExtension = function getFileExtension() {\n      return getExtensionFromFilename(state.file.name);\n    };\n\n    var getFileType = function getFileType() {\n      return state.file.type;\n    };\n\n    var getFileSize = function getFileSize() {\n      return state.file.size;\n    };\n\n    var getFile = function getFile() {\n      return state.file;\n    }; //\n    // logic to load a file\n    //\n\n\n    var load = function load(source, loader, onload) {\n      // remember the original item source\n      state.source = source; // file stub is already there\n\n      if (state.file) {\n        fire('load-skip');\n        return;\n      } // set a stub file object while loading the actual data\n\n\n      state.file = createFileStub(source); // starts loading\n\n      loader.on('init', function () {\n        fire('load-init');\n      }); // we'eve received a size indication, let's update the stub\n\n      loader.on('meta', function (meta) {\n        // set size of file stub\n        state.file.size = meta.size; // set name of file stub\n\n        state.file.filename = meta.filename; // if has received source, we done\n\n        if (meta.source) {\n          origin = FileOrigin$1.LIMBO;\n          state.serverFileReference = meta.source;\n          state.status = ItemStatus.PROCESSING_COMPLETE;\n        } // size has been updated\n\n\n        fire('load-meta');\n      }); // the file is now loading we need to update the progress indicators\n\n      loader.on('progress', function (progress) {\n        setStatus(ItemStatus.LOADING);\n        fire('load-progress', progress);\n      }); // an error was thrown while loading the file, we need to switch to error state\n\n      loader.on('error', function (error) {\n        setStatus(ItemStatus.LOAD_ERROR);\n        fire('load-request-error', error);\n      }); // user or another process aborted the file load (cannot retry)\n\n      loader.on('abort', function () {\n        setStatus(ItemStatus.INIT);\n        fire('load-abort');\n      }); // done loading\n\n      loader.on('load', function (file) {\n        // as we've now loaded the file the loader is no longer required\n        state.activeLoader = null; // called when file has loaded succesfully\n\n        var success = function success(result) {\n          // set (possibly) transformed file\n          state.file = result.size > 0 ? result : state.file; // file received\n\n          if (origin === FileOrigin$1.LIMBO && state.serverFileReference) {\n            setStatus(ItemStatus.PROCESSING_COMPLETE);\n          } else {\n            setStatus(ItemStatus.IDLE);\n          }\n\n          fire('load');\n        };\n\n        var error = function error(result) {\n          // set original file\n          state.file = file;\n          fire('load-meta');\n          setStatus(ItemStatus.LOAD_ERROR);\n          fire('load-file-error', result);\n        }; // if we already have a server file reference, we don't need to call the onload method\n\n\n        if (state.serverFileReference) {\n          success(file);\n          return;\n        } // no server id, let's give this file the full treatment\n\n\n        onload(file, success, error);\n      }); // set loader source data\n\n      loader.setSource(source); // set as active loader\n\n      state.activeLoader = loader; // load the source data\n\n      loader.load();\n    };\n\n    var retryLoad = function retryLoad() {\n      if (!state.activeLoader) {\n        return;\n      }\n\n      state.activeLoader.load();\n    };\n\n    var abortLoad = function abortLoad() {\n      if (!state.activeLoader) {\n        return;\n      }\n\n      state.activeLoader.abort();\n    }; //\n    // logic to process a file\n    //\n\n\n    var process = function process(processor, onprocess) {\n      // now processing\n      setStatus(ItemStatus.PROCESSING); // reset abort callback\n\n      abortProcessingRequestComplete = null; // if no file loaded we'll wait for the load event\n\n      if (!(state.file instanceof Blob)) {\n        api.on('load', function () {\n          process(processor, onprocess);\n        });\n        return;\n      } // setup processor\n\n\n      processor.on('load', function (serverFileReference) {\n        // need this id to be able to revert the upload\n        state.serverFileReference = serverFileReference;\n      });\n      processor.on('load-perceived', function (serverFileReference) {\n        // no longer required\n        state.activeProcessor = null; // need this id to be able to rever the upload\n\n        state.serverFileReference = serverFileReference;\n        setStatus(ItemStatus.PROCESSING_COMPLETE);\n        fire('process-complete', serverFileReference);\n      });\n      processor.on('start', function () {\n        fire('process-start');\n      });\n      processor.on('error', function (error) {\n        state.activeProcessor = null;\n        setStatus(ItemStatus.PROCESSING_ERROR);\n        fire('process-error', error);\n      });\n      processor.on('abort', function (serverFileReference) {\n        state.activeProcessor = null; // if file was uploaded but processing was cancelled during perceived processor time store file reference\n\n        state.serverFileReference = serverFileReference;\n        setStatus(ItemStatus.IDLE);\n        fire('process-abort'); // has timeout so doesn't interfere with remove action\n\n        if (abortProcessingRequestComplete) {\n          abortProcessingRequestComplete();\n        }\n      });\n      processor.on('progress', function (progress) {\n        fire('process-progress', progress);\n      }); // when successfully transformed\n\n      var success = function success(file) {\n        // if was archived in the mean time, don't process\n        if (state.archived) return; // process file!\n\n        processor.process(file, Object.assign({}, metadata));\n      }; // something went wrong during transform phase\n\n\n      var error = function error(result) {}; // start processing the file\n\n\n      onprocess(state.file, success, error); // set as active processor\n\n      state.activeProcessor = processor;\n    };\n\n    var requestProcessing = function requestProcessing() {\n      setStatus(ItemStatus.PROCESSING_QUEUED);\n    };\n\n    var abortProcessing = function abortProcessing() {\n      return new Promise(function (resolve) {\n        if (!state.activeProcessor) {\n          setStatus(ItemStatus.IDLE);\n          fire('process-abort');\n          resolve();\n          return;\n        }\n\n        abortProcessingRequestComplete = function abortProcessingRequestComplete() {\n          resolve();\n        };\n\n        state.activeProcessor.abort();\n      });\n    }; //\n    // logic to revert a processed file\n    //\n\n\n    var revert = function revert(revertFileUpload, forceRevert) {\n      return new Promise(function (resolve, reject) {\n        // cannot revert without a server id for this process\n        if (state.serverFileReference === null) {\n          resolve();\n          return;\n        } // revert the upload (fire and forget)\n\n\n        revertFileUpload(state.serverFileReference, function () {\n          // reset file server id as now it's no available on the server\n          state.serverFileReference = null;\n          resolve();\n        }, function (error) {\n          // don't set error state when reverting is optional, it will always resolve\n          if (!forceRevert) {\n            resolve();\n            return;\n          } // oh no errors\n\n\n          setStatus(ItemStatus.PROCESSING_REVERT_ERROR);\n          fire('process-revert-error');\n          reject(error);\n        }); // fire event\n\n        setStatus(ItemStatus.IDLE);\n        fire('process-revert');\n      });\n    }; // exposed methods\n\n\n    var _setMetadata = function _setMetadata(key, value, silent) {\n      var keys = key.split('.');\n      var root = keys[0];\n      var last = keys.pop();\n      var data = metadata;\n      keys.forEach(function (key) {\n        return data = data[key];\n      }); // compare old value against new value, if they're the same, we're not updating\n\n      if (JSON.stringify(data[last]) === JSON.stringify(value)) {\n        return;\n      } // update value\n\n\n      data[last] = value;\n      if (silent) return;\n      fire('metadata-update', {\n        key: root,\n        value: metadata[root]\n      });\n    };\n\n    var getMetadata = function getMetadata(key) {\n      return deepCloneObject(key ? metadata[key] : metadata);\n    };\n\n    var api = Object.assign({\n      id: {\n        get: function get() {\n          return id;\n        }\n      },\n      origin: {\n        get: function get() {\n          return origin;\n        }\n      },\n      serverId: {\n        get: function get() {\n          return state.serverFileReference;\n        }\n      },\n      status: {\n        get: function get() {\n          return state.status;\n        }\n      },\n      filename: {\n        get: function get() {\n          return state.file.name;\n        }\n      },\n      filenameWithoutExtension: {\n        get: function get() {\n          return getFilenameWithoutExtension(state.file.name);\n        }\n      },\n      fileExtension: {\n        get: getFileExtension\n      },\n      fileType: {\n        get: getFileType\n      },\n      fileSize: {\n        get: getFileSize\n      },\n      file: {\n        get: getFile\n      },\n      source: {\n        get: function get() {\n          return state.source;\n        }\n      },\n      getMetadata: getMetadata,\n      setMetadata: function setMetadata(key, value, silent) {\n        if (isObject(key)) {\n          var data = key;\n          Object.keys(data).forEach(function (key) {\n            _setMetadata(key, data[key], value);\n          });\n          return key;\n        }\n\n        _setMetadata(key, value, silent);\n\n        return value;\n      },\n      extend: function extend(name, handler) {\n        return itemAPI[name] = handler;\n      },\n      abortLoad: abortLoad,\n      retryLoad: retryLoad,\n      requestProcessing: requestProcessing,\n      abortProcessing: abortProcessing,\n      load: load,\n      process: process,\n      revert: revert\n    }, on(), {\n      release: function release() {\n        return state.released = true;\n      },\n      released: {\n        get: function get() {\n          return state.released;\n        }\n      },\n      archive: function archive() {\n        return state.archived = true;\n      },\n      archived: {\n        get: function get() {\n          return state.archived;\n        }\n      }\n    }); // create it here instead of returning it instantly so we can extend it later\n\n    var itemAPI = createObject(api);\n    return itemAPI;\n  };\n\n  var getItemIndexByQuery = function getItemIndexByQuery(items, query) {\n    // just return first index\n    if (isEmpty(query)) {\n      return 0;\n    } // invalid queries\n\n\n    if (!isString(query)) {\n      return -1;\n    } // return item by id (or -1 if not found)\n\n\n    return items.findIndex(function (item) {\n      return item.id === query;\n    });\n  };\n\n  var getItemById = function getItemById(items, itemId) {\n    var index = getItemIndexByQuery(items, itemId);\n\n    if (index < 0) {\n      return;\n    }\n\n    return items[index] || null;\n  };\n\n  var fetchLocal = function fetchLocal(url, load, error, progress, abort, headers) {\n    var request = sendRequest(null, url, {\n      method: 'GET',\n      responseType: 'blob'\n    });\n\n    request.onload = function (xhr) {\n      // get headers\n      var headers = xhr.getAllResponseHeaders(); // get filename\n\n      var filename = getFileInfoFromHeaders(headers).name || getFilenameFromURL(url); // create response\n\n      load(createResponse('load', xhr.status, getFileFromBlob(xhr.response, filename), headers));\n    };\n\n    request.onerror = function (xhr) {\n      error(createResponse('error', xhr.status, xhr.statusText, xhr.getAllResponseHeaders()));\n    };\n\n    request.onheaders = function (xhr) {\n      headers(createResponse('headers', xhr.status, null, xhr.getAllResponseHeaders()));\n    };\n\n    request.ontimeout = createTimeoutResponse(error);\n    request.onprogress = progress;\n    request.onabort = abort; // should return request\n\n    return request;\n  };\n\n  var getDomainFromURL = function getDomainFromURL(url) {\n    if (url.indexOf('//') === 0) {\n      url = location.protocol + url;\n    }\n\n    return url.toLowerCase().replace('blob:', '').replace(/([a-z])?:\\/\\//, '$1').split('/')[0];\n  };\n\n  var isExternalURL = function isExternalURL(url) {\n    return (url.indexOf(':') > -1 || url.indexOf('//') > -1) && getDomainFromURL(location.href) !== getDomainFromURL(url);\n  };\n\n  var isFile = function isFile(value) {\n    return value instanceof File || value instanceof Blob && value.name;\n  };\n\n  var dynamicLabel = function dynamicLabel(label) {\n    return function () {\n      return isFunction(label) ? label.apply(undefined, arguments) : label;\n    };\n  };\n\n  var isMockItem = function isMockItem(item) {\n    return !isFile(item.file);\n  };\n\n  var listUpdated = function listUpdated(dispatch, state) {\n    clearTimeout(state.listUpdateTimeout);\n    state.listUpdateTimeout = setTimeout(function () {\n      dispatch('DID_UPDATE_ITEMS', {\n        items: getActiveItems(state.items)\n      });\n    }, 0);\n  };\n\n  var optionalPromise = function optionalPromise(fn) {\n    for (var _len = arguments.length, params = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      params[_key - 1] = arguments[_key];\n    }\n\n    return new Promise(function (resolve) {\n      if (!fn) {\n        return resolve(true);\n      }\n\n      var result = fn.apply(undefined, params);\n\n      if (result == null) {\n        return resolve(true);\n      }\n\n      if (typeof result === 'boolean') {\n        return resolve(result);\n      }\n\n      if (typeof result.then === 'function') {\n        result.then(resolve);\n      }\n    });\n  }; // returns item based on state\n\n\n  var getItemByQueryFromState = function getItemByQueryFromState(state, itemHandler) {\n    return function () {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          query = _ref.query,\n          _ref$success = _ref.success,\n          success = _ref$success === undefined ? function () {} : _ref$success,\n          _ref$failure = _ref.failure,\n          failure = _ref$failure === undefined ? function () {} : _ref$failure;\n\n      var item = getItemByQuery(state.items, query);\n\n      if (!item) {\n        failure({\n          error: createResponse('error', 0, 'Item not found'),\n          file: null\n        });\n        return;\n      }\n\n      itemHandler(item, success, failure);\n    };\n  };\n\n  var actions = function actions(dispatch, query, state) {\n    return {\n      /**\n       * Aborts all ongoing processes\n       */\n      ABORT_ALL: function ABORT_ALL() {\n        getActiveItems(state.items).forEach(function (item) {\n          item.abortLoad();\n          item.abortProcessing();\n        });\n      },\n\n      /**\n       * Sets initial files\n       */\n      DID_SET_FILES: function DID_SET_FILES(_ref2) {\n        var _ref2$value = _ref2.value,\n            value = _ref2$value === undefined ? [] : _ref2$value; // map values to file objects\n\n        var files = value.map(function (file) {\n          return {\n            source: file.source ? file.source : file,\n            options: file.options\n          };\n        }); // loop over files, if file is in list, leave it be, if not, remove\n        // test if items should be moved\n\n        var activeItems = getActiveItems(state.items);\n        activeItems.forEach(function (item) {\n          // if item not is in new value, remove\n          if (!files.find(function (file) {\n            return file.source === item.source || file.source === item.file;\n          })) {\n            dispatch('REMOVE_ITEM', {\n              query: item\n            });\n          }\n        }); // add new files\n\n        activeItems = getActiveItems(state.items);\n        files.forEach(function (file, index) {\n          // if file is already in list\n          if (activeItems.find(function (item) {\n            return item.source === file.source || item.file === file.source;\n          })) return; // not in list, add\n\n          dispatch('ADD_ITEM', Object.assign({}, file, {\n            interactionMethod: InteractionMethod.NONE,\n            index: index\n          }));\n        });\n      },\n      DID_UPDATE_ITEM_METADATA: function DID_UPDATE_ITEM_METADATA(_ref3) {\n        var id = _ref3.id;\n        var item = getItemById(state.items, id); // only revert and attempt to upload when we're uploading to a server\n\n        if (!query('IS_ASYNC')) {\n          // should we update the output data\n          applyFilterChain('SHOULD_PREPARE_OUTPUT', false, {\n            item: item,\n            query: query\n          }).then(function (shouldPrepareOutput) {\n            if (!shouldPrepareOutput) {\n              return;\n            }\n\n            dispatch('REQUEST_PREPARE_OUTPUT', {\n              query: id,\n              item: item,\n              ready: function ready(file) {\n                dispatch('DID_PREPARE_OUTPUT', {\n                  id: id,\n                  file: file\n                });\n              }\n            }, true);\n          });\n          return;\n        } // for async scenarios\n\n\n        var upload = function upload() {\n          // we push this forward a bit so the interface is updated correctly\n          setTimeout(function () {\n            dispatch('REQUEST_ITEM_PROCESSING', {\n              query: id\n            });\n          }, 32);\n        };\n\n        var revert = function revert(doUpload) {\n          item.revert(createRevertFunction(state.options.server.url, state.options.server.revert), query('GET_FORCE_REVERT')).then(doUpload ? upload : function () {}).catch(function () {});\n        };\n\n        var abort = function abort(doUpload) {\n          item.abortProcessing().then(doUpload ? upload : function () {});\n        }; // if we should re-upload the file immidiately\n\n\n        if (item.status === ItemStatus.PROCESSING_COMPLETE) {\n          return revert(state.options.instantUpload);\n        } // if currently uploading, cancel upload\n\n\n        if (item.status === ItemStatus.PROCESSING) {\n          return abort(state.options.instantUpload);\n        }\n\n        if (state.options.instantUpload) {\n          upload();\n        }\n      },\n\n      /**\n       * @param source\n       * @param index\n       * @param interactionMethod\n       */\n      ADD_ITEM: function ADD_ITEM(_ref4) {\n        var source = _ref4.source,\n            index = _ref4.index,\n            interactionMethod = _ref4.interactionMethod,\n            _ref4$success = _ref4.success,\n            success = _ref4$success === undefined ? function () {} : _ref4$success,\n            _ref4$failure = _ref4.failure,\n            failure = _ref4$failure === undefined ? function () {} : _ref4$failure,\n            _ref4$options = _ref4.options,\n            options = _ref4$options === undefined ? {} : _ref4$options; // if no source supplied\n\n        if (isEmpty(source)) {\n          failure({\n            error: createResponse('error', 0, 'No source'),\n            file: null\n          });\n          return;\n        } // filter out invalid file items, used to filter dropped directory contents\n\n\n        if (isFile(source) && state.options.ignoredFiles.includes(source.name.toLowerCase())) {\n          // fail silently\n          return;\n        } // test if there's still room in the list of files\n\n\n        if (!hasRoomForItem(state)) {\n          // if multiple allowed, we can't replace\n          // or if only a single item is allowed but we're not allowed to replace it we exit\n          if (state.options.allowMultiple || !state.options.allowMultiple && !state.options.allowReplace) {\n            var error = createResponse('warning', 0, 'Max files');\n            dispatch('DID_THROW_MAX_FILES', {\n              source: source,\n              error: error\n            });\n            failure({\n              error: error,\n              file: null\n            });\n            return;\n          } // let's replace the item\n          // id of first item we're about to remove\n\n\n          var _item = getActiveItems(state.items)[0]; // if has been processed remove it from the server as well\n\n          if (_item.status === ItemStatus.PROCESSING_COMPLETE || _item.status === ItemStatus.PROCESSING_REVERT_ERROR) {\n            var forceRevert = query('GET_FORCE_REVERT');\n\n            _item.revert(createRevertFunction(state.options.server.url, state.options.server.revert), forceRevert).then(function () {\n              if (!forceRevert) return; // try to add now\n\n              dispatch('ADD_ITEM', {\n                source: source,\n                index: index,\n                interactionMethod: interactionMethod,\n                success: success,\n                failure: failure,\n                options: options\n              });\n            }).catch(function () {}); // no need to handle this catch state for now\n\n\n            if (forceRevert) return;\n          } // remove first item as it will be replaced by this item\n\n\n          dispatch('REMOVE_ITEM', {\n            query: _item.id\n          });\n        } // where did the file originate\n\n\n        var origin = options.type === 'local' ? FileOrigin$1.LOCAL : options.type === 'limbo' ? FileOrigin$1.LIMBO : FileOrigin$1.INPUT; // create a new blank item\n\n        var item = createItem( // where did this file come from\n        origin, // an input file never has a server file reference\n        origin === FileOrigin$1.INPUT ? null : source, // file mock data, if defined\n        options.file); // set initial meta data\n\n        Object.keys(options.metadata || {}).forEach(function (key) {\n          item.setMetadata(key, options.metadata[key]);\n        }); // created the item, let plugins add methods\n\n        applyFilters('DID_CREATE_ITEM', item, {\n          query: query,\n          dispatch: dispatch\n        }); // add item to list\n\n        insertItem(state.items, item, index); // get a quick reference to the item id\n\n        var id = item.id; // observe item events\n\n        item.on('load-init', function () {\n          dispatch('DID_START_ITEM_LOAD', {\n            id: id\n          });\n        });\n        item.on('load-meta', function () {\n          dispatch('DID_UPDATE_ITEM_META', {\n            id: id\n          });\n        });\n        item.on('load-progress', function (progress) {\n          dispatch('DID_UPDATE_ITEM_LOAD_PROGRESS', {\n            id: id,\n            progress: progress\n          });\n        });\n        item.on('load-request-error', function (error) {\n          var mainStatus = dynamicLabel(state.options.labelFileLoadError)(error); // is client error, no way to recover\n\n          if (error.code >= 400 && error.code < 500) {\n            dispatch('DID_THROW_ITEM_INVALID', {\n              id: id,\n              error: error,\n              status: {\n                main: mainStatus,\n                sub: error.code + ' (' + error.body + ')'\n              }\n            }); // reject the file so can be dealt with through API\n\n            failure({\n              error: error,\n              file: createItemAPI(item)\n            });\n            return;\n          } // is possible server error, so might be possible to retry\n\n\n          dispatch('DID_THROW_ITEM_LOAD_ERROR', {\n            id: id,\n            error: error,\n            status: {\n              main: mainStatus,\n              sub: state.options.labelTapToRetry\n            }\n          });\n        });\n        item.on('load-file-error', function (error) {\n          dispatch('DID_THROW_ITEM_INVALID', Object.assign({}, error, {\n            id: id\n          }));\n        });\n        item.on('load-abort', function () {\n          dispatch('REMOVE_ITEM', {\n            query: id\n          });\n        });\n        item.on('load-skip', function () {\n          dispatch('COMPLETE_LOAD_ITEM', {\n            query: id,\n            item: item,\n            data: {\n              source: source,\n              success: success\n            }\n          });\n        });\n        item.on('load', function () {\n          var handleAdd = function handleAdd(shouldAdd) {\n            // no should not add this file\n            if (!shouldAdd) {\n              dispatch('REMOVE_ITEM', {\n                query: id\n              });\n              return;\n            } // now interested in metadata updates\n\n\n            item.on('metadata-update', function (change) {\n              dispatch('DID_UPDATE_ITEM_METADATA', {\n                id: id,\n                change: change\n              });\n            }); // let plugins decide if the output data should be prepared at this point\n            // means we'll do this and wait for idle state\n\n            applyFilterChain('SHOULD_PREPARE_OUTPUT', false, {\n              item: item,\n              query: query\n            }).then(function (shouldPrepareOutput) {\n              var loadComplete = function loadComplete() {\n                dispatch('COMPLETE_LOAD_ITEM', {\n                  query: id,\n                  item: item,\n                  data: {\n                    source: source,\n                    success: success\n                  }\n                });\n                listUpdated(dispatch, state);\n              }; // exit\n\n\n              if (shouldPrepareOutput) {\n                // wait for idle state and then run PREPARE_OUTPUT\n                dispatch('REQUEST_PREPARE_OUTPUT', {\n                  query: id,\n                  item: item,\n                  ready: function ready(file) {\n                    dispatch('DID_PREPARE_OUTPUT', {\n                      id: id,\n                      file: file\n                    });\n                    loadComplete();\n                  }\n                }, true);\n                return;\n              }\n\n              loadComplete();\n            });\n          }; // item loaded, allow plugins to\n          // - read data (quickly)\n          // - add metadata\n\n\n          applyFilterChain('DID_LOAD_ITEM', item, {\n            query: query,\n            dispatch: dispatch\n          }).then(function () {\n            optionalPromise(query('GET_BEFORE_ADD_FILE'), createItemAPI(item)).then(handleAdd);\n          }).catch(function () {\n            handleAdd(false);\n          });\n        });\n        item.on('process-start', function () {\n          dispatch('DID_START_ITEM_PROCESSING', {\n            id: id\n          });\n        });\n        item.on('process-progress', function (progress) {\n          dispatch('DID_UPDATE_ITEM_PROCESS_PROGRESS', {\n            id: id,\n            progress: progress\n          });\n        });\n        item.on('process-error', function (error) {\n          dispatch('DID_THROW_ITEM_PROCESSING_ERROR', {\n            id: id,\n            error: error,\n            status: {\n              main: dynamicLabel(state.options.labelFileProcessingError)(error),\n              sub: state.options.labelTapToRetry\n            }\n          });\n        });\n        item.on('process-revert-error', function (error) {\n          dispatch('DID_THROW_ITEM_PROCESSING_REVERT_ERROR', {\n            id: id,\n            error: error,\n            status: {\n              main: dynamicLabel(state.options.labelFileProcessingRevertError)(error),\n              sub: state.options.labelTapToRetry\n            }\n          });\n        });\n        item.on('process-complete', function (serverFileReference) {\n          dispatch('DID_COMPLETE_ITEM_PROCESSING', {\n            id: id,\n            error: null,\n            serverFileReference: serverFileReference\n          });\n        });\n        item.on('process-abort', function () {\n          dispatch('DID_ABORT_ITEM_PROCESSING', {\n            id: id\n          });\n        });\n        item.on('process-revert', function () {\n          dispatch('DID_REVERT_ITEM_PROCESSING', {\n            id: id\n          });\n        }); // let view know the item has been inserted\n\n        dispatch('DID_ADD_ITEM', {\n          id: id,\n          index: index,\n          interactionMethod: interactionMethod\n        });\n        listUpdated(dispatch, state); // start loading the source\n\n        var _ref5 = state.options.server || {},\n            url = _ref5.url,\n            load = _ref5.load,\n            restore = _ref5.restore,\n            fetch = _ref5.fetch;\n\n        item.load(source, // this creates a function that loads the file based on the type of file (string, base64, blob, file) and location of file (local, remote, limbo)\n        createFileLoader(origin === FileOrigin$1.INPUT ? // input\n        isString(source) && isExternalURL(source) ? createFetchFunction(url, fetch) // remote url\n        : fetchLocal // local url\n        : // limbo or local\n        origin === FileOrigin$1.LIMBO ? createFetchFunction(url, restore) // limbo\n        : createFetchFunction(url, load) // local\n        ), // called when the file is loaded so it can be piped through the filters\n        function (file, success, error) {\n          // let's process the file\n          applyFilterChain('LOAD_FILE', file, {\n            query: query\n          }).then(success).catch(error);\n        });\n      },\n      REQUEST_PREPARE_OUTPUT: function REQUEST_PREPARE_OUTPUT(_ref6) {\n        var item = _ref6.item,\n            ready = _ref6.ready; // allow plugins to alter the file data\n\n        applyFilterChain('PREPARE_OUTPUT', item.file, {\n          query: query,\n          item: item\n        }).then(function (result) {\n          applyFilterChain('COMPLETE_PREPARE_OUTPUT', result, {\n            query: query,\n            item: item\n          }).then(function (result) {\n            ready(result);\n          });\n        });\n      },\n      COMPLETE_LOAD_ITEM: function COMPLETE_LOAD_ITEM(_ref7) {\n        var item = _ref7.item,\n            data = _ref7.data;\n        var success = data.success,\n            source = data.source; // let interface know the item has loaded\n\n        dispatch('DID_LOAD_ITEM', {\n          id: item.id,\n          error: null,\n          serverFileReference: item.origin === FileOrigin$1.INPUT ? null : source\n        }); // item has been successfully loaded and added to the\n        // list of items so can now be safely returned for use\n\n        success(createItemAPI(item)); // if this is a local server file we need to show a different state\n\n        if (item.origin === FileOrigin$1.LOCAL) {\n          dispatch('DID_LOAD_LOCAL_ITEM', {\n            id: item.id\n          });\n          return;\n        } // if is a temp server file we prevent async upload call here (as the file is already on the server)\n\n\n        if (item.origin === FileOrigin$1.LIMBO) {\n          dispatch('DID_COMPLETE_ITEM_PROCESSING', {\n            id: item.id,\n            error: null,\n            serverFileReference: source\n          });\n          return;\n        } // id we are allowed to upload the file immidiately, lets do it\n\n\n        if (query('IS_ASYNC') && state.options.instantUpload) {\n          dispatch('REQUEST_ITEM_PROCESSING', {\n            query: item.id\n          });\n        }\n      },\n      RETRY_ITEM_LOAD: getItemByQueryFromState(state, function (item) {\n        // try loading the source one more time\n        item.retryLoad();\n      }),\n      REQUEST_ITEM_PROCESSING: getItemByQueryFromState(state, function (item, success, failure) {\n        // cannot be queued (or is already queued)\n        var itemCanBeQueuedForProcessing = // waiting for something\n        item.status === ItemStatus.IDLE || // processing went wrong earlier\n        item.status === ItemStatus.PROCESSING_ERROR; // not ready to be processed\n\n        if (!itemCanBeQueuedForProcessing) {\n          var process = function process() {\n            setTimeout(function () {\n              dispatch('REQUEST_ITEM_PROCESSING', {\n                query: item,\n                success: success,\n                failure: failure\n              });\n            }, 32);\n          }; // if already done processing or tried to revert but didn't work, try again\n\n\n          if (item.status === ItemStatus.PROCESSING_COMPLETE || item.status === ItemStatus.PROCESSING_REVERT_ERROR) {\n            item.revert(createRevertFunction(state.options.server.url, state.options.server.revert), query('GET_FORCE_REVERT')).then(process).catch(function () {}); // don't continue with processing if something went wrong\n          } else if (item.status === ItemStatus.PROCESSING) {\n            item.abortProcessing().then(process);\n          }\n\n          return;\n        } // already queued for processing\n\n\n        if (item.status === ItemStatus.PROCESSING_QUEUED) return;\n        item.requestProcessing();\n        dispatch('DID_REQUEST_ITEM_PROCESSING', {\n          id: item.id\n        });\n        dispatch('PROCESS_ITEM', {\n          query: item,\n          success: success,\n          failure: failure\n        }, true);\n      }),\n      PROCESS_ITEM: getItemByQueryFromState(state, function (item, success, failure) {\n        var maxParallelUploads = query('GET_MAX_PARALLEL_UPLOADS');\n        var totalCurrentUploads = query('GET_ITEMS_BY_STATUS', ItemStatus.PROCESSING).length; // queue and wait till queue is freed up\n\n        if (totalCurrentUploads === maxParallelUploads) {\n          // queue for later processing\n          state.processingQueue.push({\n            item: item,\n            success: success,\n            failure: failure\n          }); // stop it!\n\n          return;\n        } // if was not queued or is already processing exit here\n\n\n        if (item.status === ItemStatus.PROCESSING) return; // we done function\n\n        item.onOnce('process-complete', function () {\n          // done!\n          success(createItemAPI(item)); // process queueud items\n\n          var queued = state.processingQueue.shift();\n          if (!queued) return;\n          dispatch('PROCESS_ITEM', {\n            query: queued.item,\n            success: queued.success,\n            failure: queued.failure\n          }, true);\n        }); // we error function\n\n        item.onOnce('process-error', function (error) {\n          failure({\n            error: error,\n            file: createItemAPI(item)\n          });\n        }); // start file processing\n\n        item.process(createFileProcessor(createProcessorFunction(state.options.server.url, state.options.server.process, state.options.name)), // called when the file is about to be processed so it can be piped through the transform filters\n        function (file, success, error) {\n          // allow plugins to alter the file data\n          applyFilterChain('PREPARE_OUTPUT', file, {\n            query: query,\n            item: item\n          }).then(function (file) {\n            dispatch('DID_PREPARE_OUTPUT', {\n              id: item.id,\n              file: file\n            });\n            success(file);\n          }).catch(error);\n        });\n      }),\n      RETRY_ITEM_PROCESSING: getItemByQueryFromState(state, function (item) {\n        dispatch('REQUEST_ITEM_PROCESSING', {\n          query: item\n        });\n      }),\n      REQUEST_REMOVE_ITEM: getItemByQueryFromState(state, function (item) {\n        optionalPromise(query('GET_BEFORE_REMOVE_FILE'), createItemAPI(item)).then(function (shouldRemove) {\n          if (!shouldRemove) {\n            return;\n          }\n\n          dispatch('REMOVE_ITEM', {\n            query: item\n          });\n        });\n      }),\n      RELEASE_ITEM: getItemByQueryFromState(state, function (item) {\n        item.release();\n      }),\n      REMOVE_ITEM: getItemByQueryFromState(state, function (item, success) {\n        var removeFromView = function removeFromView() {\n          // get id reference\n          var id = item.id; // archive the item, this does not remove it from the list\n\n          getItemById(state.items, id).archive(); // tell the view the item has been removed\n\n          dispatch('DID_REMOVE_ITEM', {\n            id: id,\n            item: item\n          }); // now the list has been modified\n\n          listUpdated(dispatch, state); // correctly removed\n\n          success(createItemAPI(item));\n        }; // if this is a local file and the server.remove function has been configured, send source there so dev can remove file from server\n\n\n        var server = state.options.server;\n\n        if (item.origin === FileOrigin$1.LOCAL && server && isFunction(server.remove)) {\n          dispatch('DID_START_ITEM_REMOVE', {\n            id: item.id\n          });\n          server.remove(item.source, function () {\n            return removeFromView();\n          }, function (status) {\n            dispatch('DID_THROW_ITEM_REMOVE_ERROR', {\n              id: item.id,\n              error: createResponse('error', 0, status, null),\n              status: {\n                main: dynamicLabel(state.options.labelFileRemoveError)(status),\n                sub: state.options.labelTapToRetry\n              }\n            });\n          });\n        } else {\n          removeFromView();\n        }\n      }),\n      ABORT_ITEM_LOAD: getItemByQueryFromState(state, function (item) {\n        item.abortLoad();\n      }),\n      ABORT_ITEM_PROCESSING: getItemByQueryFromState(state, function (item) {\n        // test if is already processed\n        if (item.serverId) {\n          dispatch('REVERT_ITEM_PROCESSING', {\n            id: item.id\n          });\n          return;\n        } // abort\n\n\n        item.abortProcessing().then(function () {\n          var shouldRemove = state.options.instantUpload;\n\n          if (shouldRemove) {\n            dispatch('REMOVE_ITEM', {\n              query: item.id\n            });\n          }\n        });\n      }),\n      REQUEST_REVERT_ITEM_PROCESSING: getItemByQueryFromState(state, function (item) {\n        // not instant uploading, revert immidiately\n        if (!state.options.instantUpload) {\n          dispatch('REVERT_ITEM_PROCESSING', {\n            query: item\n          });\n          return;\n        } // if we're instant uploading the file will also be removed if we revert,\n        // so if a before remove file hook is defined we need to run it now\n\n\n        var handleRevert = function handleRevert(shouldRevert) {\n          if (!shouldRevert) return;\n          dispatch('REVERT_ITEM_PROCESSING', {\n            query: item\n          });\n        };\n\n        var fn = query('GET_BEFORE_REMOVE_FILE');\n\n        if (!fn) {\n          return handleRevert(true);\n        }\n\n        var requestRemoveResult = fn(createItemAPI(item));\n\n        if (requestRemoveResult == null) {\n          // undefined or null\n          return handleRevert(true);\n        }\n\n        if (typeof requestRemoveResult === 'boolean') {\n          return handleRevert(requestRemoveResult);\n        }\n\n        if (typeof requestRemoveResult.then === 'function') {\n          requestRemoveResult.then(handleRevert);\n        }\n      }),\n      REVERT_ITEM_PROCESSING: getItemByQueryFromState(state, function (item) {\n        item.revert(createRevertFunction(state.options.server.url, state.options.server.revert), query('GET_FORCE_REVERT')).then(function () {\n          var shouldRemove = state.options.instantUpload || isMockItem(item);\n\n          if (shouldRemove) {\n            dispatch('REMOVE_ITEM', {\n              query: item.id\n            });\n          }\n        }).catch(function () {});\n      }),\n      SET_OPTIONS: function SET_OPTIONS(_ref8) {\n        var options = _ref8.options;\n        forin(options, function (key, value) {\n          dispatch('SET_' + fromCamels(key, '_').toUpperCase(), {\n            value: value\n          });\n        });\n      }\n    };\n  };\n\n  var formatFilename = function formatFilename(name) {\n    return name;\n  };\n\n  var createElement$1 = function createElement(tagName) {\n    return document.createElement(tagName);\n  };\n\n  var text = function text(node, value) {\n    var textNode = node.childNodes[0];\n\n    if (!textNode) {\n      textNode = document.createTextNode(value);\n      node.appendChild(textNode);\n    } else if (value !== textNode.nodeValue) {\n      textNode.nodeValue = value;\n    }\n  };\n\n  var polarToCartesian = function polarToCartesian(centerX, centerY, radius, angleInDegrees) {\n    var angleInRadians = (angleInDegrees % 360 - 90) * Math.PI / 180.0;\n    return {\n      x: centerX + radius * Math.cos(angleInRadians),\n      y: centerY + radius * Math.sin(angleInRadians)\n    };\n  };\n\n  var describeArc = function describeArc(x, y, radius, startAngle, endAngle, arcSweep) {\n    var start = polarToCartesian(x, y, radius, endAngle);\n    var end = polarToCartesian(x, y, radius, startAngle);\n    return ['M', start.x, start.y, 'A', radius, radius, 0, arcSweep, 0, end.x, end.y].join(' ');\n  };\n\n  var percentageArc = function percentageArc(x, y, radius, from, to) {\n    var arcSweep = 1;\n\n    if (to > from && to - from <= 0.5) {\n      arcSweep = 0;\n    }\n\n    if (from > to && from - to >= 0.5) {\n      arcSweep = 0;\n    }\n\n    return describeArc(x, y, radius, Math.min(0.9999, from) * 360, Math.min(0.9999, to) * 360, arcSweep);\n  };\n\n  var create$7 = function create(_ref) {\n    var root = _ref.root,\n        props = _ref.props; // start at 0\n\n    props.spin = false;\n    props.progress = 0;\n    props.opacity = 0; // svg\n\n    var svg = createElement('svg');\n    root.ref.path = createElement('path', {\n      'stroke-width': 2,\n      'stroke-linecap': 'round'\n    });\n    svg.appendChild(root.ref.path);\n    root.ref.svg = svg;\n    root.appendChild(svg);\n  };\n\n  var write$5 = function write(_ref2) {\n    var root = _ref2.root,\n        props = _ref2.props;\n\n    if (props.opacity === 0) {\n      return;\n    }\n\n    if (props.align) {\n      root.element.dataset.align = props.align;\n    } // get width of stroke\n\n\n    var ringStrokeWidth = parseInt(attr(root.ref.path, 'stroke-width'), 10); // calculate size of ring\n\n    var size = root.rect.element.width * 0.5; // ring state\n\n    var ringFrom = 0;\n    var ringTo = 0; // now in busy mode\n\n    if (props.spin) {\n      ringFrom = 0;\n      ringTo = 0.5;\n    } else {\n      ringFrom = 0;\n      ringTo = props.progress;\n    } // get arc path\n\n\n    var coordinates = percentageArc(size, size, size - ringStrokeWidth, ringFrom, ringTo); // update progress bar\n\n    attr(root.ref.path, 'd', coordinates); // hide while contains 0 value\n\n    attr(root.ref.path, 'stroke-opacity', props.spin || props.progress > 0 ? 1 : 0);\n  };\n\n  var progressIndicator = createView({\n    tag: 'div',\n    name: 'progress-indicator',\n    ignoreRectUpdate: true,\n    ignoreRect: true,\n    create: create$7,\n    write: write$5,\n    mixins: {\n      apis: ['progress', 'spin', 'align'],\n      styles: ['opacity'],\n      animations: {\n        opacity: {\n          type: 'tween',\n          duration: 500\n        },\n        progress: {\n          type: 'spring',\n          stiffness: 0.95,\n          damping: 0.65,\n          mass: 10\n        }\n      }\n    }\n  });\n\n  var create$8 = function create(_ref) {\n    var root = _ref.root,\n        props = _ref.props;\n    root.element.title = props.label;\n    root.element.innerHTML = props.icon || '';\n    props.disabled = false;\n  };\n\n  var write$6 = function write(_ref2) {\n    var root = _ref2.root,\n        props = _ref2.props;\n\n    if (props.opacity === 0 && !props.disabled) {\n      props.disabled = true;\n      attr(root.element, 'disabled', 'disabled');\n    } else if (props.opacity > 0 && props.disabled) {\n      props.disabled = false;\n      root.element.removeAttribute('disabled');\n    }\n  };\n\n  var fileActionButton = createView({\n    tag: 'button',\n    attributes: {\n      type: 'button'\n    },\n    ignoreRect: true,\n    ignoreRectUpdate: true,\n    name: 'file-action-button',\n    mixins: {\n      apis: ['label'],\n      styles: ['translateX', 'translateY', 'scaleX', 'scaleY', 'opacity'],\n      animations: {\n        scaleX: 'spring',\n        scaleY: 'spring',\n        translateX: 'spring',\n        translateY: 'spring',\n        opacity: {\n          type: 'tween',\n          duration: 250\n        }\n      },\n      listeners: true\n    },\n    create: create$8,\n    write: write$6\n  });\n\n  var toNaturalFileSize = function toNaturalFileSize(bytes) {\n    var decimalSeparator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '.'; // nope, no negative byte sizes\n\n    bytes = Math.round(Math.abs(bytes)); // just bytes\n\n    if (bytes < 1000) {\n      return bytes + ' bytes';\n    } // kilobytes\n\n\n    if (bytes < MB) {\n      return Math.floor(bytes / KB) + ' KB';\n    } // megabytes\n\n\n    if (bytes < GB) {\n      return removeDecimalsWhenZero(bytes / MB, 1, decimalSeparator) + ' MB';\n    } // gigabytes\n\n\n    return removeDecimalsWhenZero(bytes / GB, 2, decimalSeparator) + ' GB';\n  };\n\n  var KB = 1000;\n  var MB = 1000000;\n  var GB = 1000000000;\n\n  var removeDecimalsWhenZero = function removeDecimalsWhenZero(value, decimalCount, separator) {\n    return value.toFixed(decimalCount).split('.').filter(function (part) {\n      return part !== '0';\n    }).join(separator);\n  };\n\n  var create$9 = function create(_ref) {\n    var root = _ref.root,\n        props = _ref.props; // filename\n\n    var fileName = createElement$1('span');\n    fileName.className = 'filepond--file-info-main'; // hide for screenreaders\n    // the file is contained in a fieldset with legend that contains the filename\n    // no need to read it twice\n\n    attr(fileName, 'aria-hidden', 'true');\n    root.appendChild(fileName);\n    root.ref.fileName = fileName; // filesize\n\n    var fileSize = createElement$1('span');\n    fileSize.className = 'filepond--file-info-sub';\n    root.appendChild(fileSize);\n    root.ref.fileSize = fileSize; // set initial values\n\n    text(fileSize, root.query('GET_LABEL_FILE_WAITING_FOR_SIZE'));\n    text(fileName, formatFilename(root.query('GET_ITEM_NAME', props.id)));\n  };\n\n  var updateFile = function updateFile(_ref2) {\n    var root = _ref2.root,\n        props = _ref2.props;\n    text(root.ref.fileSize, toNaturalFileSize(root.query('GET_ITEM_SIZE', props.id)));\n    text(root.ref.fileName, formatFilename(root.query('GET_ITEM_NAME', props.id)));\n  };\n\n  var updateFileSizeOnError = function updateFileSizeOnError(_ref3) {\n    var root = _ref3.root,\n        props = _ref3.props; // if size is available don't fallback to unknown size message\n\n    if (isInt(root.query('GET_ITEM_SIZE', props.id))) {\n      return;\n    }\n\n    text(root.ref.fileSize, root.query('GET_LABEL_FILE_SIZE_NOT_AVAILABLE'));\n  };\n\n  var fileInfo = createView({\n    name: 'file-info',\n    ignoreRect: true,\n    ignoreRectUpdate: true,\n    write: createRoute({\n      DID_LOAD_ITEM: updateFile,\n      DID_UPDATE_ITEM_META: updateFile,\n      DID_THROW_ITEM_LOAD_ERROR: updateFileSizeOnError,\n      DID_THROW_ITEM_INVALID: updateFileSizeOnError\n    }),\n    didCreateView: function didCreateView(root) {\n      applyFilters('CREATE_VIEW', Object.assign({}, root, {\n        view: root\n      }));\n    },\n    create: create$9,\n    mixins: {\n      styles: ['translateX', 'translateY'],\n      animations: {\n        translateX: 'spring',\n        translateY: 'spring'\n      }\n    }\n  });\n\n  var toPercentage = function toPercentage(value) {\n    return Math.round(value * 100);\n  };\n\n  var create$10 = function create(_ref) {\n    var root = _ref.root; // main status\n\n    var main = createElement$1('span');\n    main.className = 'filepond--file-status-main';\n    root.appendChild(main);\n    root.ref.main = main; // sub status\n\n    var sub = createElement$1('span');\n    sub.className = 'filepond--file-status-sub';\n    root.appendChild(sub);\n    root.ref.sub = sub;\n    didSetItemLoadProgress({\n      root: root,\n      action: {\n        progress: null\n      }\n    });\n  };\n\n  var didSetItemLoadProgress = function didSetItemLoadProgress(_ref2) {\n    var root = _ref2.root,\n        action = _ref2.action;\n    var title = action.progress === null ? root.query('GET_LABEL_FILE_LOADING') : root.query('GET_LABEL_FILE_LOADING') + ' ' + toPercentage(action.progress) + '%';\n    text(root.ref.main, title);\n    text(root.ref.sub, root.query('GET_LABEL_TAP_TO_CANCEL'));\n  };\n\n  var didSetItemProcessProgress = function didSetItemProcessProgress(_ref3) {\n    var root = _ref3.root,\n        action = _ref3.action;\n    var title = action.progress === null ? root.query('GET_LABEL_FILE_PROCESSING') : root.query('GET_LABEL_FILE_PROCESSING') + ' ' + toPercentage(action.progress) + '%';\n    text(root.ref.main, title);\n    text(root.ref.sub, root.query('GET_LABEL_TAP_TO_CANCEL'));\n  };\n\n  var didRequestItemProcessing = function didRequestItemProcessing(_ref4) {\n    var root = _ref4.root;\n    text(root.ref.main, root.query('GET_LABEL_FILE_PROCESSING'));\n    text(root.ref.sub, root.query('GET_LABEL_TAP_TO_CANCEL'));\n  };\n\n  var didAbortItemProcessing = function didAbortItemProcessing(_ref5) {\n    var root = _ref5.root;\n    text(root.ref.main, root.query('GET_LABEL_FILE_PROCESSING_ABORTED'));\n    text(root.ref.sub, root.query('GET_LABEL_TAP_TO_RETRY'));\n  };\n\n  var didCompleteItemProcessing$1 = function didCompleteItemProcessing(_ref6) {\n    var root = _ref6.root;\n    text(root.ref.main, root.query('GET_LABEL_FILE_PROCESSING_COMPLETE'));\n    text(root.ref.sub, root.query('GET_LABEL_TAP_TO_UNDO'));\n  };\n\n  var clear = function clear(_ref7) {\n    var root = _ref7.root;\n    text(root.ref.main, '');\n    text(root.ref.sub, '');\n  };\n\n  var error = function error(_ref8) {\n    var root = _ref8.root,\n        action = _ref8.action;\n    text(root.ref.main, action.status.main);\n    text(root.ref.sub, action.status.sub);\n  };\n\n  var fileStatus = createView({\n    name: 'file-status',\n    ignoreRect: true,\n    ignoreRectUpdate: true,\n    write: createRoute({\n      DID_LOAD_ITEM: clear,\n      DID_REVERT_ITEM_PROCESSING: clear,\n      DID_REQUEST_ITEM_PROCESSING: didRequestItemProcessing,\n      DID_ABORT_ITEM_PROCESSING: didAbortItemProcessing,\n      DID_COMPLETE_ITEM_PROCESSING: didCompleteItemProcessing$1,\n      DID_UPDATE_ITEM_PROCESS_PROGRESS: didSetItemProcessProgress,\n      DID_UPDATE_ITEM_LOAD_PROGRESS: didSetItemLoadProgress,\n      DID_THROW_ITEM_LOAD_ERROR: error,\n      DID_THROW_ITEM_INVALID: error,\n      DID_THROW_ITEM_PROCESSING_ERROR: error,\n      DID_THROW_ITEM_PROCESSING_REVERT_ERROR: error,\n      DID_THROW_ITEM_REMOVE_ERROR: error\n    }),\n    didCreateView: function didCreateView(root) {\n      applyFilters('CREATE_VIEW', Object.assign({}, root, {\n        view: root\n      }));\n    },\n    create: create$10,\n    mixins: {\n      styles: ['translateX', 'translateY', 'opacity'],\n      animations: {\n        opacity: {\n          type: 'tween',\n          duration: 250\n        },\n        translateX: 'spring',\n        translateY: 'spring'\n      }\n    }\n  });\n  /**\n   * Button definitions for the file view\n   */\n\n  var Buttons = {\n    AbortItemLoad: {\n      label: 'GET_LABEL_BUTTON_ABORT_ITEM_LOAD',\n      action: 'ABORT_ITEM_LOAD',\n      className: 'filepond--action-abort-item-load',\n      align: 'LOAD_INDICATOR_POSITION' // right\n\n    },\n    RetryItemLoad: {\n      label: 'GET_LABEL_BUTTON_RETRY_ITEM_LOAD',\n      action: 'RETRY_ITEM_LOAD',\n      icon: 'GET_ICON_RETRY',\n      className: 'filepond--action-retry-item-load',\n      align: 'BUTTON_PROCESS_ITEM_POSITION' // right\n\n    },\n    RemoveItem: {\n      label: 'GET_LABEL_BUTTON_REMOVE_ITEM',\n      action: 'REQUEST_REMOVE_ITEM',\n      icon: 'GET_ICON_REMOVE',\n      className: 'filepond--action-remove-item',\n      align: 'BUTTON_REMOVE_ITEM_POSITION' // left\n\n    },\n    ProcessItem: {\n      label: 'GET_LABEL_BUTTON_PROCESS_ITEM',\n      action: 'REQUEST_ITEM_PROCESSING',\n      icon: 'GET_ICON_PROCESS',\n      className: 'filepond--action-process-item',\n      align: 'BUTTON_PROCESS_ITEM_POSITION' // right\n\n    },\n    AbortItemProcessing: {\n      label: 'GET_LABEL_BUTTON_ABORT_ITEM_PROCESSING',\n      action: 'ABORT_ITEM_PROCESSING',\n      className: 'filepond--action-abort-item-processing',\n      align: 'BUTTON_PROCESS_ITEM_POSITION' // right\n\n    },\n    RetryItemProcessing: {\n      label: 'GET_LABEL_BUTTON_RETRY_ITEM_PROCESSING',\n      action: 'RETRY_ITEM_PROCESSING',\n      icon: 'GET_ICON_RETRY',\n      className: 'filepond--action-retry-item-processing',\n      align: 'BUTTON_PROCESS_ITEM_POSITION' // right\n\n    },\n    RevertItemProcessing: {\n      label: 'GET_LABEL_BUTTON_UNDO_ITEM_PROCESSING',\n      action: 'REQUEST_REVERT_ITEM_PROCESSING',\n      icon: 'GET_ICON_UNDO',\n      className: 'filepond--action-revert-item-processing',\n      align: 'BUTTON_PROCESS_ITEM_POSITION' // right\n\n    }\n  }; // make a list of buttons, we can then remove buttons from this list if they're disabled\n\n  var ButtonKeys = [];\n  forin(Buttons, function (key) {\n    ButtonKeys.push(key);\n  });\n\n  var calculateFileInfoOffset = function calculateFileInfoOffset(root) {\n    return root.ref.buttonRemoveItem.rect.element.width + root.ref.buttonRemoveItem.rect.element.left;\n  }; // Force on full pixels so text stays crips\n\n\n  var calculateFileVerticalCenterOffset = function calculateFileVerticalCenterOffset(root) {\n    return Math.floor(root.ref.buttonRemoveItem.rect.element.height / 4);\n  };\n\n  var calculateFileHorizontalCenterOffset = function calculateFileHorizontalCenterOffset(root) {\n    return Math.floor(root.ref.buttonRemoveItem.rect.element.left / 2);\n  };\n\n  var getLoadIndicatorAlignment = function getLoadIndicatorAlignment(root) {\n    return root.query('GET_STYLE_LOAD_INDICATOR_POSITION');\n  };\n\n  var getProcessIndicatorAlignment = function getProcessIndicatorAlignment(root) {\n    return root.query('GET_STYLE_PROGRESS_INDICATOR_POSITION');\n  };\n\n  var getRemoveIndicatorAligment = function getRemoveIndicatorAligment(root) {\n    return root.query('GET_STYLE_BUTTON_REMOVE_ITEM_POSITION');\n  };\n\n  var DefaultStyle = {\n    buttonAbortItemLoad: {\n      opacity: 0\n    },\n    buttonRetryItemLoad: {\n      opacity: 0\n    },\n    buttonRemoveItem: {\n      opacity: 0\n    },\n    buttonProcessItem: {\n      opacity: 0\n    },\n    buttonAbortItemProcessing: {\n      opacity: 0\n    },\n    buttonRetryItemProcessing: {\n      opacity: 0\n    },\n    buttonRevertItemProcessing: {\n      opacity: 0\n    },\n    loadProgressIndicator: {\n      opacity: 0,\n      align: getLoadIndicatorAlignment\n    },\n    processProgressIndicator: {\n      opacity: 0,\n      align: getProcessIndicatorAlignment\n    },\n    processingCompleteIndicator: {\n      opacity: 0,\n      scaleX: 0.75,\n      scaleY: 0.75\n    },\n    info: {\n      translateX: 0,\n      translateY: 0,\n      opacity: 0\n    },\n    status: {\n      translateX: 0,\n      translateY: 0,\n      opacity: 0\n    }\n  };\n  var IdleStyle = {\n    buttonRemoveItem: {\n      opacity: 1\n    },\n    buttonProcessItem: {\n      opacity: 1\n    },\n    info: {\n      translateX: calculateFileInfoOffset\n    },\n    status: {\n      translateX: calculateFileInfoOffset\n    }\n  };\n  var ProcessingStyle = {\n    buttonAbortItemProcessing: {\n      opacity: 1\n    },\n    processProgressIndicator: {\n      opacity: 1\n    },\n    status: {\n      opacity: 1\n    }\n  };\n  var StyleMap = {\n    DID_THROW_ITEM_INVALID: {\n      buttonRemoveItem: {\n        opacity: 1\n      },\n      info: {\n        translateX: calculateFileInfoOffset\n      },\n      status: {\n        translateX: calculateFileInfoOffset,\n        opacity: 1\n      }\n    },\n    DID_START_ITEM_LOAD: {\n      buttonAbortItemLoad: {\n        opacity: 1\n      },\n      loadProgressIndicator: {\n        opacity: 1\n      },\n      status: {\n        opacity: 1\n      }\n    },\n    DID_THROW_ITEM_LOAD_ERROR: {\n      buttonRetryItemLoad: {\n        opacity: 1\n      },\n      buttonRemoveItem: {\n        opacity: 1\n      },\n      info: {\n        translateX: calculateFileInfoOffset\n      },\n      status: {\n        opacity: 1\n      }\n    },\n    DID_START_ITEM_REMOVE: {\n      processProgressIndicator: {\n        opacity: 1,\n        align: getRemoveIndicatorAligment\n      },\n      info: {\n        translateX: calculateFileInfoOffset\n      },\n      status: {\n        opacity: 0\n      }\n    },\n    DID_THROW_ITEM_REMOVE_ERROR: {\n      processProgressIndicator: {\n        opacity: 0,\n        align: getRemoveIndicatorAligment\n      },\n      buttonRemoveItem: {\n        opacity: 1\n      },\n      info: {\n        translateX: calculateFileInfoOffset\n      },\n      status: {\n        opacity: 1,\n        translateX: calculateFileInfoOffset\n      }\n    },\n    DID_LOAD_ITEM: IdleStyle,\n    DID_LOAD_LOCAL_ITEM: {\n      buttonRemoveItem: {\n        opacity: 1\n      },\n      info: {\n        translateX: calculateFileInfoOffset\n      },\n      status: {\n        translateX: calculateFileInfoOffset\n      }\n    },\n    DID_START_ITEM_PROCESSING: ProcessingStyle,\n    DID_REQUEST_ITEM_PROCESSING: ProcessingStyle,\n    DID_UPDATE_ITEM_PROCESS_PROGRESS: ProcessingStyle,\n    DID_COMPLETE_ITEM_PROCESSING: {\n      buttonRevertItemProcessing: {\n        opacity: 1\n      },\n      info: {\n        opacity: 1\n      },\n      status: {\n        opacity: 1\n      }\n    },\n    DID_THROW_ITEM_PROCESSING_ERROR: {\n      buttonRemoveItem: {\n        opacity: 1\n      },\n      buttonRetryItemProcessing: {\n        opacity: 1\n      },\n      status: {\n        opacity: 1\n      },\n      info: {\n        translateX: calculateFileInfoOffset\n      }\n    },\n    DID_THROW_ITEM_PROCESSING_REVERT_ERROR: {\n      buttonRevertItemProcessing: {\n        opacity: 1\n      },\n      status: {\n        opacity: 1\n      },\n      info: {\n        opacity: 1\n      }\n    },\n    DID_ABORT_ITEM_PROCESSING: {\n      buttonRemoveItem: {\n        opacity: 1\n      },\n      buttonProcessItem: {\n        opacity: 1\n      },\n      info: {\n        translateX: calculateFileInfoOffset\n      },\n      status: {\n        opacity: 1\n      }\n    },\n    DID_REVERT_ITEM_PROCESSING: IdleStyle\n  }; // complete indicator view\n\n  var processingCompleteIndicatorView = createView({\n    create: function create(_ref) {\n      var root = _ref.root;\n      root.element.innerHTML = root.query('GET_ICON_DONE');\n    },\n    name: 'processing-complete-indicator',\n    ignoreRect: true,\n    mixins: {\n      styles: ['scaleX', 'scaleY', 'opacity'],\n      animations: {\n        scaleX: 'spring',\n        scaleY: 'spring',\n        opacity: {\n          type: 'tween',\n          duration: 250\n        }\n      }\n    }\n  });\n  /**\n   * Creates the file view\n   */\n\n  var create$6 = function create(_ref2) {\n    var root = _ref2.root,\n        props = _ref2.props;\n    var id = props.id; // allow reverting upload\n\n    var allowRevert = root.query('GET_ALLOW_REVERT'); // is instant uploading, need this to determine the icon of the undo button\n\n    var instantUpload = root.query('GET_INSTANT_UPLOAD'); // is async set up\n\n    var isAsync = root.query('IS_ASYNC'); // enabled buttons array\n\n    var enabledButtons = isAsync ? ButtonKeys.concat() : ButtonKeys.filter(function (key) {\n      return !/Process/.test(key);\n    }); // remove last button (revert) if not allowed\n\n    if (isAsync && !allowRevert) {\n      enabledButtons.splice(-1, 1);\n      var map = StyleMap['DID_COMPLETE_ITEM_PROCESSING'];\n      map.info.translateX = calculateFileHorizontalCenterOffset;\n      map.info.translateY = calculateFileVerticalCenterOffset;\n      map.status.translateY = calculateFileVerticalCenterOffset;\n      map.processingCompleteIndicator = {\n        opacity: 1,\n        scaleX: 1,\n        scaleY: 1\n      };\n    } // update icon and label for revert button when instant uploading\n\n\n    if (instantUpload && allowRevert) {\n      Buttons['RevertItemProcessing'].label = 'GET_LABEL_BUTTON_REMOVE_ITEM';\n      Buttons['RevertItemProcessing'].icon = 'GET_ICON_REMOVE';\n    } // create the button views\n\n\n    forin(Buttons, function (key, definition) {\n      // create button\n      var buttonView = root.createChildView(fileActionButton, {\n        label: root.query(definition.label),\n        icon: root.query(definition.icon),\n        opacity: 0\n      }); // should be appended?\n\n      if (enabledButtons.includes(key)) {\n        root.appendChildView(buttonView);\n      } // add position attribute\n\n\n      buttonView.element.dataset.align = root.query('GET_STYLE_' + definition.align); // add class\n\n      buttonView.element.classList.add(definition.className); // handle interactions\n\n      buttonView.on('click', function () {\n        root.dispatch(definition.action, {\n          query: id\n        });\n      }); // set reference\n\n      root.ref['button' + key] = buttonView;\n    }); // create file info view\n\n    root.ref.info = root.appendChildView(root.createChildView(fileInfo, {\n      id: id\n    })); // create file status view\n\n    root.ref.status = root.appendChildView(root.createChildView(fileStatus, {\n      id: id\n    })); // checkmark\n\n    root.ref.processingCompleteIndicator = root.appendChildView(root.createChildView(processingCompleteIndicatorView));\n    root.ref.processingCompleteIndicator.element.dataset.align = root.query('GET_STYLE_BUTTON_PROCESS_ITEM_POSITION'); // add progress indicators\n\n    var loadIndicatorView = root.appendChildView(root.createChildView(progressIndicator, {\n      opacity: 0,\n      align: root.query('GET_STYLE_LOAD_INDICATOR_POSITION')\n    }));\n    loadIndicatorView.element.classList.add('filepond--load-indicator');\n    root.ref.loadProgressIndicator = loadIndicatorView;\n    var progressIndicatorView = root.appendChildView(root.createChildView(progressIndicator, {\n      opacity: 0,\n      align: root.query('GET_STYLE_PROGRESS_INDICATOR_POSITION')\n    }));\n    progressIndicatorView.element.classList.add('filepond--process-indicator');\n    root.ref.processProgressIndicator = progressIndicatorView;\n  };\n\n  var write$4 = function write(_ref3) {\n    var root = _ref3.root,\n        actions = _ref3.actions,\n        props = _ref3.props; // route actions\n\n    route$3({\n      root: root,\n      actions: actions,\n      props: props\n    }); // select last state change action\n\n    var action = [].concat(toConsumableArray(actions)).filter(function (action) {\n      return /^DID_/.test(action.type);\n    }).reverse().find(function (action) {\n      return StyleMap[action.type];\n    }); // no need to set same state twice\n\n    if (!action || action && action.type === root.ref.currentAction) {\n      return;\n    } // set current state\n\n\n    root.ref.currentAction = action.type;\n    var newStyles = StyleMap[root.ref.currentAction];\n    forin(DefaultStyle, function (name, defaultStyles) {\n      // get reference to control\n      var control = root.ref[name]; // loop over all styles for this control\n\n      forin(defaultStyles, function (key, defaultValue) {\n        var value = newStyles[name] && typeof newStyles[name][key] !== 'undefined' ? newStyles[name][key] : defaultValue;\n        control[key] = typeof value === 'function' ? value(root) : value;\n      });\n    });\n  };\n\n  var route$3 = createRoute({\n    DID_SET_LABEL_BUTTON_ABORT_ITEM_PROCESSING: function DID_SET_LABEL_BUTTON_ABORT_ITEM_PROCESSING(_ref4) {\n      var root = _ref4.root,\n          action = _ref4.action;\n      root.ref.buttonAbortItemProcessing.label = action.value;\n    },\n    DID_SET_LABEL_BUTTON_ABORT_ITEM_LOAD: function DID_SET_LABEL_BUTTON_ABORT_ITEM_LOAD(_ref5) {\n      var root = _ref5.root,\n          action = _ref5.action;\n      root.ref.buttonAbortItemLoad.label = action.value;\n    },\n    DID_SET_LABEL_BUTTON_ABORT_ITEM_REMOVAL: function DID_SET_LABEL_BUTTON_ABORT_ITEM_REMOVAL(_ref6) {\n      var root = _ref6.root,\n          action = _ref6.action;\n      root.ref.buttonAbortItemRemoval.label = action.value;\n    },\n    DID_REQUEST_ITEM_PROCESSING: function DID_REQUEST_ITEM_PROCESSING(_ref7) {\n      var root = _ref7.root;\n      root.ref.processProgressIndicator.spin = true;\n      root.ref.processProgressIndicator.progress = 0;\n    },\n    DID_START_ITEM_LOAD: function DID_START_ITEM_LOAD(_ref8) {\n      var root = _ref8.root;\n      root.ref.loadProgressIndicator.spin = true;\n      root.ref.loadProgressIndicator.progress = 0;\n    },\n    DID_START_ITEM_REMOVE: function DID_START_ITEM_REMOVE(_ref9) {\n      var root = _ref9.root;\n      root.ref.processProgressIndicator.spin = true;\n      root.ref.processProgressIndicator.progress = 0;\n    },\n    DID_UPDATE_ITEM_LOAD_PROGRESS: function DID_UPDATE_ITEM_LOAD_PROGRESS(_ref10) {\n      var root = _ref10.root,\n          action = _ref10.action;\n      root.ref.loadProgressIndicator.spin = false;\n      root.ref.loadProgressIndicator.progress = action.progress;\n    },\n    DID_UPDATE_ITEM_PROCESS_PROGRESS: function DID_UPDATE_ITEM_PROCESS_PROGRESS(_ref11) {\n      var root = _ref11.root,\n          action = _ref11.action;\n      root.ref.processProgressIndicator.spin = false;\n      root.ref.processProgressIndicator.progress = action.progress;\n    }\n  });\n  var file = createView({\n    create: create$6,\n    write: write$4,\n    didCreateView: function didCreateView(root) {\n      applyFilters('CREATE_VIEW', Object.assign({}, root, {\n        view: root\n      }));\n    },\n    name: 'file'\n  });\n  /**\n   * Creates the file view\n   */\n\n  var create$5 = function create(_ref) {\n    var root = _ref.root,\n        props = _ref.props; // filename\n\n    root.ref.fileName = createElement$1('legend');\n    root.appendChild(root.ref.fileName); // file view\n\n    root.ref.file = root.appendChildView(root.createChildView(file, {\n      id: props.id\n    })); // create data container\n\n    var dataContainer = createElement$1('input');\n    dataContainer.type = 'hidden';\n    dataContainer.name = root.query('GET_NAME');\n    root.ref.data = dataContainer;\n    root.appendChild(dataContainer);\n  };\n  /**\n   * Data storage\n   */\n\n\n  var didLoadItem = function didLoadItem(_ref2) {\n    var root = _ref2.root,\n        action = _ref2.action,\n        props = _ref2.props;\n    root.ref.data.value = action.serverFileReference; // updates the legend of the fieldset so screenreaders can better group buttons\n\n    text(root.ref.fileName, formatFilename(root.query('GET_ITEM_NAME', props.id)));\n  };\n\n  var didRemoveItem = function didRemoveItem(_ref3) {\n    var root = _ref3.root;\n    root.ref.data.removeAttribute('value');\n  };\n\n  var didCompleteItemProcessing = function didCompleteItemProcessing(_ref4) {\n    var root = _ref4.root,\n        action = _ref4.action;\n    root.ref.data.value = action.serverFileReference;\n  };\n\n  var didRevertItemProcessing = function didRevertItemProcessing(_ref5) {\n    var root = _ref5.root;\n    root.ref.data.removeAttribute('value');\n  };\n\n  var fileWrapper = createView({\n    create: create$5,\n    ignoreRect: true,\n    write: createRoute({\n      DID_LOAD_ITEM: didLoadItem,\n      DID_REMOVE_ITEM: didRemoveItem,\n      DID_COMPLETE_ITEM_PROCESSING: didCompleteItemProcessing,\n      DID_REVERT_ITEM_PROCESSING: didRevertItemProcessing\n    }),\n    didCreateView: function didCreateView(root) {\n      applyFilters('CREATE_VIEW', Object.assign({}, root, {\n        view: root\n      }));\n    },\n    tag: 'fieldset',\n    name: 'file-wrapper'\n  });\n  var PANEL_SPRING_PROPS = {\n    type: 'spring',\n    damping: 0.6,\n    mass: 7\n  };\n\n  var create$11 = function create(_ref) {\n    var root = _ref.root,\n        props = _ref.props;\n    [{\n      name: 'top'\n    }, {\n      name: 'center',\n      props: {\n        translateY: null,\n        scaleY: null\n      },\n      mixins: {\n        animations: {\n          scaleY: PANEL_SPRING_PROPS\n        },\n        styles: ['translateY', 'scaleY']\n      }\n    }, {\n      name: 'bottom',\n      props: {\n        translateY: null\n      },\n      mixins: {\n        animations: {\n          translateY: PANEL_SPRING_PROPS\n        },\n        styles: ['translateY']\n      }\n    }].forEach(function (section) {\n      createSection(root, section, props.name);\n    });\n    root.element.classList.add('filepond--' + props.name);\n    root.ref.scalable = null;\n  };\n\n  var createSection = function createSection(root, section, className) {\n    var viewConstructor = createView({\n      name: 'panel-' + section.name + ' filepond--' + className,\n      mixins: section.mixins,\n      ignoreRectUpdate: true\n    });\n    var view = root.createChildView(viewConstructor, section.props);\n    root.ref[section.name] = root.appendChildView(view);\n  };\n\n  var write$7 = function write(_ref2) {\n    var root = _ref2.root,\n        props = _ref2.props; // update scalable state\n\n    if (root.ref.scalable === null || props.scalable !== root.ref.scalable) {\n      root.ref.scalable = isBoolean(props.scalable) ? props.scalable : true;\n      root.element.dataset.scalable = root.ref.scalable;\n    } // no height, can't set\n\n\n    if (!props.height) {\n      return;\n    } // get child rects\n\n\n    var topRect = root.ref.top.rect.element;\n    var bottomRect = root.ref.bottom.rect.element; // make sure height never is smaller than bottom and top seciton heights combined (will probably never happen, but who knows)\n\n    var height = Math.max(topRect.height + bottomRect.height, props.height); // offset center part\n\n    root.ref.center.translateY = topRect.height; // scale center part\n    // use math ceil to prevent transparent lines because of rounding errors\n\n    root.ref.center.scaleY = (height - topRect.height - bottomRect.height) / 100; // offset bottom part\n\n    root.ref.bottom.translateY = height - bottomRect.height;\n  };\n\n  var panel = createView({\n    name: 'panel',\n    write: write$7,\n    create: create$11,\n    ignoreRect: true,\n    mixins: {\n      apis: ['height', 'scalable']\n    }\n  });\n  /**\n   * Creates the file view\n   */\n\n  var create$4 = function create(_ref) {\n    var root = _ref.root,\n        props = _ref.props; // file view\n\n    root.ref.controls = root.appendChildView(root.createChildView(fileWrapper, {\n      id: props.id\n    })); // file panel\n\n    root.ref.panel = root.appendChildView(root.createChildView(panel, {\n      name: 'item-panel'\n    })); // default start height\n\n    root.ref.panel.height = 0; // by default not marked for removal\n\n    props.markedForRemoval = false;\n  };\n\n  var StateMap = {\n    DID_START_ITEM_LOAD: 'busy',\n    DID_UPDATE_ITEM_LOAD_PROGRESS: 'loading',\n    DID_THROW_ITEM_INVALID: 'load-invalid',\n    DID_THROW_ITEM_LOAD_ERROR: 'load-error',\n    DID_LOAD_ITEM: 'idle',\n    DID_THROW_ITEM_REMOVE_ERROR: 'remove-error',\n    DID_START_ITEM_REMOVE: 'busy',\n    DID_START_ITEM_PROCESSING: 'busy',\n    DID_REQUEST_ITEM_PROCESSING: 'busy',\n    DID_UPDATE_ITEM_PROCESS_PROGRESS: 'processing',\n    DID_COMPLETE_ITEM_PROCESSING: 'processing-complete',\n    DID_THROW_ITEM_PROCESSING_ERROR: 'processing-error',\n    DID_THROW_ITEM_PROCESSING_REVERT_ERROR: 'processing-revert-error',\n    DID_ABORT_ITEM_PROCESSING: 'cancelled',\n    DID_REVERT_ITEM_PROCESSING: 'idle'\n  };\n\n  var write$3 = function write(_ref2) {\n    var root = _ref2.root,\n        actions = _ref2.actions,\n        props = _ref2.props; // update panel height\n\n    root.ref.panel.height = root.ref.controls.rect.inner.height; // set own height\n\n    var aspectRatio = root.query('GET_PANEL_ASPECT_RATIO');\n    var allowMultiple = root.query('GET_ALLOW_MULTIPLE');\n\n    if (aspectRatio && !allowMultiple) {\n      root.height = root.rect.element.width * aspectRatio;\n    } else {\n      root.height = root.ref.controls.rect.inner.height;\n    } // select last state change action\n\n\n    var action = [].concat(toConsumableArray(actions)).filter(function (action) {\n      return /^DID_/.test(action.type);\n    }).reverse().find(function (action) {\n      return StateMap[action.type];\n    }); // no need to set same state twice\n\n    if (!action || action && action.type === props.currentState) {\n      return;\n    } // set current state\n\n\n    props.currentState = action.type; // set state\n\n    root.element.dataset.filepondItemState = StateMap[props.currentState] || '';\n  };\n\n  var item = createView({\n    create: create$4,\n    write: write$3,\n    destroy: function destroy(_ref3) {\n      var root = _ref3.root,\n          props = _ref3.props;\n      root.dispatch('RELEASE_ITEM', {\n        query: props.id\n      });\n    },\n    tag: 'li',\n    name: 'item',\n    mixins: {\n      apis: ['id', 'markedForRemoval'],\n      styles: ['translateX', 'translateY', 'scaleX', 'scaleY', 'opacity', 'height'],\n      animations: {\n        scaleX: 'spring',\n        scaleY: 'spring',\n        translateX: 'spring',\n        translateY: 'spring',\n        opacity: {\n          type: 'tween',\n          duration: 150\n        }\n      }\n    }\n  });\n\n  var create$3 = function create(_ref) {\n    var root = _ref.root; // need to set role to list as otherwise it won't be read as a list by VoiceOver\n\n    attr(root.element, 'role', 'list');\n  };\n  /**\n   * Inserts a new item\n   * @param root\n   * @param action\n   */\n\n\n  var addItemView = function addItemView(_ref2) {\n    var root = _ref2.root,\n        action = _ref2.action;\n    var id = action.id,\n        index = action.index,\n        interactionMethod = action.interactionMethod;\n    var animation = {\n      opacity: 0\n    };\n\n    if (interactionMethod === InteractionMethod.NONE) {\n      animation.translateY = null;\n    }\n\n    if (interactionMethod === InteractionMethod.DROP) {\n      animation.scaleX = 0.8;\n      animation.scaleY = 0.8;\n      animation.translateY = null;\n    }\n\n    if (interactionMethod === InteractionMethod.BROWSE) {\n      animation.translateY = -30;\n    }\n\n    if (interactionMethod === InteractionMethod.API) {\n      animation.translateX = -100;\n      animation.translateY = null;\n    }\n\n    root.appendChildView(root.createChildView( // view type\n    item, // props\n    Object.assign({\n      id: id\n    }, animation)), index);\n  };\n  /**\n   * Removes an existing item\n   * @param root\n   * @param action\n   */\n\n\n  var removeItemView = function removeItemView(_ref3) {\n    var root = _ref3.root,\n        action = _ref3.action;\n    var id = action.id; // get the view matching the given id\n\n    var view = root.childViews.find(function (child) {\n      return child.id === id;\n    }); // if no view found, exit\n\n    if (!view) {\n      return;\n    } // animate view out of view\n\n\n    view.scaleX = 0.9;\n    view.scaleY = 0.9;\n    view.opacity = 0; // mark for removal\n\n    view.markedForRemoval = true;\n  };\n  /**\n   * Setup action routes\n   */\n\n\n  var route$2 = createRoute({\n    DID_ADD_ITEM: addItemView,\n    DID_REMOVE_ITEM: removeItemView\n  });\n\n  var dragTranslation = function dragTranslation(childIndex, dragIndex, itemMargin) {\n    if (childIndex - 1 === dragIndex) {\n      return itemMargin / 6;\n    }\n\n    if (childIndex === dragIndex) {\n      return itemMargin / 2;\n    }\n\n    if (childIndex + 1 === dragIndex) {\n      return -itemMargin / 2;\n    }\n\n    if (childIndex + 2 === dragIndex) {\n      return -itemMargin / 6;\n    }\n\n    return 0;\n  };\n\n  var easeOutCirc = function easeOutCirc(t) {\n    var t1 = t - 1;\n    return Math.sqrt(1 - t1 * t1);\n  };\n\n  var read = function read(_ref4) {\n    var root = _ref4.root;\n    var total = 0;\n    root.childViews.filter(function (child) {\n      return child.rect.outer.height;\n    }).forEach(function (child) {\n      var height = child.rect.element.height + child.rect.element.marginBottom;\n      total += child.markedForRemoval ? height * easeOutCirc(child.opacity) : height;\n    });\n    root.rect.outer.height = total;\n    root.rect.outer.bottom = root.rect.outer.height;\n  };\n  /**\n   * Write to view\n   * @param root\n   * @param actions\n   * @param props\n   */\n\n\n  var write$2 = function write(_ref5) {\n    var root = _ref5.root,\n        props = _ref5.props,\n        actions = _ref5.actions; // route actions\n\n    route$2({\n      root: root,\n      props: props,\n      actions: actions\n    });\n    var resting = true; // update item positions\n\n    var offset = 0;\n    root.childViews.filter(function (child) {\n      return child.rect.outer.height;\n    }).forEach(function (child, childIndex) {\n      var childRect = child.rect; // set this child offset\n\n      child.translateX = 0;\n      child.translateY = offset + (props.dragIndex > -1 ? dragTranslation(childIndex, props.dragIndex, 10) : 0); // show child if it's not marked for removal\n\n      if (!child.markedForRemoval) {\n        child.scaleX = 1;\n        child.scaleY = 1;\n        child.opacity = 1;\n      }\n\n      var itemHeight = childRect.element.height + childRect.element.marginTop + childRect.element.marginBottom;\n      var height = child.markedForRemoval ? itemHeight * child.opacity : itemHeight; // calculate next child offset (reduce height by y scale for views that are being removed)\n\n      offset += height;\n    });\n    return resting;\n  };\n  /**\n   * Filters actions that are meant specifically for a certain child of the list\n   * @param child\n   * @param actions\n   */\n\n\n  var filterSetItemActions = function filterSetItemActions(child, actions) {\n    return actions.filter(function (action) {\n      // if action has an id, filter out actions that don't have this child id\n      if (action.data && action.data.id) {\n        return child.id === action.data.id;\n      } // allow all other actions\n\n\n      return true;\n    });\n  };\n\n  var list = createView({\n    create: create$3,\n    write: write$2,\n    read: read,\n    tag: 'ul',\n    name: 'list',\n    didWriteView: function didWriteView(_ref6) {\n      var root = _ref6.root;\n      root.childViews.filter(function (view) {\n        return view.markedForRemoval && view.opacity === 0 && view.resting;\n      }).forEach(function (view) {\n        view._destroy();\n\n        root.removeChildView(view);\n      });\n    },\n    filterFrameActionsForChild: filterSetItemActions,\n    mixins: {\n      apis: ['dragIndex']\n    }\n  });\n\n  var getItemIndexByPosition = function getItemIndexByPosition(view, positionInView) {\n    var i = 0;\n    var childViews = view.childViews;\n    var l = childViews.length;\n\n    for (; i < l; i++) {\n      var item = childViews[i];\n      var itemRect = item.rect.outer;\n      var itemRectMid = itemRect.top + itemRect.height * 0.5;\n\n      if (positionInView.top < itemRectMid) {\n        return i;\n      }\n    }\n\n    return l;\n  };\n\n  var create$2 = function create(_ref) {\n    var root = _ref.root,\n        props = _ref.props;\n    root.ref.list = root.appendChildView(root.createChildView(list));\n    props.dragCoordinates = null;\n    props.overflowing = false;\n  };\n\n  var storeDragCoordinates = function storeDragCoordinates(_ref2) {\n    var root = _ref2.root,\n        props = _ref2.props,\n        action = _ref2.action;\n    props.dragCoordinates = {\n      left: action.position.scopeLeft,\n      top: action.position.scopeTop - root.rect.outer.top + root.rect.element.scrollTop\n    };\n  };\n\n  var clearDragCoordinates = function clearDragCoordinates(_ref3) {\n    var props = _ref3.props;\n    props.dragCoordinates = null;\n  };\n\n  var route$1 = createRoute({\n    DID_DRAG: storeDragCoordinates,\n    DID_END_DRAG: clearDragCoordinates\n  });\n\n  var write$1 = function write(_ref4) {\n    var root = _ref4.root,\n        props = _ref4.props,\n        actions = _ref4.actions; // route actions\n\n    route$1({\n      root: root,\n      props: props,\n      actions: actions\n    }); // current drag position\n\n    root.ref.list.dragIndex = props.dragCoordinates ? getItemIndexByPosition(root.ref.list, props.dragCoordinates) : -1; // if currently overflowing but no longer received overflow\n\n    if (props.overflowing && !props.overflow) {\n      props.overflowing = false; // reset overflow state\n\n      root.element.dataset.state = '';\n      root.height = null;\n    } // if is not overflowing currently but does receive overflow value\n    // !props.overflowing &&\n\n\n    if (props.overflow) {\n      var newHeight = Math.round(props.overflow);\n\n      if (newHeight !== root.height) {\n        props.overflowing = true;\n        root.element.dataset.state = 'overflow';\n        root.height = newHeight;\n      }\n    }\n  };\n\n  var listScroller = createView({\n    create: create$2,\n    write: write$1,\n    name: 'list-scroller',\n    mixins: {\n      apis: ['overflow'],\n      styles: ['height', 'translateY'],\n      animations: {\n        translateY: 'spring'\n      }\n    }\n  });\n\n  var attrToggle = function attrToggle(element, name, state) {\n    var enabledValue = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';\n\n    if (state) {\n      attr(element, name, enabledValue);\n    } else {\n      element.removeAttribute(name);\n    }\n  };\n\n  var resetFileInput = function resetFileInput(input) {\n    // no value, no need to reset\n    if (!input || input.value === '') {\n      return;\n    }\n\n    try {\n      // for modern browsers\n      input.value = '';\n    } catch (err) {} // for IE10\n\n\n    if (input.value) {\n      // quickly append input to temp form and reset form\n      var form = createElement$1('form');\n      var parentNode = input.parentNode;\n      var ref = input.nextSibling;\n      form.appendChild(input);\n      form.reset(); // re-inject input where it originally was\n\n      if (ref) {\n        parentNode.insertBefore(input, ref);\n      } else {\n        parentNode.appendChild(input);\n      }\n    }\n  };\n\n  var create$12 = function create(_ref) {\n    var root = _ref.root,\n        props = _ref.props; // set id so can be referenced from outside labels\n\n    root.element.id = 'filepond--browser-' + props.id; // we have to link this element to the status element\n\n    attr(root.element, 'aria-controls', 'filepond--assistant-' + props.id); // set label, we use labelled by as otherwise the screenreader does not read the \"browse\" text in the label (as it has tabindex: 0)\n\n    attr(root.element, 'aria-labelledby', 'filepond--drop-label-' + props.id); // handle changes to the input field\n\n    root.ref.handleChange = function (e) {\n      if (!root.element.value) {\n        return;\n      } // extract files\n\n\n      var files = [].concat(toConsumableArray(root.element.files)); // we add a little delay so the OS file select window can move out of the way before we add our file\n\n      setTimeout(function () {\n        // load files\n        props.onload(files); // reset input, it's just for exposing a method to drop files, should not retain any state\n\n        resetFileInput(root.element);\n      }, 250);\n    };\n\n    root.element.addEventListener('change', root.ref.handleChange);\n  };\n\n  var setAcceptedFileTypes = function setAcceptedFileTypes(_ref2) {\n    var root = _ref2.root,\n        action = _ref2.action;\n    attrToggle(root.element, 'accept', !!action.value, action.value ? action.value.join(',') : '');\n  };\n\n  var toggleAllowMultiple = function toggleAllowMultiple(_ref3) {\n    var root = _ref3.root,\n        action = _ref3.action;\n    attrToggle(root.element, 'multiple', action.value);\n  };\n\n  var toggleAllowBrowse$1 = function toggleAllowBrowse(_ref4) {\n    var root = _ref4.root,\n        action = _ref4.action;\n    attrToggle(root.element, 'disabled', !action.value);\n  };\n\n  var toggleRequired = function toggleRequired(_ref5) {\n    var root = _ref5.root,\n        action = _ref5.action; // want to remove required, always possible\n\n    if (!action.value) {\n      attrToggle(root.element, 'required', false);\n    } else if (root.query('GET_TOTAL_ITEMS') === 0) {\n      // if want to make required, only possible when zero items\n      attrToggle(root.element, 'required', true);\n    }\n  };\n\n  var setCaptureMethod = function setCaptureMethod(_ref6) {\n    var root = _ref6.root,\n        action = _ref6.action;\n    attrToggle(root.element, 'capture', !!action.value, action.value === true ? '' : action.value);\n  };\n\n  var updateRequiredStatus = function updateRequiredStatus(_ref7) {\n    var root = _ref7.root; // always remove the required attribute when more than zero items\n\n    if (root.query('GET_TOTAL_ITEMS') > 0) {\n      attrToggle(root.element, 'required', false);\n    } else {\n      // remove any validation messages\n      var shouldCheckValidity = root.query('GET_CHECK_VALIDITY');\n\n      if (shouldCheckValidity) {\n        root.element.setCustomValidity('');\n      } // we only add required if the field has been deemed required\n\n\n      if (root.query('GET_REQUIRED')) {\n        attrToggle(root.element, 'required', true);\n      }\n    }\n  };\n\n  var updateFieldValidityStatus = function updateFieldValidityStatus(_ref8) {\n    var root = _ref8.root;\n    var shouldCheckValidity = root.query('GET_CHECK_VALIDITY');\n    if (!shouldCheckValidity) return;\n    root.element.setCustomValidity(root.query('GET_LABEL_INVALID_FIELD'));\n  };\n\n  var browser = createView({\n    tag: 'input',\n    name: 'browser',\n    ignoreRect: true,\n    ignoreRectUpdate: true,\n    attributes: {\n      type: 'file'\n    },\n    create: create$12,\n    destroy: function destroy(_ref9) {\n      var root = _ref9.root;\n      root.element.removeEventListener('change', root.ref.handleChange);\n    },\n    write: createRoute({\n      DID_LOAD_ITEM: updateRequiredStatus,\n      DID_THROW_ITEM_INVALID: updateFieldValidityStatus,\n      DID_REMOVE_ITEM: updateRequiredStatus,\n      DID_SET_ALLOW_BROWSE: toggleAllowBrowse$1,\n      DID_SET_ALLOW_MULTIPLE: toggleAllowMultiple,\n      DID_SET_ACCEPTED_FILE_TYPES: setAcceptedFileTypes,\n      DID_SET_CAPTURE_METHOD: setCaptureMethod,\n      DID_SET_REQUIRED: toggleRequired\n    })\n  });\n  var Key = {\n    ENTER: 13,\n    SPACE: 32\n  };\n\n  var create$13 = function create(_ref) {\n    var root = _ref.root,\n        props = _ref.props; // create the label and link it to the file browser\n\n    var label = createElement$1('label');\n    attr(label, 'for', 'filepond--browser-' + props.id); // use for labeling file input (aria-labelledby on file input)\n\n    attr(label, 'id', 'filepond--drop-label-' + props.id); // hide the label from screenreaders, the input element has an aria-label\n\n    attr(label, 'aria-hidden', 'true'); // handle keys\n\n    label.addEventListener('keydown', function (e) {\n      if (e.keyCode === Key.ENTER || e.keyCode === Key.SPACE) {\n        // stops from triggering the element a second time\n        e.preventDefault(); // click link (will then in turn activate file input)\n\n        root.ref.label.click();\n      }\n    }); // update\n\n    updateLabelValue(label, props.caption); // add!\n\n    root.appendChild(label);\n    root.ref.label = label;\n  };\n\n  var updateLabelValue = function updateLabelValue(label, value) {\n    label.innerHTML = value;\n    var clickable = label.querySelector('.filepond--label-action');\n\n    if (clickable) {\n      attr(clickable, 'tabindex', '0');\n    }\n\n    return value;\n  };\n\n  var dropLabel = createView({\n    name: 'drop-label',\n    ignoreRect: true,\n    create: create$13,\n    write: createRoute({\n      DID_SET_LABEL_IDLE: function DID_SET_LABEL_IDLE(_ref2) {\n        var root = _ref2.root,\n            action = _ref2.action;\n        updateLabelValue(root.ref.label, action.value);\n      }\n    }),\n    mixins: {\n      styles: ['opacity', 'translateX', 'translateY'],\n      animations: {\n        opacity: {\n          type: 'tween',\n          duration: 150\n        },\n        translateX: 'spring',\n        translateY: 'spring'\n      }\n    }\n  });\n  var blob = createView({\n    name: 'drip-blob',\n    ignoreRect: true,\n    mixins: {\n      styles: ['translateX', 'translateY', 'scaleX', 'scaleY', 'opacity'],\n      animations: {\n        scaleX: 'spring',\n        scaleY: 'spring',\n        translateX: 'spring',\n        translateY: 'spring',\n        opacity: {\n          type: 'tween',\n          duration: 250\n        }\n      }\n    }\n  });\n\n  var addBlob = function addBlob(_ref) {\n    var root = _ref.root;\n    var centerX = root.rect.element.width * 0.5;\n    var centerY = root.rect.element.height * 0.5;\n    root.ref.blob = root.appendChildView(root.createChildView(blob, {\n      opacity: 0,\n      scaleX: 2.5,\n      scaleY: 2.5,\n      translateX: centerX,\n      translateY: centerY\n    }));\n  };\n\n  var moveBlob = function moveBlob(_ref2) {\n    var root = _ref2.root,\n        action = _ref2.action;\n\n    if (!root.ref.blob) {\n      addBlob({\n        root: root\n      });\n      return;\n    }\n\n    root.ref.blob.translateX = action.position.scopeLeft;\n    root.ref.blob.translateY = action.position.scopeTop;\n    root.ref.blob.scaleX = 1;\n    root.ref.blob.scaleY = 1;\n    root.ref.blob.opacity = 1;\n  };\n\n  var hideBlob = function hideBlob(_ref3) {\n    var root = _ref3.root;\n\n    if (!root.ref.blob) {\n      return;\n    }\n\n    root.ref.blob.opacity = 0;\n  };\n\n  var explodeBlob = function explodeBlob(_ref4) {\n    var root = _ref4.root;\n\n    if (!root.ref.blob) {\n      return;\n    }\n\n    root.ref.blob.scaleX = 2.5;\n    root.ref.blob.scaleY = 2.5;\n    root.ref.blob.opacity = 0;\n  };\n\n  var write$8 = function write(_ref5) {\n    var root = _ref5.root,\n        props = _ref5.props,\n        actions = _ref5.actions;\n    route$4({\n      root: root,\n      props: props,\n      actions: actions\n    });\n    var blob$$1 = root.ref.blob;\n\n    if (actions.length === 0 && blob$$1 && blob$$1.opacity === 0) {\n      root.removeChildView(blob$$1);\n      root.ref.blob = null;\n    }\n  };\n\n  var route$4 = createRoute({\n    DID_DRAG: moveBlob,\n    DID_DROP: explodeBlob,\n    DID_END_DRAG: hideBlob\n  });\n  var drip = createView({\n    ignoreRect: true,\n    ignoreRectUpdate: true,\n    name: 'drip',\n    write: write$8\n  });\n\n  var getRootNode = function getRootNode(element) {\n    return 'getRootNode' in element ? element.getRootNode() : document;\n  };\n\n  var requestDataTransferItems = function requestDataTransferItems(dataTransfer) {\n    return new Promise(function (resolve, reject) {\n      // try to get links from transfer, if found, we'll exit immidiately\n      // as only one link can be dragged at once\n      var links = getLinks(dataTransfer);\n\n      if (links.length) {\n        resolve(links);\n        return;\n      } // try to get files from the transfer\n\n\n      getFiles(dataTransfer).then(resolve);\n    });\n  };\n  /**\n   * Extracts files from a DataTransfer object\n   */\n\n\n  var getFiles = function getFiles(dataTransfer) {\n    return new Promise(function (resolve, reject) {\n      // get the transfer items as promises\n      var promisedFiles = (dataTransfer.items ? [].concat(toConsumableArray(dataTransfer.items)) : []). // only keep file system items (files and directories)\n      filter(function (item) {\n        return isFileSystemItem(item);\n      }) // map each item to promise\n      .map(function (item) {\n        return getFilesFromItem(item);\n      }); // if is empty, see if we can extract some info from the files property as a fallback\n\n      if (!promisedFiles.length) {\n        // TODO: test for directories (should not be allowed)\n        // Use FileReader, problem is that the files property gets lost in the process\n        resolve(dataTransfer.files ? [].concat(toConsumableArray(dataTransfer.files)) : []);\n        return;\n      } // done!\n\n\n      Promise.all(promisedFiles).then(function (returendFileGroups) {\n        // flatten groups\n        var files = [];\n        returendFileGroups.forEach(function (group) {\n          files.push.apply(files, toConsumableArray(group));\n        }); // done (filter out empty files)!\n\n        resolve(files.filter(function (file) {\n          return file;\n        }));\n      });\n    });\n  };\n\n  var isFileSystemItem = function isFileSystemItem(item) {\n    if (isEntry(item)) {\n      var entry = getAsEntry(item);\n\n      if (entry) {\n        return entry.isFile || entry.isDirectory;\n      }\n    }\n\n    return item.kind === 'file';\n  };\n\n  var getFilesFromItem = function getFilesFromItem(item) {\n    return new Promise(function (resolve, reject) {\n      if (isDirectoryEntry(item)) {\n        getFilesInDirectory(getAsEntry(item)).then(resolve);\n        return;\n      }\n\n      resolve([item.getAsFile()]);\n    });\n  };\n\n  var getFilesInDirectory = function getFilesInDirectory(entry) {\n    return new Promise(function (resolve, reject) {\n      var files = []; // the total entries to read\n\n      var totalFilesFound = 0; // the recursive function\n\n      var readEntries = function readEntries(dirEntry) {\n        var directoryReader = dirEntry.createReader();\n        directoryReader.readEntries(function (entries) {\n          entries.forEach(function (entry) {\n            // recursively read more directories\n            if (entry.isDirectory) {\n              readEntries(entry);\n            } else {\n              // read as file\n              totalFilesFound++;\n              entry.file(function (file) {\n                files.push(file);\n\n                if (totalFilesFound === files.length) {\n                  resolve(files);\n                }\n              });\n            }\n          });\n        });\n      }; // go!\n\n\n      readEntries(entry);\n    });\n  };\n\n  var isDirectoryEntry = function isDirectoryEntry(item) {\n    return isEntry(item) && (getAsEntry(item) || {}).isDirectory;\n  };\n\n  var isEntry = function isEntry(item) {\n    return 'webkitGetAsEntry' in item;\n  };\n\n  var getAsEntry = function getAsEntry(item) {\n    return item.webkitGetAsEntry();\n  };\n  /**\n   * Extracts links from a DataTransfer object\n   */\n\n\n  var getLinks = function getLinks(dataTransfer) {\n    var links = [];\n\n    try {\n      // look in meta data property\n      links = getLinksFromTransferMetaData(dataTransfer);\n\n      if (links.length) {\n        return links;\n      }\n\n      links = getLinksFromTransferURLData(dataTransfer);\n    } catch (e) {// nope nope nope (probably IE trouble)\n    }\n\n    return links;\n  };\n\n  var getLinksFromTransferURLData = function getLinksFromTransferURLData(dataTransfer) {\n    var data = dataTransfer.getData('url');\n\n    if (typeof data === 'string' && data.length) {\n      return [data];\n    }\n\n    return [];\n  };\n\n  var getLinksFromTransferMetaData = function getLinksFromTransferMetaData(dataTransfer) {\n    var data = dataTransfer.getData('text/html');\n\n    if (typeof data === 'string' && data.length) {\n      var matches = data.match(/src\\s*=\\s*\"(.+?)\"/);\n\n      if (matches) {\n        return [matches[1]];\n      }\n    }\n\n    return [];\n  };\n\n  var dragNDropObservers = [];\n\n  var eventPosition = function eventPosition(e) {\n    return {\n      pageLeft: e.pageX,\n      pageTop: e.pageY,\n      scopeLeft: e.offsetX || e.layerX,\n      scopeTop: e.offsetY || e.layerY\n    };\n  };\n\n  var createDragNDropClient = function createDragNDropClient(element, scopeToObserve, filterElement) {\n    var observer = getDragNDropObserver(scopeToObserve);\n    var client = {\n      element: element,\n      filterElement: filterElement,\n      state: null,\n      ondrop: function ondrop() {},\n      onenter: function onenter() {},\n      ondrag: function ondrag() {},\n      onexit: function onexit() {},\n      onload: function onload() {},\n      allowdrop: function allowdrop() {}\n    };\n    client.destroy = observer.addListener(client);\n    return client;\n  };\n\n  var getDragNDropObserver = function getDragNDropObserver(element) {\n    // see if already exists, if so, return\n    var observer = dragNDropObservers.find(function (item) {\n      return item.element === element;\n    });\n\n    if (observer) {\n      return observer;\n    } // create new observer, does not yet exist for this element\n\n\n    var newObserver = createDragNDropObserver(element);\n    dragNDropObservers.push(newObserver);\n    return newObserver;\n  };\n\n  var createDragNDropObserver = function createDragNDropObserver(element) {\n    var clients = [];\n    var routes = {\n      dragenter: dragenter,\n      dragover: dragover,\n      dragleave: dragleave,\n      drop: drop\n    };\n    var handlers = {};\n    forin(routes, function (event, createHandler) {\n      handlers[event] = createHandler(element, clients);\n      element.addEventListener(event, handlers[event], false);\n    });\n    var observer = {\n      element: element,\n      addListener: function addListener(client) {\n        // add as client\n        clients.push(client); // return removeListener function\n\n        return function () {\n          // remove client\n          clients.splice(clients.indexOf(client), 1); // if no more clients, clean up observer\n\n          if (clients.length === 0) {\n            dragNDropObservers.splice(dragNDropObservers.indexOf(observer), 1);\n            forin(routes, function (event) {\n              element.removeEventListener(event, handlers[event], false);\n            });\n          }\n        };\n      }\n    };\n    return observer;\n  };\n\n  var elementFromPoint = function elementFromPoint(root, point) {\n    if (!('elementFromPoint' in root)) {\n      root = document;\n    }\n\n    return root.elementFromPoint(point.x, point.y);\n  };\n\n  var isEventTarget = function isEventTarget(e, target) {\n    // get root\n    var root = getRootNode(target); // get element at position\n    // if root is not actual shadow DOM and does not have elementFromPoint method, use the one on document\n\n    var elementAtPosition = elementFromPoint(root, {\n      x: e.pageX - window.pageXOffset,\n      y: e.pageY - window.pageYOffset\n    }); // test if target is the element or if one of its children is\n\n    return elementAtPosition === target || target.contains(elementAtPosition);\n  };\n\n  var initialTarget = null;\n\n  var setDropEffect = function setDropEffect(dataTransfer, effect) {\n    // is in try catch as IE11 will throw error if not\n    try {\n      dataTransfer.dropEffect = effect;\n    } catch (e) {}\n  };\n\n  var dragenter = function dragenter(root, clients) {\n    return function (e) {\n      e.preventDefault();\n      initialTarget = e.target;\n      clients.forEach(function (client) {\n        var element = client.element,\n            onenter = client.onenter;\n\n        if (isEventTarget(e, element)) {\n          client.state = 'enter'; // fire enter event\n\n          onenter(eventPosition(e));\n        }\n      });\n    };\n  };\n\n  var dragover = function dragover(root, clients) {\n    return function (e) {\n      e.preventDefault();\n      var dataTransfer = e.dataTransfer;\n      requestDataTransferItems(dataTransfer).then(function (items) {\n        var overDropTarget = false;\n        clients.some(function (client) {\n          var filterElement = client.filterElement,\n              element = client.element,\n              onenter = client.onenter,\n              onexit = client.onexit,\n              ondrag = client.ondrag,\n              allowdrop = client.allowdrop; // by default we can drop\n\n          setDropEffect(dataTransfer, 'copy'); // allow transfer of these items\n\n          var allowsTransfer = allowdrop(items); // only used when can be dropped on page\n\n          if (!allowsTransfer) {\n            setDropEffect(dataTransfer, 'none');\n            return;\n          } // targetting this client\n\n\n          if (isEventTarget(e, element)) {\n            overDropTarget = true; // had no previous state, means we are entering this client\n\n            if (client.state === null) {\n              client.state = 'enter';\n              onenter(eventPosition(e));\n              return;\n            } // now over element (no matter if it allows the drop or not)\n\n\n            client.state = 'over'; // needs to allow transfer\n\n            if (filterElement && !allowsTransfer) {\n              setDropEffect(dataTransfer, 'none');\n              return;\n            } // dragging\n\n\n            ondrag(eventPosition(e));\n          } else {\n            // should be over an element to drop\n            if (filterElement && !overDropTarget) {\n              setDropEffect(dataTransfer, 'none');\n            } // might have just left this client?\n\n\n            if (client.state) {\n              client.state = null;\n              onexit(eventPosition(e));\n            }\n          }\n        });\n      });\n    };\n  };\n\n  var drop = function drop(root, clients) {\n    return function (e) {\n      e.preventDefault();\n      var dataTransfer = e.dataTransfer;\n      requestDataTransferItems(dataTransfer).then(function (items) {\n        clients.forEach(function (client) {\n          var filterElement = client.filterElement,\n              element = client.element,\n              ondrop = client.ondrop,\n              onexit = client.onexit,\n              allowdrop = client.allowdrop;\n          client.state = null;\n          var allowsTransfer = allowdrop(items); // no transfer for this client\n\n          if (!allowsTransfer) {\n            onexit(eventPosition(e));\n            return;\n          } // if we're filtering on element we need to be over the element to drop\n\n\n          if (filterElement && !isEventTarget(e, element)) {\n            return;\n          }\n\n          ondrop(eventPosition(e), items);\n        });\n      });\n    };\n  };\n\n  var dragleave = function dragleave(root, clients) {\n    return function (e) {\n      if (initialTarget !== e.target) {\n        return;\n      }\n\n      clients.forEach(function (client) {\n        var onexit = client.onexit;\n        client.state = null;\n        onexit(eventPosition(e));\n      });\n    };\n  };\n\n  var createHopper = function createHopper(scope, validateItems, options) {\n    // is now hopper scope\n    scope.classList.add('filepond--hopper'); // shortcuts\n\n    var catchesDropsOnPage = options.catchesDropsOnPage,\n        requiresDropOnElement = options.requiresDropOnElement; // create a dnd client\n\n    var client = createDragNDropClient(scope, catchesDropsOnPage ? document.documentElement : scope, requiresDropOnElement); // current client state\n\n    var lastState = '';\n    var currentState = ''; // determines if a file may be dropped\n\n    client.allowdrop = function (items) {\n      // TODO: if we can, throw error to indicate the items cannot by dropped\n      return validateItems(items);\n    };\n\n    client.ondrop = function (position, items) {\n      if (!validateItems(items)) {\n        api.ondragend(position);\n        return;\n      }\n\n      currentState = 'drag-drop';\n      api.onload(items, position);\n    };\n\n    client.ondrag = function (position) {\n      api.ondrag(position);\n    };\n\n    client.onenter = function (position) {\n      currentState = 'drag-over';\n      api.ondragstart(position);\n    };\n\n    client.onexit = function (position) {\n      currentState = 'drag-exit';\n      api.ondragend(position);\n    };\n\n    var api = {\n      updateHopperState: function updateHopperState() {\n        if (lastState !== currentState) {\n          scope.dataset.hopperState = currentState;\n          lastState = currentState;\n        }\n      },\n      onload: function onload() {},\n      ondragstart: function ondragstart() {},\n      ondrag: function ondrag() {},\n      ondragend: function ondragend() {},\n      destroy: function destroy() {\n        // destroy client\n        client.destroy();\n      }\n    };\n    return api;\n  };\n\n  var listening = false;\n  var listeners$1 = [];\n\n  var handlePaste = function handlePaste(e) {\n    requestDataTransferItems(e.clipboardData).then(function (files) {\n      // no files received\n      if (!files.length) {\n        return;\n      } // notify listeners of received files\n\n\n      listeners$1.forEach(function (listener) {\n        return listener(files);\n      });\n    });\n  };\n\n  var listen = function listen(cb) {\n    // can't add twice\n    if (listeners$1.includes(cb)) {\n      return;\n    } // add initial listener\n\n\n    listeners$1.push(cb); // setup paste listener for entire page\n\n    if (listening) {\n      return;\n    }\n\n    listening = true;\n    document.addEventListener('paste', handlePaste);\n  };\n\n  var unlisten = function unlisten(listener) {\n    arrayRemove(listeners$1, listeners$1.indexOf(listener)); // clean up\n\n    if (listeners$1.length === 0) {\n      document.removeEventListener('paste', handlePaste);\n      listening = false;\n    }\n  };\n\n  var createPaster = function createPaster() {\n    var cb = function cb(files) {\n      api.onload(files);\n    };\n\n    var api = {\n      destroy: function destroy() {\n        unlisten(cb);\n      },\n      onload: function onload() {}\n    };\n    listen(cb);\n    return api;\n  };\n\n  var debounce = function debounce(func) {\n    var interval = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 16;\n    var immidiateOnly = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    var last = Date.now();\n    var timeout = null;\n    return function () {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      clearTimeout(timeout);\n      var dist = Date.now() - last;\n\n      var fn = function fn() {\n        last = Date.now();\n        func.apply(undefined, args);\n      };\n\n      if (dist < interval) {\n        // we need to delay by the difference between interval and dist\n        // for example: if distance is 10 ms and interval is 16 ms,\n        // we need to wait an additional 6ms before calling the function)\n        if (!immidiateOnly) {\n          timeout = setTimeout(fn, interval - dist);\n        }\n      } else {\n        // go!\n        fn();\n      }\n    };\n  };\n  /**\n   * Creates the file view\n   */\n\n\n  var create$14 = function create(_ref) {\n    var root = _ref.root,\n        props = _ref.props;\n    root.element.id = 'filepond--assistant-' + props.id;\n    attr(root.element, 'role', 'status');\n    attr(root.element, 'aria-live', 'polite');\n    attr(root.element, 'aria-relevant', 'additions');\n  };\n\n  var addFilesNotificationTimeout = null;\n  var notificationClearTimeout = null;\n  var filenames = [];\n\n  var assist = function assist(root, message) {\n    root.element.textContent = message;\n  };\n\n  var clear$1 = function clear(root) {\n    root.element.textContent = '';\n  };\n\n  var listModified = function listModified(root, filename, label) {\n    var total = root.query('GET_TOTAL_ITEMS');\n    assist(root, label + ' ' + filename + ', ' + total + ' ' + (total === 1 ? root.query('GET_LABEL_FILE_COUNT_SINGULAR') : root.query('GET_LABEL_FILE_COUNT_PLURAL'))); // clear group after set amount of time so the status is not read twice\n\n    clearTimeout(notificationClearTimeout);\n    notificationClearTimeout = setTimeout(function () {\n      clear$1(root);\n    }, 1500);\n  };\n\n  var isUsingFilePond = function isUsingFilePond(root) {\n    return root.element.parentNode.contains(document.activeElement);\n  };\n\n  var itemAdded = function itemAdded(_ref2) {\n    var root = _ref2.root,\n        action = _ref2.action;\n\n    if (!isUsingFilePond(root)) {\n      return;\n    }\n\n    root.element.textContent = '';\n    var item = root.query('GET_ITEM', action.id);\n    filenames.push(item.filename);\n    clearTimeout(addFilesNotificationTimeout);\n    addFilesNotificationTimeout = setTimeout(function () {\n      listModified(root, filenames.join(', '), root.query('GET_LABEL_FILE_ADDED'));\n      filenames.length = 0;\n    }, 750);\n  };\n\n  var itemRemoved = function itemRemoved(_ref3) {\n    var root = _ref3.root,\n        action = _ref3.action;\n\n    if (!isUsingFilePond(root)) {\n      return;\n    }\n\n    var item = action.item;\n    listModified(root, item.filename, root.query('GET_LABEL_FILE_REMOVED'));\n  };\n\n  var itemProcessed = function itemProcessed(_ref4) {\n    var root = _ref4.root,\n        action = _ref4.action; // will also notify the user when FilePond is not being used, as the user might be occupied with other activities while uploading a file\n\n    var item = root.query('GET_ITEM', action.id);\n    var filename = item.filename;\n    var label = root.query('GET_LABEL_FILE_PROCESSING_COMPLETE');\n    assist(root, filename + ' ' + label);\n  };\n\n  var itemProcessedUndo = function itemProcessedUndo(_ref5) {\n    var root = _ref5.root,\n        action = _ref5.action;\n    var item = root.query('GET_ITEM', action.id);\n    var filename = item.filename;\n    var label = root.query('GET_LABEL_FILE_PROCESSING_ABORTED');\n    assist(root, filename + ' ' + label);\n  };\n\n  var itemError = function itemError(_ref6) {\n    var root = _ref6.root,\n        action = _ref6.action;\n    var item = root.query('GET_ITEM', action.id);\n    var filename = item.filename; // will also notify the user when FilePond is not being used, as the user might be occupied with other activities while uploading a file\n\n    assist(root, action.status.main + ' ' + filename + ' ' + action.status.sub);\n  };\n\n  var assistant = createView({\n    create: create$14,\n    ignoreRect: true,\n    ignoreRectUpdate: true,\n    write: createRoute({\n      DID_LOAD_ITEM: itemAdded,\n      DID_REMOVE_ITEM: itemRemoved,\n      DID_COMPLETE_ITEM_PROCESSING: itemProcessed,\n      DID_ABORT_ITEM_PROCESSING: itemProcessedUndo,\n      DID_REVERT_ITEM_PROCESSING: itemProcessedUndo,\n      DID_THROW_ITEM_REMOVE_ERROR: itemError,\n      DID_THROW_ITEM_LOAD_ERROR: itemError,\n      DID_THROW_ITEM_INVALID: itemError,\n      DID_THROW_ITEM_PROCESSING_ERROR: itemError\n    }),\n    tag: 'span',\n    name: 'assistant'\n  });\n\n  var toCamels = function toCamels(string) {\n    var separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '-';\n    return string.replace(new RegExp(separator + '.', 'g'), function (sub) {\n      return sub.charAt(1).toUpperCase();\n    });\n  };\n\n  var MAX_FILES_LIMIT = 1000000;\n\n  var create$1 = function create(_ref) {\n    var root = _ref.root,\n        props = _ref.props; // Add id\n\n    var id = root.query('GET_ID');\n\n    if (id) {\n      root.element.id = id;\n    } // Add className\n\n\n    var className = root.query('GET_CLASS_NAME');\n\n    if (className) {\n      className.split(' ').forEach(function (name) {\n        root.element.classList.add(name);\n      });\n    } // Field label\n\n\n    root.ref.label = root.appendChildView(root.createChildView(dropLabel, Object.assign({}, props, {\n      translateY: null,\n      caption: root.query('GET_LABEL_IDLE')\n    }))); // List of items\n\n    root.ref.list = root.appendChildView(root.createChildView(listScroller, {\n      translateY: null\n    })); // Background panel\n\n    root.ref.panel = root.appendChildView(root.createChildView(panel, {\n      name: 'panel-root'\n    })); // Assistant notifies assistive tech when content changes\n\n    root.ref.assistant = root.appendChildView(root.createChildView(assistant, Object.assign({}, props))); // Measure (tests if fixed height was set)\n    // DOCTYPE needs to be set for this to work\n\n    root.ref.measure = createElement$1('div');\n    root.ref.measure.style.height = '100%';\n    root.element.appendChild(root.ref.measure); // information on the root height or fixed height status\n\n    root.ref.bounds = null; // apply initial style properties\n\n    root.query('GET_STYLES').filter(function (style) {\n      return !isEmpty(style.value);\n    }).map(function (_ref2) {\n      var name = _ref2.name,\n          value = _ref2.value;\n      root.element.dataset[name] = value;\n    });\n  };\n\n  var write = function write(_ref3) {\n    var root = _ref3.root,\n        props = _ref3.props,\n        actions = _ref3.actions; // get box bounds, we do this only once\n\n    var bounds = root.ref.bounds;\n\n    if (!bounds) {\n      bounds = root.ref.bounds = calculateRootBoundingBoxHeight(root); // destroy measure element\n\n      root.element.removeChild(root.ref.measure);\n      root.ref.measure = null;\n    } // route actions\n\n\n    route({\n      root: root,\n      props: props,\n      actions: actions\n    }); // apply style properties\n\n    actions.filter(function (action) {\n      return /^DID_SET_STYLE_/.test(action.type);\n    }).filter(function (action) {\n      return !isEmpty(action.data.value);\n    }).map(function (_ref4) {\n      var type = _ref4.type,\n          data = _ref4.data;\n      var name = toCamels(type.substr(8).toLowerCase(), '_');\n      root.element.dataset[name] = data.value;\n      root.invalidateLayout();\n    }); // get quick references to various high level parts of the upload tool\n\n    var _root$ref = root.ref,\n        hopper = _root$ref.hopper,\n        label = _root$ref.label,\n        list = _root$ref.list,\n        panel$$1 = _root$ref.panel; // sets correct state to hopper scope\n\n    if (hopper) {\n      hopper.updateHopperState();\n    } // bool to indicate if we're full or not\n\n\n    var aspectRatio = root.query('GET_PANEL_ASPECT_RATIO');\n    var isMultiItem = root.query('GET_ALLOW_MULTIPLE');\n    var totalItems = root.query('GET_TOTAL_ITEMS');\n    var maxItems = isMultiItem ? root.query('GET_MAX_FILES') || MAX_FILES_LIMIT : 1;\n    var atMaxCapacity = totalItems === maxItems; // action used to add item\n\n    var addAction = actions.find(function (action) {\n      return action.type === 'DID_ADD_ITEM';\n    }); // if reached max capacity and we've just reached it\n\n    if (atMaxCapacity && addAction) {\n      // get interaction type\n      var interactionMethod = addAction.data.interactionMethod; // hide label\n\n      label.opacity = 0;\n\n      if (isMultiItem) {\n        label.translateY = -40;\n      } else {\n        if (interactionMethod === InteractionMethod.API) {\n          label.translateX = 40;\n        } else if (interactionMethod === InteractionMethod.BROWSE) {\n          label.translateY = 40;\n        } else {\n          label.translateY = 30;\n        }\n      }\n    } else if (!atMaxCapacity) {\n      label.opacity = 1;\n      label.translateX = 0;\n      label.translateY = 0;\n    }\n\n    var listItemMargin = calculateListItemMargin(root);\n    var listHeight = calculateListHeight(root, maxItems);\n    var labelHeight = label.rect.element.height;\n    var currentLabelHeight = !isMultiItem || atMaxCapacity ? 0 : labelHeight;\n    var listMarginTop = atMaxCapacity ? list.rect.element.marginTop : 0;\n    var listMarginBottom = totalItems === 0 ? 0 : list.rect.element.marginBottom;\n    var visualHeight = currentLabelHeight + listMarginTop + listHeight.visual + listMarginBottom;\n    var boundsHeight = currentLabelHeight + listMarginTop + listHeight.bounds + listMarginBottom; // link list to label bottom position\n\n    list.translateY = Math.max(0, currentLabelHeight - list.rect.element.marginTop) - listItemMargin.top;\n\n    if (aspectRatio) {\n      // fixed aspect ratio\n      // calculate height based on width\n      var width = root.rect.element.width;\n      var height = width * aspectRatio; // fix height of panel so it adheres to aspect ratio\n\n      panel$$1.scalable = false;\n      panel$$1.height = height; // available height for list\n\n      var listAvailableHeight = // the height of the panel minus the label height\n      height - currentLabelHeight - ( // the room we leave open between the end of the list and the panel bottom\n      listMarginBottom - listItemMargin.bottom) - ( // if we're full we need to leave some room between the top of the panel and the list\n      atMaxCapacity ? listMarginTop : 0);\n\n      if (listHeight.visual > listAvailableHeight) {\n        list.overflow = listAvailableHeight;\n      } else {\n        list.overflow = null;\n      } // set container bounds (so pushes siblings downwards)\n\n\n      root.height = height;\n    } else if (bounds.fixedHeight) {\n      // fixed height\n      // fix height of panel\n      panel$$1.scalable = false; // available height for list\n\n      var _listAvailableHeight = // the height of the panel minus the label height\n      bounds.fixedHeight - currentLabelHeight - ( // the room we leave open between the end of the list and the panel bottom\n      listMarginBottom - listItemMargin.bottom) - ( // if we're full we need to leave some room between the top of the panel and the list\n      atMaxCapacity ? listMarginTop : 0); // set list height\n\n\n      if (listHeight.visual > _listAvailableHeight) {\n        list.overflow = _listAvailableHeight;\n      } else {\n        list.overflow = null;\n      } // no need to set container bounds as these are handles by CSS fixed height\n\n    } else if (bounds.cappedHeight) {\n      // max-height\n      // not a fixed height panel\n      var isCappedHeight = visualHeight >= bounds.cappedHeight;\n      var panelHeight = Math.min(bounds.cappedHeight, visualHeight);\n      panel$$1.scalable = true;\n      panel$$1.height = isCappedHeight ? panelHeight : panelHeight - listItemMargin.top - listItemMargin.bottom; // available height for list\n\n      var _listAvailableHeight2 = // the height of the panel minus the label height\n      panelHeight - currentLabelHeight - ( // the room we leave open between the end of the list and the panel bottom\n      listMarginBottom - listItemMargin.bottom) - ( // if we're full we need to leave some room between the top of the panel and the list\n      atMaxCapacity ? listMarginTop : 0); // set list height (if is overflowing)\n\n\n      if (visualHeight > bounds.cappedHeight && listHeight.visual > _listAvailableHeight2) {\n        list.overflow = _listAvailableHeight2;\n      } else {\n        list.overflow = null;\n      } // set container bounds (so pushes siblings downwards)\n\n\n      root.height = Math.min(bounds.cappedHeight, boundsHeight - listItemMargin.top - listItemMargin.bottom);\n    } else {\n      // flexible height\n      // not a fixed height panel\n      var itemMargin = totalItems > 0 ? listItemMargin.top + listItemMargin.bottom : 0;\n      panel$$1.scalable = true;\n      panel$$1.height = Math.max(labelHeight, visualHeight - itemMargin); // set container bounds (so pushes siblings downwards)\n\n      root.height = Math.max(labelHeight, boundsHeight - itemMargin);\n    }\n  };\n\n  var calculateListItemMargin = function calculateListItemMargin(root) {\n    var item = root.ref.list.childViews[0].childViews[0];\n    return item ? {\n      top: item.rect.element.marginTop,\n      bottom: item.rect.element.marginBottom\n    } : {\n      top: 0,\n      bottom: 0\n    };\n  };\n\n  var calculateListHeight = function calculateListHeight(root, maxItems) {\n    var visual = 0;\n    var bounds = 0;\n    root.ref.list.childViews[0].childViews.forEach(function (item, index) {\n      // don't count items above max items list\n      if (index >= maxItems) return; // calculate the total height of all items in the list\n\n      var rect = item.rect.element;\n      var itemHeight = rect.height + rect.marginTop + rect.marginBottom;\n      bounds += itemHeight;\n      visual += item.markedForRemoval ? item.opacity * itemHeight : itemHeight;\n    });\n    return {\n      visual: visual,\n      bounds: bounds\n    };\n  };\n\n  var calculateRootBoundingBoxHeight = function calculateRootBoundingBoxHeight(root) {\n    var height = root.ref.measureHeight || null;\n    var cappedHeight = parseInt(root.style.maxHeight, 10) || null;\n    var fixedHeight = height === 0 ? null : height;\n    return {\n      cappedHeight: cappedHeight,\n      fixedHeight: fixedHeight\n    };\n  };\n\n  var exceedsMaxFiles = function exceedsMaxFiles(root, items) {\n    var allowReplace = root.query('GET_ALLOW_REPLACE');\n    var allowMultiple = root.query('GET_ALLOW_MULTIPLE');\n    var totalItems = root.query('GET_TOTAL_ITEMS');\n    var maxItems = root.query('GET_MAX_FILES'); // total amount of items being dragged\n\n    var totalBrowseItems = items.length; // if does not allow multiple items and dragging more than one item\n\n    if (!allowMultiple && totalBrowseItems > 1) {\n      return true;\n    } // limit max items to one if not allowed to drop multiple items\n\n\n    maxItems = allowMultiple ? maxItems : allowReplace ? maxItems : 1; // no more room?\n\n    var hasMaxItems = isInt(maxItems);\n\n    if (hasMaxItems && totalItems + totalBrowseItems > maxItems) {\n      root.dispatch('DID_THROW_MAX_FILES', {\n        source: items,\n        error: createResponse('warning', 0, 'Max files')\n      });\n      return true;\n    }\n\n    return false;\n  };\n\n  var toggleAllowDrop = function toggleAllowDrop(_ref5) {\n    var root = _ref5.root,\n        props = _ref5.props,\n        action = _ref5.action;\n\n    if (action.value && !root.ref.hopper) {\n      var hopper = createHopper(root.element, function (items) {\n        // these files don't fit so stop here\n        if (exceedsMaxFiles(root, items)) {\n          return false;\n        } // all items should be validated by all filters as valid\n\n\n        var dropValidation = root.query('GET_DROP_VALIDATION');\n        return dropValidation ? items.every(function (item) {\n          return applyFilters('ALLOW_HOPPER_ITEM', item, {\n            query: root.query\n          }).every(function (result) {\n            return result === true;\n          });\n        }) : true;\n      }, {\n        catchesDropsOnPage: root.query('GET_DROP_ON_PAGE'),\n        requiresDropOnElement: root.query('GET_DROP_ON_ELEMENT')\n      });\n\n      hopper.onload = function (items, position) {\n        var itemList = root.ref.list.childViews[0];\n        var index = getItemIndexByPosition(itemList, {\n          left: position.scopeLeft,\n          top: position.scopeTop - root.ref.list.rect.outer.top + root.ref.list.element.scrollTop\n        });\n        forEachDelayed(items, function (source) {\n          root.dispatch('ADD_ITEM', {\n            interactionMethod: InteractionMethod.DROP,\n            source: source,\n            index: index\n          });\n        });\n        root.dispatch('DID_DROP', {\n          position: position\n        });\n        root.dispatch('DID_END_DRAG', {\n          position: position\n        });\n      };\n\n      hopper.ondragstart = function (position) {\n        root.dispatch('DID_START_DRAG', {\n          position: position\n        });\n      };\n\n      hopper.ondrag = debounce(function (position) {\n        root.dispatch('DID_DRAG', {\n          position: position\n        });\n      });\n\n      hopper.ondragend = function (position) {\n        root.dispatch('DID_END_DRAG', {\n          position: position\n        });\n      };\n\n      root.ref.hopper = hopper;\n      root.ref.drip = root.appendChildView(root.createChildView(drip));\n    } else if (!action.value && root.ref.hopper) {\n      root.ref.hopper.destroy();\n      root.ref.hopper = null;\n      root.removeChildView(root.ref.drip);\n    }\n  };\n  /**\n   * Enable or disable browse functionality\n   */\n\n\n  var toggleAllowBrowse = function toggleAllowBrowse(_ref6) {\n    var root = _ref6.root,\n        props = _ref6.props,\n        action = _ref6.action;\n\n    if (action.value) {\n      root.ref.browser = root.appendChildView(root.createChildView(browser, Object.assign({}, props, {\n        onload: function onload(items) {\n          // these files don't fit so stop here\n          if (exceedsMaxFiles(root, items)) {\n            return false;\n          } // add items!\n\n\n          forEachDelayed(items, function (source) {\n            root.dispatch('ADD_ITEM', {\n              interactionMethod: InteractionMethod.BROWSE,\n              source: source,\n              index: 0\n            });\n          });\n        }\n      })), 0);\n    } else if (root.ref.browser) {\n      root.removeChildView(root.ref.browser);\n    }\n  };\n  /**\n   * Enable or disable paste functionality\n   */\n\n\n  var toggleAllowPaste = function toggleAllowPaste(_ref7) {\n    var root = _ref7.root,\n        action = _ref7.action;\n\n    if (action.value) {\n      root.ref.paster = createPaster();\n\n      root.ref.paster.onload = function (items) {\n        forEachDelayed(items, function (source) {\n          root.dispatch('ADD_ITEM', {\n            interactionMethod: InteractionMethod.PASTE,\n            source: source,\n            index: 0\n          });\n        });\n      };\n    } else if (root.ref.paster) {\n      root.ref.paster.destroy();\n      root.ref.paster = null;\n    }\n  };\n  /**\n   * Route actions\n   */\n\n\n  var route = createRoute({\n    DID_SET_ALLOW_BROWSE: toggleAllowBrowse,\n    DID_SET_ALLOW_DROP: toggleAllowDrop,\n    DID_SET_ALLOW_PASTE: toggleAllowPaste\n  });\n  var root = createView({\n    name: 'root',\n    read: function read(_ref8) {\n      var root = _ref8.root;\n\n      if (root.ref.measure) {\n        root.ref.measureHeight = root.ref.measure.offsetHeight;\n      }\n    },\n    create: create$1,\n    write: write,\n    destroy: function destroy(_ref9) {\n      var root = _ref9.root;\n\n      if (root.ref.paster) {\n        root.ref.paster.destroy();\n      }\n\n      if (root.ref.hopper) {\n        root.ref.hopper.destroy();\n      }\n    },\n    mixins: {\n      styles: ['height']\n    }\n  }); // defaults\n  // view\n  // creates the app\n\n  var createApp$1 = function createApp() {\n    var initialOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}; // let element\n\n    var originalElement = null; // get default options\n\n    var defaultOptions$$1 = getOptions$1(); // create the data store, this will contain all our app info\n\n    var store = createStore( // initial state (should be serializable)\n    createInitialState(defaultOptions$$1), // queries\n    [queries, createOptionQueries(defaultOptions$$1)], // action handlers\n    [actions, createOptionActions(defaultOptions$$1)]); // set initial options\n\n    store.dispatch('SET_OPTIONS', {\n      options: initialOptions\n    }); // render initial view\n\n    var view = root(store, {\n      id: getUniqueId()\n    }); //\n    // PRIVATE API -------------------------------------------------------------------------------------\n    //\n\n    var resting = false;\n    var hidden = false;\n    var readWriteApi = {\n      // necessary for update loop\n\n      /**\n       * Reads from dom (never call manually)\n       * @private\n       */\n      _read: function _read() {\n        // if resting, no need to read as numbers will still all be correct\n        if (resting) {\n          return;\n        } // read view data\n\n\n        view._read(); // if root is hidden\n\n\n        hidden = view.rect.element.hidden;\n      },\n\n      /**\n       * Writes to dom (never call manually)\n       * @private\n       */\n      _write: function _write(ts) {\n        // don't do anything while hidden\n        if (hidden) {\n          return;\n        } // get all actions from store\n\n\n        var actions$$1 = store.processActionQueue() // filter out set actions (these will automatically trigger DID_SET)\n        .filter(function (action) {\n          return !/^SET_/.test(action.type);\n        }); // if was idling and no actions stop here\n\n        if (resting && !actions$$1.length) {\n          return;\n        } // some actions might trigger events\n\n\n        routeActionsToEvents(actions$$1); // update the view\n\n        resting = view._write(ts, actions$$1); // will clean up all archived items\n\n        removeReleasedItems(store.query('GET_ITEMS')); // now idling\n\n        if (resting) {\n          store.processDispatchQueue();\n        }\n      }\n    }; //\n    // EXPOSE EVENTS -------------------------------------------------------------------------------------\n    //\n\n    var createEvent = function createEvent(name) {\n      return function (data) {\n        // create default event\n        var event = {\n          type: name\n        }; // no data to add\n\n        if (!data) {\n          return event;\n        } // copy relevant props\n\n\n        if (data.hasOwnProperty('error')) {\n          event.error = data.error ? Object.assign({}, data.error) : null;\n        }\n\n        if (data.status) {\n          event.status = Object.assign({}, data.status);\n        }\n\n        if (data.file) {\n          event.output = data.file;\n        } // only source is available, else add item if possible\n\n\n        if (data.source) {\n          event.file = data.source;\n        } else if (data.item || data.id) {\n          var item = data.item ? data.item : store.query('GET_ITEM', data.id);\n          event.file = item ? createItemAPI(item) : null;\n        } // map all items in a possible items array\n\n\n        if (data.items) {\n          event.items = data.items.map(createItemAPI);\n        } // if this is a progress event add the progress amount\n\n\n        if (/progress/.test(name)) {\n          event.progress = data.progress;\n        }\n\n        return event;\n      };\n    };\n\n    var eventRoutes = {\n      DID_DESTROY: createEvent('destroy'),\n      DID_INIT: createEvent('init'),\n      DID_THROW_MAX_FILES: createEvent('warning'),\n      DID_START_ITEM_LOAD: createEvent('addfilestart'),\n      DID_UPDATE_ITEM_LOAD_PROGRESS: createEvent('addfileprogress'),\n      DID_LOAD_ITEM: createEvent('addfile'),\n      DID_THROW_ITEM_INVALID: [createEvent('error'), createEvent('addfile')],\n      DID_THROW_ITEM_LOAD_ERROR: [createEvent('error'), createEvent('addfile')],\n      DID_PREPARE_OUTPUT: createEvent('preparefile'),\n      DID_START_ITEM_PROCESSING: createEvent('processfilestart'),\n      DID_UPDATE_ITEM_PROCESS_PROGRESS: createEvent('processfileprogress'),\n      DID_ABORT_ITEM_PROCESSING: createEvent('processfileabort'),\n      DID_COMPLETE_ITEM_PROCESSING: createEvent('processfile'),\n      DID_REVERT_ITEM_PROCESSING: createEvent('processfilerevert'),\n      DID_THROW_ITEM_PROCESSING_ERROR: [createEvent('error'), createEvent('processfile')],\n      DID_REMOVE_ITEM: createEvent('removefile'),\n      DID_UPDATE_ITEMS: createEvent('updatefiles')\n    };\n\n    var exposeEvent = function exposeEvent(event) {\n      // create event object to be dispatched\n      var detail = Object.assign({\n        pond: exports\n      }, event);\n      delete detail.type;\n      view.element.dispatchEvent(new CustomEvent('FilePond:' + event.type, {\n        // event info\n        detail: detail,\n        // event behaviour\n        bubbles: true,\n        cancelable: true,\n        composed: true // triggers listeners outside of shadow root\n\n      })); // event object to params used for `on()` event handlers and callbacks `oninit()`\n\n      var params = []; // if is possible error event, make it the first param\n\n      if (event.hasOwnProperty('error')) {\n        params.push(event.error);\n      } // file is always section\n\n\n      if (event.hasOwnProperty('file')) {\n        params.push(event.file);\n      } // append other props\n\n\n      var filtered = ['type', 'error', 'file'];\n      Object.keys(event).filter(function (key) {\n        return !filtered.includes(key);\n      }).forEach(function (key) {\n        return params.push(event[key]);\n      }); // on(type, () => { })\n\n      exports.fire.apply(exports, [event.type].concat(params)); // oninit = () => {}\n\n      var handler = store.query('GET_ON' + event.type.toUpperCase());\n\n      if (handler) {\n        handler.apply(undefined, params);\n      }\n    };\n\n    var routeActionsToEvents = function routeActionsToEvents(actions$$1) {\n      if (!actions$$1.length) {\n        return;\n      }\n\n      actions$$1.forEach(function (action) {\n        if (!eventRoutes[action.type]) {\n          return;\n        }\n\n        var routes = eventRoutes[action.type];\n        (Array.isArray(routes) ? routes : [routes]).forEach(function (route) {\n          setTimeout(function () {\n            exposeEvent(route(action.data));\n          }, 0);\n        });\n      });\n    }; //\n    // PUBLIC API -------------------------------------------------------------------------------------\n    //\n\n\n    var setOptions = function setOptions(options) {\n      return store.dispatch('SET_OPTIONS', {\n        options: options\n      });\n    };\n\n    var getFile = function getFile(query) {\n      return store.query('GET_ACTIVE_ITEM', query);\n    };\n\n    var addFile = function addFile(source) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return new Promise(function (resolve, reject) {\n        store.dispatch('ADD_ITEM', {\n          interactionMethod: InteractionMethod.API,\n          source: source,\n          index: options.index,\n          success: resolve,\n          failure: reject,\n          options: options\n        });\n      });\n    };\n\n    var removeFile = function removeFile(query) {\n      // request item removal\n      store.dispatch('REMOVE_ITEM', {\n        query: query\n      }); // see if item has been removed\n\n      return store.query('GET_ACTIVE_ITEM', query) === null;\n    };\n\n    var addFiles = function addFiles() {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return new Promise(function (resolve, reject) {\n        var sources = [];\n        var options = {}; // user passed a sources array\n\n        if (isArray(args[0])) {\n          sources.push.apply(sources, toConsumableArray(args[0]));\n          Object.assign(options, args[1] || {});\n        } else {\n          // user passed sources as arguments, last one might be options object\n          var lastArgument = args[args.length - 1];\n\n          if ((typeof lastArgument === 'undefined' ? 'undefined' : _typeof(lastArgument)) === 'object' && !(lastArgument instanceof Blob)) {\n            Object.assign(options, args.pop());\n          } // add rest to sources\n\n\n          sources.push.apply(sources, args);\n        }\n\n        var sourcePromises = [];\n        var delayPromises = forEachDelayed(sources, function (source) {\n          sourcePromises.push(addFile(source, options));\n        });\n        Promise.all(delayPromises).then(function () {\n          Promise.all(sourcePromises).then(function (results) {\n            resolve(results);\n          });\n        });\n      });\n    };\n\n    var getFiles = function getFiles() {\n      return store.query('GET_ACTIVE_ITEMS');\n    };\n\n    var processFile = function processFile(query) {\n      return new Promise(function (resolve, reject) {\n        store.dispatch('REQUEST_ITEM_PROCESSING', {\n          query: query,\n          success: function success(item) {\n            resolve(item);\n          },\n          failure: function failure(error) {\n            reject(error);\n          }\n        });\n      });\n    };\n\n    var processFiles = function processFiles() {\n      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      var queries$$1 = Array.isArray(args[0]) ? args[0] : args;\n\n      if (!queries$$1.length) {\n        var files = getFiles().filter(function (item) {\n          return item.status !== ItemStatus.PROCESSING && item.status !== ItemStatus.PROCESSING_COMPLETE && item.status !== ItemStatus.PROCESSING_REVERT_ERROR;\n        });\n        return Promise.all(files.map(processFile));\n      }\n\n      return Promise.all(queries$$1.map(processFile));\n    };\n\n    var removeFiles = function removeFiles() {\n      for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      var queries$$1 = Array.isArray(args[0]) ? args[0] : args;\n      var files = getFiles();\n\n      if (!queries$$1.length) {\n        return Promise.all(files.map(removeFile));\n      } // when removing by index the indexes shift after each file removal so we need to convert indexes to ids\n\n\n      var mappedQueries = queries$$1.map(function (query) {\n        return isNumber(query) ? files[query] ? files[query].id : null : query;\n      }).filter(function (query) {\n        return query;\n      });\n      return mappedQueries.map(removeFile);\n    };\n\n    var exports = Object.assign({}, on(), readWriteApi, createOptionAPI(store, defaultOptions$$1), {\n      /**\n       * Override options defined in options object\n       * @param options\n       */\n      setOptions: setOptions,\n\n      /**\n       * Load the given file\n       * @param source - the source of the file (either a File, base64 data uri or url)\n       * @param options - object, { index: 0 }\n       */\n      addFile: addFile,\n\n      /**\n       * Load the given files\n       * @param sources - the sources of the files to load\n       * @param options - object, { index: 0 }\n       */\n      addFiles: addFiles,\n\n      /**\n       * Returns the file objects matching the given query\n       * @param query { string, number, null }\n       */\n      getFile: getFile,\n\n      /**\n       * Upload file with given name\n       * @param query { string, number, null  }\n       */\n      processFile: processFile,\n\n      /**\n       * Removes a file by its name\n       * @param query { string, number, null  }\n       */\n      removeFile: removeFile,\n\n      /**\n       * Returns all files (wrapped in public api)\n       */\n      getFiles: getFiles,\n\n      /**\n       * Starts uploading all files\n       */\n      processFiles: processFiles,\n\n      /**\n       * Clears all files from the files list\n       */\n      removeFiles: removeFiles,\n\n      /**\n       * Browse the file system for a file\n       */\n      browse: function browse() {\n        // needs to be trigger directly as user action needs to be traceable (is not traceable in requestAnimationFrame)\n        var input = view.element.querySelector('input[type=file]');\n\n        if (input) {\n          input.click();\n        }\n      },\n\n      /**\n       * Destroys the app\n       */\n      destroy: function destroy() {\n        // request destruction\n        exports.fire('destroy', view.element); // stop active processes (file uploads, fetches, stuff like that)\n        // loop over items and depending on states call abort for ongoing processes\n\n        store.dispatch('ABORT_ALL'); // destroy view\n\n        view._destroy(); // dispatch destroy\n\n\n        store.dispatch('DID_DESTROY');\n      },\n\n      /**\n       * Inserts the plugin before the target element\n       */\n      insertBefore: function insertBefore$$1(element) {\n        return insertBefore(view.element, element);\n      },\n\n      /**\n       * Inserts the plugin after the target element\n       */\n      insertAfter: function insertAfter$$1(element) {\n        return insertAfter(view.element, element);\n      },\n\n      /**\n       * Appends the plugin to the target element\n       */\n      appendTo: function appendTo(element) {\n        return element.appendChild(view.element);\n      },\n\n      /**\n       * Replaces an element with the app\n       */\n      replaceElement: function replaceElement(element) {\n        // insert the app before the element\n        insertBefore(view.element, element); // remove the original element\n\n        element.parentNode.removeChild(element); // remember original element\n\n        originalElement = element;\n      },\n\n      /**\n       * Restores the original element\n       */\n      restoreElement: function restoreElement() {\n        if (!originalElement) {\n          return; // no element to restore\n        } // restore original element\n\n\n        insertAfter(originalElement, view.element); // remove our element\n\n        view.element.parentNode.removeChild(view.element); // remove reference\n\n        originalElement = null;\n      },\n\n      /**\n       * Returns true if the app root is attached to given element\n       * @param element\n       */\n      isAttachedTo: function isAttachedTo(element) {\n        return view.element === element || originalElement === element;\n      },\n\n      /**\n       * Returns the root element\n       */\n      element: {\n        get: function get$$1() {\n          return view.element;\n        }\n      }\n    }); // Done!\n\n    store.dispatch('DID_INIT'); // create actual api object\n\n    return createObject(exports);\n  };\n\n  var createAppObject = function createAppObject() {\n    var customOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}; // default options\n\n    var defaultOptions$$1 = {};\n    forin(getOptions$1(), function (key, value) {\n      defaultOptions$$1[key] = value[0];\n    }); // set app options\n\n    var app = createApp$1(Object.assign({}, defaultOptions$$1, customOptions)); // return the plugin instance\n\n    return app;\n  };\n\n  var lowerCaseFirstLetter = function lowerCaseFirstLetter(string) {\n    return string.charAt(0).toLowerCase() + string.slice(1);\n  };\n\n  var attributeNameToPropertyName = function attributeNameToPropertyName(attributeName) {\n    return toCamels(attributeName.replace(/^data-/, ''));\n  };\n\n  var mapObject = function mapObject(object, propertyMap) {\n    // remove unwanted\n    forin(propertyMap, function (selector, mapping) {\n      forin(object, function (property, value) {\n        // create regexp shortcut\n        var selectorRegExp = new RegExp(selector); // tests if\n\n        var matches = selectorRegExp.test(property); // no match, skip\n\n        if (!matches) {\n          return;\n        } // if there's a mapping, the original property is always removed\n\n\n        delete object[property]; // should only remove, we done!\n\n        if (mapping === false) {\n          return;\n        } // move value to new property\n\n\n        if (isString(mapping)) {\n          object[mapping] = value;\n          return;\n        } // move to group\n\n\n        var group = mapping.group;\n\n        if (isObject(mapping) && !object[group]) {\n          object[group] = {};\n        }\n\n        object[group][lowerCaseFirstLetter(property.replace(selectorRegExp, ''))] = value;\n      }); // do submapping\n\n      if (mapping.mapping) {\n        mapObject(object[mapping.group], mapping.mapping);\n      }\n    });\n  };\n\n  var getAttributesAsObject = function getAttributesAsObject(node) {\n    var attributeMapping = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; // turn attributes into object\n\n    var attributes = [];\n    forin(node.attributes, function (index) {\n      attributes.push(node.attributes[index]);\n    });\n    var output = attributes.filter(function (attribute) {\n      return attribute.name;\n    }).reduce(function (obj, attribute) {\n      var value = attr(node, attribute.name);\n      obj[attributeNameToPropertyName(attribute.name)] = value === attribute.name ? true : value;\n      return obj;\n    }, {}); // do mapping of object properties\n\n    mapObject(output, attributeMapping);\n    return output;\n  };\n\n  var createAppAtElement = function createAppAtElement(element) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; // how attributes of the input element are mapped to the options for the plugin\n\n    var attributeMapping = {\n      // translate to other name\n      '^class$': 'className',\n      '^multiple$': 'allowMultiple',\n      '^capture$': 'captureMethod',\n      // group under single property\n      '^server': {\n        group: 'server',\n        mapping: {\n          '^process': {\n            group: 'process'\n          },\n          '^revert': {\n            group: 'revert'\n          },\n          '^fetch': {\n            group: 'fetch'\n          },\n          '^restore': {\n            group: 'restore'\n          },\n          '^load': {\n            group: 'load'\n          }\n        }\n      },\n      // don't include in object\n      '^type$': false,\n      '^files$': false\n    }; // add additional option translators\n\n    applyFilters('SET_ATTRIBUTE_TO_OPTION_MAP', attributeMapping); // create final options object by setting options object and then overriding options supplied on element\n\n    var mergedOptions = Object.assign({}, options);\n    var attributeOptions = getAttributesAsObject(element.nodeName === 'FIELDSET' ? element.querySelector('input[type=file]') : element, attributeMapping); // merge with options object\n\n    Object.keys(attributeOptions).forEach(function (key) {\n      if (isObject(attributeOptions[key])) {\n        if (!isObject(mergedOptions[key])) {\n          mergedOptions[key] = {};\n        }\n\n        Object.assign(mergedOptions[key], attributeOptions[key]);\n      } else {\n        mergedOptions[key] = attributeOptions[key];\n      }\n    }); // if parent is a fieldset, get files from parent by selecting all input fields that are not file upload fields\n    // these will then be automatically set to the initial files\n\n    mergedOptions.files = (options.files || []).concat([].concat(toConsumableArray(element.querySelectorAll('input:not([type=file])'))).map(function (input) {\n      return {\n        source: input.value,\n        options: {\n          type: input.dataset.type\n        }\n      };\n    })); // build plugin\n\n    var app = createAppObject(mergedOptions); // add already selected files\n\n    if (element.files) {\n      [].concat(toConsumableArray(element.files)).forEach(function (file) {\n        app.addFile(file);\n      });\n    } // replace the target element\n\n\n    app.replaceElement(element); // expose\n\n    return app;\n  }; // if an element is passed, we create the instance at that element, if not, we just create an up object\n\n\n  var createApp = function createApp() {\n    return isNode(arguments.length <= 0 ? undefined : arguments[0]) ? createAppAtElement.apply(undefined, arguments) : createAppObject.apply(undefined, arguments);\n  };\n\n  var PRIVATE_METHODS = ['fire', '_read', '_write'];\n\n  var createAppAPI = function createAppAPI(app) {\n    var api = {};\n    copyObjectPropertiesToObject(app, api, PRIVATE_METHODS);\n    return api;\n  };\n  /**\n   * Replaces placeholders in given string with replacements\n   * @param string - \"Foo {bar}\"\"\n   * @param replacements - { \"bar\": 10 }\n   */\n\n\n  var replaceInString = function replaceInString(string, replacements) {\n    return string.replace(/(?:{([a-zA-Z]+)})/g, function (match, group) {\n      return replacements[group];\n    });\n  };\n\n  var images = ['jpg', 'jpeg', 'png', 'gif', 'bmp', 'webp', 'svg', 'tiff'];\n  var text$1 = ['css', 'csv', 'html', 'txt'];\n  var map = {\n    zip: 'zip|compressed',\n    epub: 'application/epub+zip'\n  };\n\n  var guesstimateMimeType = function guesstimateMimeType() {\n    var extension = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    extension = extension.toLowerCase();\n\n    if (images.includes(extension)) {\n      return 'image/' + (extension === 'jpg' ? 'jpeg' : extension === 'svg' ? 'svg+xml' : extension);\n    }\n\n    if (text$1.includes(extension)) {\n      return 'text/' + extension;\n    }\n\n    return map[extension] || null;\n  };\n\n  var createWorker = function createWorker(fn) {\n    var workerBlob = new Blob(['(', fn.toString(), ')()'], {\n      type: 'application/javascript'\n    });\n    var workerURL = URL.createObjectURL(workerBlob);\n    var worker = new Worker(workerURL);\n    return {\n      transfer: function transfer(message, cb) {},\n      post: function post(message, cb, transferList) {\n        var id = getUniqueId();\n\n        worker.onmessage = function (e) {\n          if (e.data.id === id) {\n            cb(e.data.message);\n          }\n        };\n\n        worker.postMessage({\n          id: id,\n          message: message\n        }, transferList);\n      },\n      terminate: function terminate() {\n        worker.terminate();\n        URL.revokeObjectURL(workerURL);\n      }\n    };\n  };\n\n  var loadImage = function loadImage(url) {\n    return new Promise(function (resolve, reject) {\n      var img = new Image();\n\n      img.onload = function () {\n        resolve(img);\n      };\n\n      img.onerror = function (e) {\n        reject(e);\n      };\n\n      img.src = url;\n    });\n  };\n\n  var renameFile = function renameFile(file, name) {\n    var renamedFile = file.slice(0, file.size, file.type);\n    renamedFile.lastModifiedDate = file.lastModifiedDate;\n    renamedFile.name = name;\n    return renamedFile;\n  };\n\n  var copyFile = function copyFile(file) {\n    return renameFile(file, file.name);\n  }; // already registered plugins (can't register twice)\n\n\n  var registeredPlugins = []; // pass utils to plugin\n\n  var createAppPlugin = function createAppPlugin(plugin) {\n    // already registered\n    if (registeredPlugins.includes(plugin)) {\n      return;\n    } // remember this plugin\n\n\n    registeredPlugins.push(plugin); // setup!\n\n    var pluginOutline = plugin({\n      addFilter: addFilter,\n      utils: {\n        Type: Type,\n        forin: forin,\n        isString: isString,\n        isFile: isFile,\n        toNaturalFileSize: toNaturalFileSize,\n        replaceInString: replaceInString,\n        getExtensionFromFilename: getExtensionFromFilename,\n        getFilenameWithoutExtension: getFilenameWithoutExtension,\n        guesstimateMimeType: guesstimateMimeType,\n        getFileFromBlob: getFileFromBlob,\n        getFilenameFromURL: getFilenameFromURL,\n        createRoute: createRoute,\n        createWorker: createWorker,\n        createView: createView,\n        createItemAPI: createItemAPI,\n        loadImage: loadImage,\n        copyFile: copyFile,\n        renameFile: renameFile,\n        createBlob: createBlob,\n        applyFilterChain: applyFilterChain,\n        text: text,\n        getNumericAspectRatioFromString: getNumericAspectRatioFromString\n      },\n      views: {\n        fileActionButton: fileActionButton\n      }\n    }); // add plugin options to default options\n\n    extendDefaultOptions(pluginOutline.options);\n  }; // feature detection used by supported() method\n\n\n  var isOperaMini = function isOperaMini() {\n    return Object.prototype.toString.call(window.operamini) === '[object OperaMini]';\n  };\n\n  var hasPromises = function hasPromises() {\n    return 'Promise' in window;\n  };\n\n  var hasBlobSlice = function hasBlobSlice() {\n    return 'slice' in Blob.prototype;\n  };\n\n  var hasCreateObjectURL = function hasCreateObjectURL() {\n    return 'URL' in window && 'createObjectURL' in window.URL;\n  };\n\n  var hasVisibility = function hasVisibility() {\n    return 'visibilityState' in document;\n  };\n\n  var hasTiming = function hasTiming() {\n    return 'performance' in window;\n  }; // iOS 8.x\n\n\n  var isBrowser = function isBrowser() {\n    return typeof window !== 'undefined' && typeof window.document !== 'undefined';\n  };\n\n  var supported = function () {\n    // Runs immidiately and then remembers result for subsequent calls\n    var isSupported = // Has to be a browser\n    isBrowser() && // Can't run on Opera Mini due to lack of everything\n    !isOperaMini() && // Require these APIs to feature detect a modern browser\n    hasVisibility() && hasPromises() && hasBlobSlice() && hasCreateObjectURL() && hasTiming();\n    return function () {\n      return isSupported;\n    };\n  }();\n  /**\n   * Plugin internal state (over all instances)\n   */\n\n\n  var state = {\n    // active app instances, used to redraw the apps and to find the later\n    apps: []\n  }; // plugin name\n\n  var name = 'filepond';\n  /**\n   * Public Plugin methods\n   */\n\n  var fn = function fn() {};\n\n  exports.FileStatus = {};\n  exports.OptionTypes = {};\n  exports.create = fn;\n  exports.destroy = fn;\n  exports.parse = fn;\n  exports.find = fn;\n  exports.registerPlugin = fn;\n  exports.getOptions = fn;\n  exports.setOptions = fn;\n  exports.FileOrigin = {}; // if not supported, no API\n\n  if (supported()) {\n    // start painter and fire load event\n    createPainter(function () {\n      state.apps.forEach(function (app) {\n        return app._read();\n      });\n    }, function (ts) {\n      state.apps.forEach(function (app) {\n        return app._write(ts);\n      });\n    }); // fire loaded event so we know when FilePond is available\n\n    var dispatch = function dispatch() {\n      // let others know we have area ready\n      document.dispatchEvent(new CustomEvent('FilePond:loaded', {\n        detail: {\n          supported: supported,\n          create: exports.create,\n          destroy: exports.destroy,\n          parse: exports.parse,\n          find: exports.find,\n          registerPlugin: exports.registerPlugin,\n          setOptions: exports.setOptions\n        }\n      })); // clean up event\n\n      document.removeEventListener('DOMContentLoaded', dispatch);\n    };\n\n    if (document.readyState !== 'loading') {\n      // move to back of execution queue, FilePond should have been exported by then\n      setTimeout(function () {\n        return dispatch();\n      }, 0);\n    } else {\n      document.addEventListener('DOMContentLoaded', dispatch);\n    } // updates the OptionTypes object based on the current options\n\n\n    var updateOptionTypes = function updateOptionTypes() {\n      return forin(getOptions$1(), function (key, value) {\n        exports.OptionTypes[key] = value[1];\n      });\n    };\n\n    exports.FileOrigin = Object.assign({}, FileOrigin$1);\n    exports.FileStatus = Object.assign({}, ItemStatus);\n    exports.OptionTypes = {};\n    updateOptionTypes(); // create method, creates apps and adds them to the app array\n\n    exports.create = function create() {\n      var app = createApp.apply(undefined, arguments);\n      app.on('destroy', exports.destroy);\n      state.apps.push(app);\n      return createAppAPI(app);\n    }; // destroys apps and removes them from the app array\n\n\n    exports.destroy = function destroy(hook) {\n      // returns true if the app was destroyed successfully\n      var indexToRemove = state.apps.findIndex(function (app) {\n        return app.isAttachedTo(hook);\n      });\n\n      if (indexToRemove >= 0) {\n        // remove from apps\n        var app = state.apps.splice(indexToRemove, 1)[0]; // restore original dom element\n\n        app.restoreElement();\n        return true;\n      }\n\n      return false;\n    }; // parses the given context for plugins (does not include the context element itself)\n\n\n    exports.parse = function parse(context) {\n      // get all possible hooks\n      var matchedHooks = [].concat(toConsumableArray(context.querySelectorAll('.' + name))); // filter out already active hooks\n\n      var newHooks = matchedHooks.filter(function (newHook) {\n        return !state.apps.find(function (app) {\n          return app.isAttachedTo(newHook);\n        });\n      }); // create new instance for each hook\n\n      return newHooks.map(function (hook) {\n        return exports.create(hook);\n      });\n    }; // returns an app based on the given element hook\n\n\n    exports.find = function find(hook) {\n      var app = state.apps.find(function (app) {\n        return app.isAttachedTo(hook);\n      });\n\n      if (!app) {\n        return null;\n      }\n\n      return createAppAPI(app);\n    }; // adds a plugin extension\n\n\n    exports.registerPlugin = function registerPlugin() {\n      for (var _len = arguments.length, plugins = Array(_len), _key = 0; _key < _len; _key++) {\n        plugins[_key] = arguments[_key];\n      } // register plugins\n\n\n      plugins.forEach(createAppPlugin); // update OptionTypes, each plugin might have extended the default options\n\n      updateOptionTypes();\n    };\n\n    exports.getOptions = function getOptions$$1() {\n      var opts = {};\n      forin(getOptions$1(), function (key, value) {\n        opts[key] = value[0];\n      });\n      return opts;\n    };\n\n    exports.setOptions = function setOptions$$1(opts) {\n      if (isObject(opts)) {\n        // update existing plugins\n        state.apps.forEach(function (app) {\n          app.setOptions(opts);\n        }); // override defaults\n\n        setOptions$1(opts);\n      } // return new options\n\n\n      return exports.getOptions();\n    };\n  }\n\n  exports.supported = supported;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","/*!\n * FilePondPluginImageExifOrientation 1.0.6\n * Licensed under MIT, https://opensource.org/licenses/MIT/\n * Please visit https://pqina.nl/filepond/ for details.\n */\n\n/* eslint-disable */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = global || self, global.FilePondPluginImageExifOrientation = factory());\n})(this, function () {\n  'use strict'; // test if file is of type image\n\n  var isJPEG = function isJPEG(file) {\n    return /^image\\/jpeg/.test(file.type);\n  };\n\n  var Marker = {\n    JPEG: 0xffd8,\n    APP1: 0xffe1,\n    EXIF: 0x45786966,\n    TIFF: 0x4949,\n    Orientation: 0x0112,\n    Unknown: 0xff00\n  };\n\n  var getUint16 = function getUint16(view, offset) {\n    var little = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    return view.getUint16(offset, little);\n  };\n\n  var getUint32 = function getUint32(view, offset) {\n    var little = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    return view.getUint32(offset, little);\n  };\n\n  var getImageOrientation = function getImageOrientation(file) {\n    return new Promise(function (resolve, reject) {\n      var reader = new FileReader();\n\n      reader.onload = function (e) {\n        var view = new DataView(e.target.result); // Every JPEG file starts from binary value '0xFFD8'\n\n        if (getUint16(view, 0) !== Marker.JPEG) {\n          // This aint no JPEG\n          resolve(-1);\n          return;\n        }\n\n        var length = view.byteLength;\n        var offset = 2;\n\n        while (offset < length) {\n          var marker = getUint16(view, offset);\n          offset += 2; // There's our APP1 Marker\n\n          if (marker === Marker.APP1) {\n            if (getUint32(view, offset += 2) !== Marker.EXIF) {\n              // no EXIF info defined\n              break;\n            } // Get TIFF Header\n\n\n            var little = getUint16(view, offset += 6) === Marker.TIFF;\n            offset += getUint32(view, offset + 4, little);\n            var tags = getUint16(view, offset, little);\n            offset += 2;\n\n            for (var i = 0; i < tags; i++) {\n              // found the orientation tag\n              if (getUint16(view, offset + i * 12, little) === Marker.Orientation) {\n                resolve(getUint16(view, offset + i * 12 + 8, little));\n                return;\n              }\n            }\n          } else if ((marker & Marker.Unknown) !== Marker.Unknown) {\n            // Invalid\n            break;\n          } else {\n            offset += getUint16(view, offset);\n          }\n        } // Nothing found\n\n\n        resolve(-1);\n      }; // we don't need to read the entire file to get the orientation\n\n\n      reader.readAsArrayBuffer(file.slice(0, 64 * 1024));\n    });\n  };\n  /**\n   * Read Image Orientation Plugin\n   */\n\n\n  var plugin = function plugin(_ref) {\n    var addFilter = _ref.addFilter,\n        utils = _ref.utils;\n    var Type = utils.Type,\n        isFile = utils.isFile; // subscribe to file load and append required info\n\n    addFilter('DID_LOAD_ITEM', function (item, _ref2) {\n      var query = _ref2.query;\n      return new Promise(function (resolve, reject) {\n        // get file reference\n        var file = item.file; // if this is not a jpeg image we are not interested\n\n        if (!isFile(file) || !isJPEG(file) || !query('GET_ALLOW_IMAGE_EXIF_ORIENTATION')) {\n          // continue with the unaltered dataset\n          return resolve(item);\n        } // get orientation from exif data\n\n\n        getImageOrientation(file).then(function (orientation) {\n          item.setMetadata('exif', {\n            orientation: orientation\n          });\n          resolve(item);\n        });\n      });\n    }); // Expose plugin options\n\n    return {\n      options: {\n        // Enable or disable image orientation reading\n        allowImageExifOrientation: [true, Type.BOOLEAN]\n      }\n    };\n  }; // fire pluginloaded event if running in browser, this allows registering the plugin when using async script tags\n\n\n  var isBrowser = typeof window !== 'undefined' && typeof window.document !== 'undefined';\n\n  if (isBrowser) {\n    document.dispatchEvent(new CustomEvent('FilePond:pluginloaded', {\n      detail: plugin\n    }));\n  }\n\n  return plugin;\n});","/*\n * FilePondPluginImagePreview 3.1.6\n * Licensed under MIT, https://opensource.org/licenses/MIT\n * Please visit https://pqina.nl/filepond for details.\n */\n\n/* eslint-disable */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.FilePondPluginImagePreview = factory();\n})(this, function () {\n  'use strict'; // test if file is of type image and can be viewed in canvas\n\n  var isPreviewableImage = function isPreviewableImage(file) {\n    return /^image/.test(file.type);\n  };\n\n  var cloneCanvas = function cloneCanvas(origin, target) {\n    target = target || document.createElement('canvas');\n    target.width = origin.width;\n    target.height = origin.height;\n    var ctx = target.getContext('2d');\n    ctx.drawImage(origin, 0, 0);\n    return target;\n  };\n\n  var IMAGE_SCALE_SPRING_PROPS = {\n    type: 'spring',\n    stiffness: 0.5,\n    damping: 0.45,\n    mass: 10\n  };\n\n  var createVector = function createVector(x, y) {\n    return {\n      x: x,\n      y: y\n    };\n  };\n\n  var vectorDot = function vectorDot(a, b) {\n    return a.x * b.x + a.y * b.y;\n  };\n\n  var vectorSubtract = function vectorSubtract(a, b) {\n    return createVector(a.x - b.x, a.y - b.y);\n  };\n\n  var vectorDistanceSquared = function vectorDistanceSquared(a, b) {\n    return vectorDot(vectorSubtract(a, b), vectorSubtract(a, b));\n  };\n\n  var vectorDistance = function vectorDistance(a, b) {\n    return Math.sqrt(vectorDistanceSquared(a, b));\n  };\n\n  var getOffsetPointOnEdge = function getOffsetPointOnEdge(length, rotation) {\n    var a = length;\n    var A = 1.5707963267948966;\n    var B = rotation;\n    var C = 1.5707963267948966 - rotation;\n    var sinA = Math.sin(A);\n    var sinB = Math.sin(B);\n    var sinC = Math.sin(C);\n    var cosC = Math.cos(C);\n    var ratio = a / sinA;\n    var b = ratio * sinB;\n    var c = ratio * sinC;\n    return createVector(cosC * b, cosC * c);\n  };\n\n  var getRotatedRectSize = function getRotatedRectSize(rect, rotation) {\n    var w = rect.width;\n    var h = rect.height;\n    var hor = getOffsetPointOnEdge(w, rotation);\n    var ver = getOffsetPointOnEdge(h, rotation);\n    var tl = createVector(rect.x + Math.abs(hor.x), rect.y - Math.abs(hor.y));\n    var tr = createVector(rect.x + rect.width + Math.abs(ver.y), rect.y + Math.abs(ver.x));\n    var bl = createVector(rect.x - Math.abs(ver.y), rect.y + rect.height - Math.abs(ver.x));\n    return {\n      width: vectorDistance(tl, tr),\n      height: vectorDistance(tl, bl)\n    };\n  };\n\n  var getImageRectZoomFactor = function getImageRectZoomFactor(imageRect, cropRect, rotation, center) {\n    // calculate available space round image center position\n    var cx = center.x > 0.5 ? 1 - center.x : center.x;\n    var cy = center.y > 0.5 ? 1 - center.y : center.y;\n    var imageWidth = cx * 2 * imageRect.width;\n    var imageHeight = cy * 2 * imageRect.height; // calculate rotated crop rectangle size\n\n    var rotatedCropSize = getRotatedRectSize(cropRect, rotation); // calculate scalar required to fit image\n\n    return Math.max(rotatedCropSize.width / imageWidth, rotatedCropSize.height / imageHeight);\n  };\n\n  var getCenteredCropRect = function getCenteredCropRect(container, aspectRatio) {\n    var width = container.width;\n    var height = width * aspectRatio;\n\n    if (height > container.height) {\n      height = container.height;\n      width = height / aspectRatio;\n    }\n\n    var x = (container.width - width) * 0.5;\n    var y = (container.height - height) * 0.5;\n    return {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    };\n  }; // does horizontal and vertical flipping\n\n\n  var createBitmapView = function createBitmapView(_) {\n    return _.utils.createView({\n      name: 'image-bitmap',\n      tag: 'canvas',\n      ignoreRect: true,\n      mixins: {\n        styles: ['scaleX', 'scaleY']\n      },\n      create: function create(_ref) {\n        var root = _ref.root,\n            props = _ref.props;\n        cloneCanvas(props.image, root.element);\n      }\n    });\n  }; // shifts and rotates image\n\n\n  var createImageCanvasWrapper = function createImageCanvasWrapper(_) {\n    return _.utils.createView({\n      name: 'image-canvas-wrapper',\n      tag: 'div',\n      ignoreRect: true,\n      mixins: {\n        apis: ['crop', 'width', 'height'],\n        styles: ['originX', 'originY', 'translateX', 'translateY', 'scaleX', 'scaleY', 'rotateZ'],\n        animations: {\n          originX: IMAGE_SCALE_SPRING_PROPS,\n          originY: IMAGE_SCALE_SPRING_PROPS,\n          scaleX: IMAGE_SCALE_SPRING_PROPS,\n          scaleY: IMAGE_SCALE_SPRING_PROPS,\n          translateX: IMAGE_SCALE_SPRING_PROPS,\n          translateY: IMAGE_SCALE_SPRING_PROPS,\n          rotateZ: IMAGE_SCALE_SPRING_PROPS\n        }\n      },\n      create: function create(_ref2) {\n        var root = _ref2.root,\n            props = _ref2.props;\n        props.width = props.image.width;\n        props.height = props.image.height;\n        root.ref.image = root.appendChildView(root.createChildView(createBitmapView(_), {\n          image: props.image\n        }));\n      },\n      write: function write(_ref3) {\n        var root = _ref3.root,\n            props = _ref3.props;\n        var flip = props.crop.flip;\n        var image = root.ref.image;\n        image.scaleX = flip.horizontal ? -1 : 1;\n        image.scaleY = flip.vertical ? -1 : 1;\n      }\n    });\n  }; // clips canvas to correct aspect ratio\n\n\n  var createClipView = function createClipView(_) {\n    return _.utils.createView({\n      name: 'image-clip',\n      tag: 'div',\n      ignoreRect: true,\n      mixins: {\n        apis: ['crop', 'width', 'height'],\n        styles: ['width', 'height']\n      },\n      create: function create(_ref4) {\n        var root = _ref4.root,\n            props = _ref4.props;\n        root.ref.image = root.appendChildView(root.createChildView(createImageCanvasWrapper(_), Object.assign({}, props))); // set up transparency grid\n\n        var transparencyIndicator = root.query('GET_IMAGE_PREVIEW_TRANSPARENCY_INDICATOR');\n\n        if (transparencyIndicator === null) {\n          return;\n        } // grid pattern\n\n\n        if (transparencyIndicator === 'grid') {\n          root.element.dataset.transparencyIndicator = transparencyIndicator;\n        } else {\n          // basic color\n          root.element.dataset.transparencyIndicator = 'color';\n        }\n      },\n      write: function write(_ref5) {\n        var root = _ref5.root,\n            props = _ref5.props;\n        var crop = props.crop,\n            width = props.width,\n            height = props.height;\n        root.ref.image.crop = crop;\n        var stage = {\n          x: 0,\n          y: 0,\n          width: width,\n          height: height,\n          center: {\n            x: width * 0.5,\n            y: height * 0.5\n          }\n        };\n        var image = {\n          width: root.ref.image.width,\n          height: root.ref.image.height\n        };\n        var origin = {\n          x: crop.center.x * image.width,\n          y: crop.center.y * image.height\n        };\n        var translation = {\n          x: stage.center.x - image.width * crop.center.x,\n          y: stage.center.y - image.height * crop.center.y\n        };\n        var rotation = Math.PI * 2 + crop.rotation % (Math.PI * 2);\n        var cropAspectRatio = crop.aspectRatio || image.height / image.width;\n        var stageZoomFactor = getImageRectZoomFactor(image, getCenteredCropRect(stage, cropAspectRatio), rotation, crop.center);\n        var scale = crop.zoom * stageZoomFactor;\n        var imageView = root.ref.image;\n        imageView.originX = origin.x;\n        imageView.originY = origin.y;\n        imageView.translateX = translation.x;\n        imageView.translateY = translation.y;\n        imageView.rotateZ = rotation;\n        imageView.scaleX = scale;\n        imageView.scaleY = scale;\n      }\n    });\n  };\n\n  var createImageView = function createImageView(_) {\n    return _.utils.createView({\n      name: 'image-preview',\n      tag: 'div',\n      ignoreRect: true,\n      mixins: {\n        apis: ['crop'],\n        styles: ['translateY', 'scaleX', 'scaleY', 'opacity'],\n        animations: {\n          scaleX: IMAGE_SCALE_SPRING_PROPS,\n          scaleY: IMAGE_SCALE_SPRING_PROPS,\n          translateY: IMAGE_SCALE_SPRING_PROPS,\n          opacity: {\n            type: 'tween',\n            duration: 500\n          }\n        }\n      },\n      create: function create(_ref6) {\n        var root = _ref6.root,\n            props = _ref6.props;\n        root.ref.clip = root.appendChildView(root.createChildView(createClipView(_), {\n          image: props.image,\n          crop: props.crop\n        }));\n      },\n      write: function write(_ref7) {\n        var root = _ref7.root,\n            props = _ref7.props;\n        var clip = root.ref.clip;\n        var crop = props.crop,\n            image = props.image;\n        clip.crop = crop; // calculate scaled preview image size\n\n        var imageAspectRatio = image.height / image.width;\n        var aspectRatio = crop.aspectRatio || imageAspectRatio; // calculate container size\n\n        var containerWidth = root.rect.inner.width;\n        var previewWidth = containerWidth;\n        var fixedPreviewHeight = root.query('GET_IMAGE_PREVIEW_HEIGHT');\n        var minPreviewHeight = root.query('GET_IMAGE_PREVIEW_MIN_HEIGHT');\n        var maxPreviewHeight = root.query('GET_IMAGE_PREVIEW_MAX_HEIGHT');\n        var panelAspectRatio = root.query('GET_PANEL_ASPECT_RATIO');\n        var allowMultiple = root.query('GET_ALLOW_MULTIPLE');\n\n        if (panelAspectRatio && !allowMultiple) {\n          fixedPreviewHeight = containerWidth * panelAspectRatio;\n          aspectRatio = panelAspectRatio;\n        } // determine clip width and height\n\n\n        var clipHeight = fixedPreviewHeight !== null ? fixedPreviewHeight : Math.max(minPreviewHeight, Math.min(containerWidth * aspectRatio, maxPreviewHeight));\n        var clipWidth = clipHeight / aspectRatio;\n\n        if (clipWidth > previewWidth) {\n          clipWidth = previewWidth;\n          clipHeight = clipWidth * aspectRatio;\n        }\n\n        clip.width = clipWidth;\n        clip.height = clipHeight;\n      }\n    });\n  };\n  /**\n   * Create gradient and mask definitions, we use these in each overlay so we can define them once\n   * Turns out this also helps Safari to render the gradient on time\n   */\n\n\n  var definitions = \"<radialGradient id=\\\"filepond--image-preview-radial-gradient\\\" cx=\\\".5\\\" cy=\\\"1.25\\\" r=\\\"1.15\\\">\\n<stop offset='50%' stop-color='#000000'/>\\n<stop offset='56%' stop-color='#0a0a0a'/>\\n<stop offset='63%' stop-color='#262626'/>\\n<stop offset='69%' stop-color='#4f4f4f'/>\\n<stop offset='75%' stop-color='#808080'/>\\n<stop offset='81%' stop-color='#b1b1b1'/>\\n<stop offset='88%' stop-color='#dadada'/>\\n<stop offset='94%' stop-color='#f6f6f6'/>\\n<stop offset='100%' stop-color='#ffffff'/>\\n</radialGradient>\\n\\n<mask id=\\\"filepond--image-preview-masking\\\">\\n<rect x=\\\"0\\\" y=\\\"0\\\" width=\\\"500\\\" height=\\\"200\\\" fill=\\\"url(#filepond--image-preview-radial-gradient)\\\"></rect>\\n</mask>\";\n\n  var appendDefinitions = function appendDefinitions() {\n    if (!document.body || document.querySelector('.filepond--image-preview-sprite')) return;\n    var defs = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    defs.setAttribute('class', 'filepond--image-preview-sprite');\n    defs.style.cssText = 'position:absolute;width:0;height:0';\n    defs.innerHTML = definitions;\n    document.body.appendChild(defs);\n  };\n\n  var hasNavigator = typeof navigator !== 'undefined';\n\n  if (hasNavigator) {\n    appendDefinitions();\n    document.addEventListener('readystatechange', appendDefinitions);\n  } // need to know if this is IE11 so we can render the definitions with each overlay\n\n\n  var isEdgeOrIE = hasNavigator ? document.documentMode || /Edge/.test(navigator.userAgent) : false;\n\n  var createImageOverlayView = function createImageOverlayView(fpAPI) {\n    return fpAPI.utils.createView({\n      name: 'image-preview-overlay',\n      tag: 'div',\n      ignoreRect: true,\n      create: function create(_ref) {\n        var root = _ref.root,\n            props = _ref.props;\n        root.element.classList.add('filepond--image-preview-overlay-' + props.status);\n        root.element.innerHTML = '<svg width=\"500\" height=\"200\" viewBox=\"0 0 500 200\" preserveAspectRatio=\"none\">\\n                ' + (isEdgeOrIE ? '<defs>' + definitions + '</defs>' : '') + '\\n                <rect x=\"0\" width=\"500\" height=\"200\" fill=\"currentColor\" mask=\"url(#filepond--image-preview-masking)\"></rect>\\n            </svg>\\n            ';\n      },\n      mixins: {\n        styles: ['opacity'],\n        animations: {\n          opacity: {\n            type: 'spring',\n            mass: 25\n          }\n        }\n      }\n    });\n  };\n  /**\n   * Bitmap Worker\n   */\n\n\n  var BitmapWorker = function BitmapWorker() {\n    self.onmessage = function (e) {\n      createImageBitmap(e.data.message.file).then(function (bitmap) {\n        self.postMessage({\n          id: e.data.id,\n          message: bitmap\n        }, [bitmap]);\n      });\n    };\n  };\n\n  var getImageSize = function getImageSize(url, cb) {\n    var image = new Image();\n\n    image.onload = function () {\n      var width = image.naturalWidth;\n      var height = image.naturalHeight;\n      image = null;\n      cb(width, height);\n    };\n\n    image.src = url;\n  };\n\n  var toConsumableArray = function toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n        arr2[i] = arr[i];\n      }\n\n      return arr2;\n    } else {\n      return Array.from(arr);\n    }\n  };\n\n  var transforms = {\n    1: function _() {\n      return [1, 0, 0, 1, 0, 0];\n    },\n    2: function _(width) {\n      return [-1, 0, 0, 1, width, 0];\n    },\n    3: function _(width, height) {\n      return [-1, 0, 0, -1, width, height];\n    },\n    4: function _(width, height) {\n      return [1, 0, 0, -1, 0, height];\n    },\n    5: function _() {\n      return [0, 1, 1, 0, 0, 0];\n    },\n    6: function _(width, height) {\n      return [0, 1, -1, 0, height, 0];\n    },\n    7: function _(width, height) {\n      return [0, -1, -1, 0, height, width];\n    },\n    8: function _(width) {\n      return [0, -1, 1, 0, 0, width];\n    }\n  };\n\n  var fixImageOrientation = function fixImageOrientation(ctx, width, height, orientation) {\n    // no orientation supplied\n    if (orientation === -1) {\n      return;\n    }\n\n    ctx.transform.apply(ctx, toConsumableArray(transforms[orientation](width, height)));\n  }; // draws the preview image to canvas\n\n\n  var createPreviewImage = function createPreviewImage(data, width, height, orientation) {\n    // can't draw on half pixels\n    width = Math.round(width);\n    height = Math.round(height); // draw image\n\n    var canvas = document.createElement('canvas');\n    canvas.width = width;\n    canvas.height = height;\n    var ctx = canvas.getContext('2d'); // if is rotated incorrectly swap width and height\n\n    if (orientation >= 5 && orientation <= 8) {\n      var _ref = [height, width];\n      width = _ref[0];\n      height = _ref[1];\n    } // correct image orientation\n\n\n    fixImageOrientation(ctx, width, height, orientation); // draw the image\n\n    ctx.drawImage(data, 0, 0, width, height);\n    return canvas;\n  };\n\n  var isBitmap = function isBitmap(file) {\n    return /^image/.test(file.type) && !/svg/.test(file.type);\n  };\n\n  var MAX_WIDTH = 10;\n  var MAX_HEIGHT = 10;\n\n  var calculateAverageColor = function calculateAverageColor(image) {\n    var scalar = Math.min(MAX_WIDTH / image.width, MAX_HEIGHT / image.height);\n    var canvas = document.createElement('canvas');\n    var ctx = canvas.getContext('2d');\n    var width = canvas.width = Math.ceil(image.width * scalar);\n    var height = canvas.height = Math.ceil(image.height * scalar);\n    ctx.drawImage(image, 0, 0, width, height);\n    var data = null;\n\n    try {\n      data = ctx.getImageData(0, 0, width, height).data;\n    } catch (e) {\n      return null;\n    }\n\n    var l = data.length;\n    var r = 0;\n    var g = 0;\n    var b = 0;\n    var i = 0;\n\n    for (; i < l; i += 4) {\n      r += data[i] * data[i];\n      g += data[i + 1] * data[i + 1];\n      b += data[i + 2] * data[i + 2];\n    }\n\n    r = averageColor(r, l);\n    g = averageColor(g, l);\n    b = averageColor(b, l);\n    return {\n      r: r,\n      g: g,\n      b: b\n    };\n  };\n\n  var averageColor = function averageColor(c, l) {\n    return Math.floor(Math.sqrt(c / (l / 4)));\n  };\n\n  var loadImage = function loadImage(url) {\n    return new Promise(function (resolve, reject) {\n      var img = new Image();\n      img.crossOrigin = 'Anonymous';\n\n      img.onload = function () {\n        resolve(img);\n      };\n\n      img.onerror = function (e) {\n        reject(e);\n      };\n\n      img.src = url;\n    });\n  };\n\n  var createImageWrapperView = function createImageWrapperView(_) {\n    // create overlay view\n    var overlay = createImageOverlayView(_);\n\n    var removeImageView = function removeImageView(root, imageView) {\n      root.removeChildView(imageView);\n\n      imageView._destroy();\n    }; // remove an image\n\n\n    var shiftImage = function shiftImage(_ref) {\n      var root = _ref.root;\n      var image = root.ref.images.shift();\n      image.opacity = 0;\n      image.translateY = -15;\n      root.ref.imageViewBin.push(image);\n    };\n\n    var ImageView = createImageView(_); // add new image\n\n    var pushImage = function pushImage(_ref2) {\n      var root = _ref2.root,\n          props = _ref2.props;\n      var id = props.id;\n      var item = root.query('GET_ITEM', {\n        id: id\n      });\n      if (!item) return;\n      var image = props.preview;\n      var crop = item.getMetadata('crop') || {\n        center: {\n          x: 0.5,\n          y: 0.5\n        },\n        flip: {\n          horizontal: false,\n          vertical: false\n        },\n        zoom: 1,\n        rotation: 0,\n        aspectRatio: null\n      }; // append image presenter\n\n      var imageView = root.appendChildView(root.createChildView(ImageView, {\n        image: image,\n        crop: crop,\n        opacity: 0,\n        scaleX: 1.15,\n        scaleY: 1.15,\n        translateY: 15\n      }), root.childViews.length);\n      root.ref.images.push(imageView); // reveal\n\n      imageView.opacity = 1;\n      imageView.scaleX = 1;\n      imageView.scaleY = 1;\n      imageView.translateY = 0; // the preview is now ready to be drawn\n\n      setTimeout(function () {\n        root.dispatch('DID_IMAGE_PREVIEW_SHOW', {\n          id: id\n        });\n      }, 250);\n    };\n\n    var updateImage = function updateImage(_ref3) {\n      var root = _ref3.root,\n          props = _ref3.props;\n      var item = root.query('GET_ITEM', {\n        id: props.id\n      });\n      if (!item) return;\n      var imageView = root.ref.images[root.ref.images.length - 1];\n      imageView.crop = item.getMetadata('crop');\n    }; // replace image preview\n\n\n    var didUpdateItemMetadata = function didUpdateItemMetadata(_ref4) {\n      var root = _ref4.root,\n          props = _ref4.props,\n          action = _ref4.action;\n\n      if (action.change.key !== 'crop' || !root.ref.images.length) {\n        return;\n      }\n\n      var item = root.query('GET_ITEM', {\n        id: props.id\n      });\n      if (!item) return;\n      var crop = item.getMetadata('crop');\n      var image = root.ref.images[root.ref.images.length - 1]; // if aspect ratio has changed, we need to create a new image\n\n      if (Math.abs(crop.aspectRatio - image.crop.aspectRatio) > 0.00001) {\n        shiftImage({\n          root: root\n        });\n        pushImage({\n          root: root,\n          props: props\n        });\n      } else {\n        // if not, we can update the current image\n        updateImage({\n          root: root,\n          props: props\n        });\n      }\n    };\n\n    var canCreateImageBitmap = function canCreateImageBitmap(file) {\n      return 'createImageBitmap' in window && isBitmap(file);\n    };\n    /**\n     * Write handler for when preview container has been created\n     */\n\n\n    var didCreatePreviewContainer = function didCreatePreviewContainer(_ref5) {\n      var root = _ref5.root,\n          props = _ref5.props;\n      var utils = _.utils;\n      var createWorker = utils.createWorker;\n      var id = props.id; // we need to get the file data to determine the eventual image size\n\n      var item = root.query('GET_ITEM', id);\n      if (!item) return; // get url to file (we'll revoke it later on when done)\n\n      var fileURL = URL.createObjectURL(item.file); // fallback\n\n      var loadPreviewFallback = function loadPreviewFallback() {\n        // let's scale the image in the main thread :(\n        loadImage(fileURL).then(previewImageLoaded);\n      }; // image is now ready\n\n\n      var previewImageLoaded = function previewImageLoaded(data) {\n        // the file url is no longer needed\n        URL.revokeObjectURL(fileURL); // draw the scaled down version here and use that as source so bitmapdata can be closed\n        // orientation info\n\n        var exif = item.getMetadata('exif') || {};\n        var orientation = exif.orientation || -1; // get width and height from action, and swap if orientation is incorrect\n\n        var width = data.width,\n            height = data.height;\n\n        if (orientation >= 5 && orientation <= 8) {\n          var _ref6 = [height, width];\n          width = _ref6[0];\n          height = _ref6[1];\n        } // scale canvas based on pixel density\n\n\n        var pixelDensityFactor = window.devicePixelRatio; // the max height of the preview container\n\n        var fixedPreviewHeight = root.query('GET_IMAGE_PREVIEW_HEIGHT');\n        var minPreviewHeight = root.query('GET_IMAGE_PREVIEW_MIN_HEIGHT');\n        var maxPreviewHeight = root.query('GET_IMAGE_PREVIEW_MAX_HEIGHT'); // calculate scaled preview image size\n\n        var previewImageRatio = height / width; // calculate image preview height and width\n\n        var imageHeight = fixedPreviewHeight !== null ? fixedPreviewHeight : Math.max(minPreviewHeight, Math.min(height, maxPreviewHeight));\n        var imageWidth = imageHeight / previewImageRatio; // we want as much pixels to work with as possible,\n        // this multiplies the minimum image resolution\n\n        var resolutionScaleFactor = 4; // transfer to image tag so no canvas memory wasted on iOS\n\n        props.preview = createPreviewImage(data, Math.min(width, imageWidth * pixelDensityFactor * resolutionScaleFactor), Math.min(height, imageHeight * pixelDensityFactor * resolutionScaleFactor), orientation); // calculate average image color, disabled for now\n\n        var averageColor = root.query('GET_IMAGE_PREVIEW_CALCULATE_AVERAGE_IMAGE_COLOR') ? calculateAverageColor(data) : null;\n        item.setMetadata('color', averageColor, true); // data has been transferred to canvas ( if was ImageBitmap )\n\n        if ('close' in data) {\n          data.close();\n        } // show the overlay\n\n\n        root.ref.overlayShadow.opacity = 1; // create the first image\n\n        pushImage({\n          root: root,\n          props: props\n        });\n      }; // determine image size of this item\n\n\n      getImageSize(fileURL, function (width, height) {\n        // we can now scale the panel to the final size\n        root.dispatch('DID_IMAGE_PREVIEW_CALCULATE_SIZE', {\n          id: id,\n          width: width,\n          height: height\n        }); // if we support scaling using createImageBitmap we use a worker\n\n        if (canCreateImageBitmap(item.file)) {\n          // let's scale the image in a worker\n          var worker = createWorker(BitmapWorker);\n          worker.post({\n            file: item.file\n          }, function (imageBitmap) {\n            // destroy worker\n            worker.terminate(); // no bitmap returned, must be something wrong,\n            // try the oldschool way\n\n            if (!imageBitmap) {\n              loadPreviewFallback();\n              return;\n            } // yay we got our bitmap, let's continue showing the preview\n\n\n            previewImageLoaded(imageBitmap);\n          });\n        } else {\n          // create fallback preview\n          loadPreviewFallback();\n        }\n      });\n    };\n    /**\n     * Write handler for when the preview image is ready to be animated\n     */\n\n\n    var didDrawPreview = function didDrawPreview(_ref7) {\n      var root = _ref7.root; // get last added image\n\n      var image = root.ref.images[root.ref.images.length - 1];\n      image.translateY = 0;\n      image.scaleX = 1.0;\n      image.scaleY = 1.0;\n      image.opacity = 1;\n    };\n    /**\n     * Write handler for when the preview has been loaded\n     */\n\n\n    var restoreOverlay = function restoreOverlay(_ref8) {\n      var root = _ref8.root;\n      root.ref.overlayShadow.opacity = 1;\n      root.ref.overlayError.opacity = 0;\n      root.ref.overlaySuccess.opacity = 0;\n    };\n\n    var didThrowError = function didThrowError(_ref9) {\n      var root = _ref9.root;\n      root.ref.overlayShadow.opacity = 0.25;\n      root.ref.overlayError.opacity = 1;\n    };\n\n    var didCompleteProcessing = function didCompleteProcessing(_ref10) {\n      var root = _ref10.root;\n      root.ref.overlayShadow.opacity = 0.25;\n      root.ref.overlaySuccess.opacity = 1;\n    };\n    /**\n     * Constructor\n     */\n\n\n    var create = function create(_ref11) {\n      var root = _ref11.root; // image view\n\n      root.ref.images = []; // image bin\n\n      root.ref.imageViewBin = []; // image overlays\n\n      root.ref.overlayShadow = root.appendChildView(root.createChildView(overlay, {\n        opacity: 0,\n        status: 'idle'\n      }));\n      root.ref.overlaySuccess = root.appendChildView(root.createChildView(overlay, {\n        opacity: 0,\n        status: 'success'\n      }));\n      root.ref.overlayError = root.appendChildView(root.createChildView(overlay, {\n        opacity: 0,\n        status: 'failure'\n      }));\n    };\n\n    return _.utils.createView({\n      name: 'image-preview-wrapper',\n      create: create,\n      styles: ['height'],\n      write: _.utils.createRoute({\n        // image preview stated\n        DID_IMAGE_PREVIEW_DRAW: didDrawPreview,\n        DID_IMAGE_PREVIEW_CONTAINER_CREATE: didCreatePreviewContainer,\n        DID_UPDATE_ITEM_METADATA: didUpdateItemMetadata,\n        // file states\n        DID_THROW_ITEM_LOAD_ERROR: didThrowError,\n        DID_THROW_ITEM_PROCESSING_ERROR: didThrowError,\n        DID_THROW_ITEM_INVALID: didThrowError,\n        DID_COMPLETE_ITEM_PROCESSING: didCompleteProcessing,\n        DID_START_ITEM_PROCESSING: restoreOverlay,\n        DID_REVERT_ITEM_PROCESSING: restoreOverlay\n      }, function (_ref12) {\n        var root = _ref12.root;\n        var panelAspectRatio = root.query('GET_PANEL_ASPECT_RATIO');\n\n        if (panelAspectRatio) {\n          root.height = panelAspectRatio * root.rect.width;\n        } // views on death row\n\n\n        var viewsToRemove = root.ref.imageViewBin.filter(function (imageView) {\n          return imageView.opacity === 0;\n        }); // views to retain\n\n        root.ref.imageViewBin = root.ref.imageViewBin.filter(function (imageView) {\n          return imageView.opacity > 0;\n        }); // remove these views\n\n        viewsToRemove.forEach(function (imageView) {\n          return removeImageView(root, imageView);\n        });\n        viewsToRemove.length = 0;\n      })\n    });\n  };\n  /**\n   * Image Preview Plugin\n   */\n\n\n  var plugin$1 = function plugin$1(fpAPI) {\n    var addFilter = fpAPI.addFilter,\n        utils = fpAPI.utils;\n    var Type = utils.Type,\n        createRoute = utils.createRoute,\n        isFile = utils.isFile; // imagePreviewView\n\n    var imagePreviewView = createImageWrapperView(fpAPI); // called for each view that is created right after the 'create' method\n\n    addFilter('CREATE_VIEW', function (viewAPI) {\n      // get reference to created view\n      var is = viewAPI.is,\n          view = viewAPI.view,\n          query = viewAPI.query; // only hook up to item view and only if is enabled for this cropper\n\n      if (!is('file') || !query('GET_ALLOW_IMAGE_PREVIEW')) {\n        return;\n      } // create the image preview plugin, but only do so if the item is an image\n\n\n      var didLoadItem = function didLoadItem(_ref) {\n        var root = _ref.root,\n            props = _ref.props;\n        var id = props.id;\n        var item = query('GET_ITEM', id); // item could theoretically have been removed in the mean time\n\n        if (!item || !isFile(item.file) || item.archived) {\n          return;\n        } // get the file object\n\n\n        var file = item.file; // exit if this is not an image\n\n        if (!isPreviewableImage(file)) {\n          return;\n        } // exit if image size is too high and no createImageBitmap support\n        // this would simply bring the browser to its knees and that is not what we want\n\n\n        var supportsCreateImageBitmap = 'createImageBitmap' in (window || {});\n        var maxPreviewFileSize = query('GET_IMAGE_PREVIEW_MAX_FILE_SIZE');\n\n        if (!supportsCreateImageBitmap && maxPreviewFileSize && file.size > maxPreviewFileSize) {\n          return;\n        } // set preview view\n\n\n        root.ref.imagePreview = view.appendChildView(view.createChildView(imagePreviewView, {\n          id: id\n        })); // now ready\n\n        root.dispatch('DID_IMAGE_PREVIEW_CONTAINER_CREATE', {\n          id: id\n        });\n      };\n\n      var scaleItemBackground = function scaleItemBackground(root, props) {\n        if (!root.ref.imagePreview) {\n          return;\n        }\n\n        var id = props.id; // get item\n\n        var item = root.query('GET_ITEM', {\n          id: id\n        });\n        if (!item) return; // no data!\n\n        var _root$ref = root.ref,\n            width = _root$ref.imageWidth,\n            height = _root$ref.imageHeight;\n\n        if (!width || !height) {\n          return;\n        } // orientation info\n\n\n        var exif = item.getMetadata('exif') || {};\n        var orientation = exif.orientation || -1; // get width and height from action, and swap of orientation is incorrect\n\n        if (orientation >= 5 && orientation <= 8) {\n          var _ref2 = [height, width];\n          width = _ref2[0];\n          height = _ref2[1];\n        } // stylePanelAspectRatio\n\n\n        var panelAspectRatio = root.query('GET_PANEL_ASPECT_RATIO');\n        var allowMultiple = root.query('GET_ALLOW_MULTIPLE'); // we need the item to get to the crop size\n\n        var crop = item.getMetadata('crop') || {\n          center: {\n            x: 0.5,\n            y: 0.5\n          },\n          flip: {\n            horizontal: false,\n            vertical: false\n          },\n          rotation: 0,\n          zoom: 1,\n          aspectRatio: height / width\n        }; // set image aspect ratio as fallback\n\n        var shouldForcePreviewSize = !allowMultiple && panelAspectRatio;\n        var previewAspectRatio = shouldForcePreviewSize ? panelAspectRatio : crop.aspectRatio || height / width; // get height min and max\n\n        var fixedPreviewHeight = root.query('GET_IMAGE_PREVIEW_HEIGHT');\n        var minPreviewHeight = root.query('GET_IMAGE_PREVIEW_MIN_HEIGHT');\n        var maxPreviewHeight = root.query('GET_IMAGE_PREVIEW_MAX_HEIGHT'); // force to panel aspect ratio\n\n        if (shouldForcePreviewSize) {\n          fixedPreviewHeight = root.rect.element.width * panelAspectRatio;\n        } // scale up width and height when we're dealing with an SVG\n\n\n        if (!isBitmap(item.file)) {\n          var scalar = 2048 / width;\n          width *= scalar;\n          height *= scalar;\n        } // const crop width\n\n\n        height = fixedPreviewHeight !== null ? fixedPreviewHeight : Math.max(minPreviewHeight, Math.min(height, maxPreviewHeight));\n        width = height / previewAspectRatio;\n\n        if (width > root.rect.element.width || shouldForcePreviewSize) {\n          width = root.rect.element.width;\n          height = width * previewAspectRatio;\n        } // set height\n\n\n        root.ref.imagePreview.element.style.cssText = 'height:' + Math.round(height) + 'px';\n      };\n\n      var didUpdateItemMetadata = function didUpdateItemMetadata(_ref3) {\n        var root = _ref3.root,\n            props = _ref3.props,\n            action = _ref3.action;\n\n        if (action.change.key !== 'crop') {\n          return;\n        }\n\n        scaleItemBackground(root, props);\n      };\n\n      var didCalculatePreviewSize = function didCalculatePreviewSize(_ref4) {\n        var root = _ref4.root,\n            props = _ref4.props,\n            action = _ref4.action; // remember dimensions\n\n        root.ref.imageWidth = action.width;\n        root.ref.imageHeight = action.height; // let's scale the preview pane\n\n        scaleItemBackground(root, props);\n      }; // start writing\n\n\n      view.registerWriter(createRoute({\n        DID_LOAD_ITEM: didLoadItem,\n        DID_IMAGE_PREVIEW_CALCULATE_SIZE: didCalculatePreviewSize,\n        DID_UPDATE_ITEM_METADATA: didUpdateItemMetadata\n      }));\n    }); // expose plugin\n\n    return {\n      options: {\n        // Enable or disable image preview\n        allowImagePreview: [true, Type.BOOLEAN],\n        // Fixed preview height\n        imagePreviewHeight: [null, Type.INT],\n        // Min image height\n        imagePreviewMinHeight: [44, Type.INT],\n        // Max image height\n        imagePreviewMaxHeight: [256, Type.INT],\n        // Max size of preview file for when createImageBitmap is not supported\n        imagePreviewMaxFileSize: [null, Type.INT],\n        // Style of the transparancy indicator used behind images\n        imagePreviewTransparencyIndicator: [null, Type.STRING],\n        // Enables or disables reading average image color\n        imagePreviewCalculateAverageImageColor: [false, Type.BOOLEAN]\n      }\n    };\n  };\n\n  var isBrowser = typeof window !== 'undefined' && typeof window.document !== 'undefined';\n\n  if (isBrowser && document) {\n    document.dispatchEvent(new CustomEvent('FilePond:pluginloaded', {\n      detail: plugin$1\n    }));\n  }\n\n  return plugin$1;\n});","/*!\n * FilePondPluginFileValidateSize 2.1.3\n * Licensed under MIT, https://opensource.org/licenses/MIT/\n * Please visit https://pqina.nl/filepond/ for details.\n */\n\n/* eslint-disable */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = global || self, global.FilePondPluginFileValidateSize = factory());\n})(this, function () {\n  'use strict';\n\n  var plugin = function plugin(_ref) {\n    var addFilter = _ref.addFilter,\n        utils = _ref.utils; // get quick reference to Type utils\n\n    var Type = utils.Type,\n        replaceInString = utils.replaceInString,\n        toNaturalFileSize = utils.toNaturalFileSize; // filtering if an item is allowed in hopper\n\n    addFilter('ALLOW_HOPPER_ITEM', function (file, _ref2) {\n      var query = _ref2.query;\n\n      if (!query('GET_ALLOW_FILE_SIZE_VALIDATION')) {\n        return true;\n      }\n\n      var sizeMax = query('GET_MAX_FILE_SIZE');\n\n      if (sizeMax !== null && file.size >= sizeMax) {\n        return false;\n      }\n\n      var sizeMin = query('GET_MIN_FILE_SIZE');\n\n      if (sizeMin !== null && file.size <= sizeMin) {\n        return false;\n      }\n\n      return true;\n    }); // called for each file that is loaded\n    // right before it is set to the item state\n    // should return a promise\n\n    addFilter('LOAD_FILE', function (file, _ref3) {\n      var query = _ref3.query;\n      return new Promise(function (resolve, reject) {\n        // if not allowed, all fine, exit\n        if (!query('GET_ALLOW_FILE_SIZE_VALIDATION')) {\n          resolve(file);\n          return;\n        } // reject or resolve based on file size\n\n\n        var sizeMax = query('GET_MAX_FILE_SIZE');\n\n        if (sizeMax !== null && file.size >= sizeMax) {\n          reject({\n            status: {\n              main: query('GET_LABEL_MAX_FILE_SIZE_EXCEEDED'),\n              sub: replaceInString(query('GET_LABEL_MAX_FILE_SIZE'), {\n                filesize: toNaturalFileSize(sizeMax)\n              })\n            }\n          });\n          return;\n        } // reject or resolve based on file size\n\n\n        var sizeMin = query('GET_MIN_FILE_SIZE');\n\n        if (sizeMin !== null && file.size <= sizeMin) {\n          reject({\n            status: {\n              main: query('GET_LABEL_MIN_FILE_SIZE_EXCEEDED'),\n              sub: replaceInString(query('GET_LABEL_MIN_FILE_SIZE'), {\n                filesize: toNaturalFileSize(sizeMin)\n              })\n            }\n          });\n          return;\n        } // returns the current option value\n\n\n        var totalSizeMax = query('GET_MAX_TOTAL_FILE_SIZE');\n\n        if (totalSizeMax !== null) {\n          // get the current total file size\n          var currentTotalSize = query('GET_ACTIVE_ITEMS').reduce(function (total, item) {\n            return total + item.fileSize;\n          }, 0); // get the size of the new file\n\n          if (currentTotalSize > totalSizeMax) {\n            reject({\n              status: {\n                main: query('GET_LABEL_MAX_TOTAL_FILE_SIZE_EXCEEDED'),\n                sub: replaceInString(query('GET_LABEL_MAX_TOTAL_FILE_SIZE'), {\n                  filesize: toNaturalFileSize(totalSizeMax)\n                })\n              }\n            });\n            return;\n          }\n        } // file is fine, let's pass it back\n\n\n        resolve(file);\n      });\n    });\n    return {\n      options: {\n        // Enable or disable file type validation\n        allowFileSizeValidation: [true, Type.BOOLEAN],\n        // Max individual file size in bytes\n        maxFileSize: [null, Type.INT],\n        // Min individual file size in bytes\n        minFileSize: [null, Type.INT],\n        // Max total file size in bytes\n        maxTotalFileSize: [null, Type.INT],\n        // error labels\n        labelMinFileSizeExceeded: ['File is too small', Type.STRING],\n        labelMinFileSize: ['Minimum file size is {filesize}', Type.STRING],\n        labelMaxFileSizeExceeded: ['File is too large', Type.STRING],\n        labelMaxFileSize: ['Maximum file size is {filesize}', Type.STRING],\n        labelMaxTotalFileSizeExceeded: ['Maximum total size exceeded', Type.STRING],\n        labelMaxTotalFileSize: ['Maximum total file size is {filesize}', Type.STRING]\n      }\n    };\n  }; // fire pluginloaded event if running in browser, this allows registering the plugin when using async script tags\n\n\n  var isBrowser = typeof window !== 'undefined' && typeof window.document !== 'undefined';\n\n  if (isBrowser) {\n    document.dispatchEvent(new CustomEvent('FilePond:pluginloaded', {\n      detail: plugin\n    }));\n  }\n\n  return plugin;\n});","/*!\n * FilePondPluginFileValidateType 1.2.4\n * Licensed under MIT, https://opensource.org/licenses/MIT/\n * Please visit https://pqina.nl/filepond/ for details.\n */\n\n/* eslint-disable */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = global || self, global.FilePondPluginFileValidateType = factory());\n})(this, function () {\n  'use strict';\n\n  var plugin = function plugin(_ref) {\n    var addFilter = _ref.addFilter,\n        utils = _ref.utils; // get quick reference to Type utils\n\n    var Type = utils.Type,\n        isString = utils.isString,\n        replaceInString = utils.replaceInString,\n        guesstimateMimeType = utils.guesstimateMimeType,\n        getExtensionFromFilename = utils.getExtensionFromFilename,\n        getFilenameFromURL = utils.getFilenameFromURL;\n\n    var mimeTypeMatchesWildCard = function mimeTypeMatchesWildCard(mimeType, wildcard) {\n      var mimeTypeGroup = (/^[^/]+/.exec(mimeType) || []).pop(); // image/png -> image\n\n      var wildcardGroup = wildcard.slice(0, -2); // image/* -> image\n\n      return mimeTypeGroup === wildcardGroup;\n    };\n\n    var isValidMimeType = function isValidMimeType(acceptedTypes, userInputType) {\n      return acceptedTypes.some(function (acceptedType) {\n        // accepted is wildcard mime type\n        if (/\\*$/.test(acceptedType)) {\n          return mimeTypeMatchesWildCard(userInputType, acceptedType);\n        } // is normal mime type\n\n\n        return acceptedType === userInputType;\n      });\n    };\n\n    var getItemType = function getItemType(item) {\n      // if the item is a url we guess the mime type by the extension\n      var type = '';\n\n      if (isString(item)) {\n        var filename = getFilenameFromURL(item);\n        var extension = getExtensionFromFilename(filename);\n\n        if (extension) {\n          type = guesstimateMimeType(extension);\n        }\n      } else {\n        type = item.type;\n      }\n\n      return type;\n    };\n\n    var validateFile = function validateFile(item, acceptedFileTypes, typeDetector) {\n      // no types defined, everything is allowed \\o/\n      if (acceptedFileTypes.length === 0) {\n        return true;\n      } // gets the item type\n\n\n      var type = getItemType(item); // no type detector, test now\n\n      if (!typeDetector) {\n        return isValidMimeType(acceptedFileTypes, type);\n      } // use type detector\n\n\n      return new Promise(function (resolve, reject) {\n        typeDetector(item, type).then(function (detectedType) {\n          if (isValidMimeType(acceptedFileTypes, detectedType)) {\n            resolve();\n          } else {\n            reject();\n          }\n        }).catch(reject);\n      });\n    };\n\n    var applyMimeTypeMap = function applyMimeTypeMap(map) {\n      return function (acceptedFileType) {\n        return map[acceptedFileType] === null ? false : map[acceptedFileType] || acceptedFileType;\n      };\n    }; // setup attribute mapping for accept\n\n\n    addFilter('SET_ATTRIBUTE_TO_OPTION_MAP', function (map) {\n      return Object.assign(map, {\n        accept: 'acceptedFileTypes'\n      });\n    }); // filtering if an item is allowed in hopper\n\n    addFilter('ALLOW_HOPPER_ITEM', function (file, _ref2) {\n      var query = _ref2.query; // if we are not doing file type validation exit\n\n      if (!query('GET_ALLOW_FILE_TYPE_VALIDATION')) {\n        return true;\n      } // we validate the file against the accepted file types\n\n\n      return validateFile(file, query('GET_ACCEPTED_FILE_TYPES'));\n    }); // called for each file that is loaded\n    // right before it is set to the item state\n    // should return a promise\n\n    addFilter('LOAD_FILE', function (file, _ref3) {\n      var query = _ref3.query;\n      return new Promise(function (resolve, reject) {\n        if (!query('GET_ALLOW_FILE_TYPE_VALIDATION')) {\n          resolve(file);\n          return;\n        }\n\n        var acceptedFileTypes = query('GET_ACCEPTED_FILE_TYPES'); // custom type detector method\n\n        var typeDetector = query('GET_FILE_VALIDATE_TYPE_DETECT_TYPE'); // if invalid, exit here\n\n        var validationResult = validateFile(file, acceptedFileTypes, typeDetector);\n\n        var handleRejection = function handleRejection() {\n          var acceptedFileTypesMapped = acceptedFileTypes.map(applyMimeTypeMap(query('GET_FILE_VALIDATE_TYPE_LABEL_EXPECTED_TYPES_MAP'))).filter(function (label) {\n            return label !== false;\n          });\n          reject({\n            status: {\n              main: query('GET_LABEL_FILE_TYPE_NOT_ALLOWED'),\n              sub: replaceInString(query('GET_FILE_VALIDATE_TYPE_LABEL_EXPECTED_TYPES'), {\n                allTypes: acceptedFileTypesMapped.join(', '),\n                allButLastType: acceptedFileTypesMapped.slice(0, -1).join(', '),\n                lastType: acceptedFileTypesMapped[acceptedFileTypesMapped.length - 1]\n              })\n            }\n          });\n        }; // has returned new filename immidiately\n\n\n        if (typeof validationResult === 'boolean') {\n          if (!validationResult) {\n            return handleRejection();\n          }\n\n          return resolve(file);\n        } // is promise\n\n\n        validationResult.then(function () {\n          resolve(file);\n        }).catch(handleRejection);\n      });\n    }); // expose plugin\n\n    return {\n      // default options\n      options: {\n        // Enable or disable file type validation\n        allowFileTypeValidation: [true, Type.BOOLEAN],\n        // What file types to accept\n        acceptedFileTypes: [[], Type.ARRAY],\n        // - must be comma separated\n        // - mime types: image/png, image/jpeg, image/gif\n        // - extensions: .png, .jpg, .jpeg ( not enabled yet )\n        // - wildcards: image/*\n        // label to show when a type is not allowed\n        labelFileTypeNotAllowed: ['File is of invalid type', Type.STRING],\n        // nicer label\n        fileValidateTypeLabelExpectedTypes: ['Expects {allButLastType} or {lastType}', Type.STRING],\n        // map mime types to extensions\n        fileValidateTypeLabelExpectedTypesMap: [{}, Type.OBJECT],\n        // Custom function to detect type of file\n        fileValidateTypeDetectType: [null, Type.FUNCTION]\n      }\n    };\n  }; // fire pluginloaded event if running in browser, this allows registering the plugin when using async script tags\n\n\n  var isBrowser = typeof window !== 'undefined' && typeof window.document !== 'undefined';\n\n  if (isBrowser) {\n    document.dispatchEvent(new CustomEvent('FilePond:pluginloaded', {\n      detail: plugin\n    }));\n  }\n\n  return plugin;\n});"],"sourceRoot":""}