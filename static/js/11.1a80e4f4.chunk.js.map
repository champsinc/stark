{"version":3,"sources":["components/Widget/index.js","routes/components/api/index.js","routes/components/projectCard/index.js","routes/Dashboard/Home/index.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","antd__WEBPACK_IMPORTED_MODULE_1__","Widget","_ref","title","children","styleName","cover","extra","actions","a","createElement","className","concat","defaultProps","d","__webpack_exports__","CREATE_NEW_PROJECT","DATA_COLLECTION_URL","DATA_DISPLAY_URL","PROJECTS_DATA_URL","ProjectCard","props","react_default","style","maxHeight","minHeight","alt","src","imageLink","badge","count","date","backgroundColor","marginTop","name","company","progress","percent","status","Link","to","uniqueId","Dashboard","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","data","self","axios","get","company_id","then","response","map","project","col","key","sm","xs","projectCard","avatar_link","clientName","projectName","percentage","setState","catch","error","console","log","layout","card","breadcrumb","Item","row","es_button","block","type","shape","icon","theme","React","Component"],"mappings":"2FAAA,IAAAA,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,KAIMI,EAAS,SAAAC,GAAyD,IAAvDC,EAAuDD,EAAvDC,MAAOC,EAAgDF,EAAhDE,SAAUC,EAAsCH,EAAtCG,UAAWC,EAA2BJ,EAA3BI,MAAOC,EAAoBL,EAApBK,MAAOC,EAAaN,EAAbM,QAEzD,OACEV,EAAAW,EAAAC,cAACV,EAAA,EAAD,CAAMG,MAAOA,EAAOK,QAASA,EAASF,MAAOA,EAAOK,UAAS,kBAAAC,OAAoBP,GAAaE,MAAOA,GAClGH,IAKQH,MACfA,EAAOY,aAAe,CACpBR,UAAW,sCCfbR,EAAAiB,EAAAC,EAAA,sBAAAC,IAAAnB,EAAAiB,EAAAC,EAAA,sBAAAE,IAAApB,EAAAiB,EAAAC,EAAA,sBAAAG,IAAArB,EAAAiB,EAAAC,EAAA,sBAAAI,IAAO,IAAMH,EAAqB,sDACrBC,EAAsB,sDACtBC,EAAmB,8DACnBC,EAAoB,qMCsClBC,MAnCf,SAAqBC,GAEnB,OACEC,EAAAb,EAAAC,cAACT,EAAA,EAAD,CAAQI,UAAU,mCAChBiB,EAAAb,EAAAC,cAAA,OAAKC,UAAU,iDACbW,EAAAb,EAAAC,cAAA,OAAKC,UAAU,6BAEfW,EAAAb,EAAAC,cAAA,OAAKC,UAAU,0DACfW,EAAAb,EAAAC,cAAA,OAAKC,UAAU,4BACfW,EAAAb,EAAAC,cAAA,SACEY,EAAAb,EAAAC,cAAA,OAAKa,MAAO,CAACC,UAAU,OAAQC,UAAU,QAASC,IAAI,MAAMC,IAAKN,EAAMO,UAAWjB,UAAU,OAI5FW,EAAAb,EAAAC,cAACmB,EAAA,EAAD,CAAOlB,UAAU,6BAA6BmB,MAAOT,EAAMU,KAAMR,MAAO,CAACS,gBAAiB,aAC1FV,EAAAb,EAAAC,cAAA,MAAIa,MAAO,CAACU,UAAU,QAAStB,UAAU,+BAA+BU,EAAMa,MAE9EZ,EAAAb,EAAAC,cAAA,MAAIC,UAAU,4CAA4CU,EAAMc,SAChEb,EAAAb,EAAAC,cAAA,KAAGa,MAAO,CAACU,UAAU,SAASX,EAAAb,EAAAC,cAAC0B,EAAA,EAAD,CAAUC,QAAShB,EAAMe,SAAUE,OAAO,YACxEhB,EAAAb,EAAAC,cAAC6B,EAAA,EAAD,CAAMC,GAAI,sBAAsBnB,EAAMoB,UACtCnB,EAAAb,EAAAC,cAAA,OAAKC,UAAU,gBACbW,EAAAb,EAAAC,cAAA,OAAKC,UAAU,gCACbW,EAAAb,EAAAC,cAAA,KAAGC,UAAU,8CAEfW,EAAAb,EAAAC,cAAA,OAAKC,UAAU,UACbW,EAAAb,EAAAC,cAAA,KAAGC,UAAU,uICxBrB+B,cACJ,SAAAA,EAAYrB,GAAM,IAAAsB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IAChBC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMzB,KACD6B,MAAQ,CACXC,KAAM,IAHQR,mFAQhB,IAAIS,EAAON,KACXO,IAAMC,IAAInC,IAAmB,CAC7BoC,WAAY,4BAEXC,KAAK,SAAUC,GACd,GAAqB,MAAlBA,EAASnB,OAAa,CACvB,IACIa,EADWM,EAASN,KACJO,IAAI,SAAAC,GACb,OACCrC,EAAAb,EAAAC,cAACkD,EAAA,EAAD,CAAKC,IAAKF,EAAQlB,SAAUqB,GAAI,EAAGC,GAAI,IACvCzC,EAAAb,EAAAC,cAACsD,EAAD,CAAavB,SAAUkB,EAAQlB,SAAUb,UAAW+B,EAAQM,YAAalC,KAAM4B,EAAQO,WAAYhC,KAAMyB,EAAQQ,YAAahC,QAASwB,EAAQO,WAAY9B,SAAUuB,EAAQS,gBAIzLhB,EAAKiB,SAAS,CAAClB,KAAMA,OAGxBmB,MAAM,SAAUC,GACfC,QAAQC,IAAIF,sCAKhB,OACEjD,EAAAb,EAAAC,cAACgE,EAAA,EAAD,KACApD,EAAAb,EAAAC,cAACiE,EAAA,EAAD,CAAMhE,UAAU,UAAUR,MAAM,gBAC9BmB,EAAAb,EAAAC,cAACkE,EAAA,EAAD,KACAtD,EAAAb,EAAAC,cAACkE,EAAA,EAAWC,KAAZ,aACAvD,EAAAb,EAAAC,cAACkE,EAAA,EAAWC,KAAZ,KAAiBvD,EAAAb,EAAAC,cAAA,QAAMC,UAAU,WAAhB,gBAGnBW,EAAAb,EAAAC,cAACoE,EAAA,EAAD,KACKhC,KAAKI,MAAMC,MAEhB7B,EAAAb,EAAAC,cAAC6B,EAAA,EAAD,CAAMC,GAAG,iBACPlB,EAAAb,EAAAC,cAACqE,EAAA,EAAD,CAAQC,OAAK,EAACC,KAAK,UAAUC,MAAM,SAAnC,IAA4C5D,EAAAb,EAAAC,cAACyE,EAAA,EAAD,CAAMF,KAAK,eAAeG,MAAM,WAA5E,kCA5CkBC,IAAMC,WAkDf5C","file":"static/js/11.1a80e4f4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Card} from \"antd\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Widget = ({title, children, styleName, cover, extra, actions}) => {\r\n\r\n  return (\r\n    <Card title={title} actions={actions} cover={cover} className={`gx-card-widget ${styleName}`} extra={extra}>\r\n      {children}\r\n    </Card>\r\n  )\r\n};\r\n\r\nexport default Widget;\r\nWidget.defaultProps = {\r\n  styleName: '',\r\n};\r\n\r\nWidget.propTypes = {\r\n  title: PropTypes.node,\r\n  extra: PropTypes.node,\r\n  cover: PropTypes.node,\r\n  actions: PropTypes.node,\r\n  children: PropTypes.node.isRequired\r\n};\r\n","export const CREATE_NEW_PROJECT = \"https://wegmaniac.ga/global_scripts/new_project.php\";\nexport const DATA_COLLECTION_URL = \"https://wegmaniac.ga/global_scripts/file_upload.php\";\nexport const DATA_DISPLAY_URL = \"https://wegmaniac.ga/global_scripts/media_gallery_links.php\";\nexport const PROJECTS_DATA_URL = \"https://wegmaniac.ga/global_scripts/all_projects_data.php\"\nexport const VALIDATE_PROJECT_ID = \"https://wegmaniac.ga/global_scripts/check_projectid.php\"\n","import React from \"react\";\nimport {Badge, Progress} from \"antd\";\nimport {Link} from \"react-router-dom\";\n\nimport Widget from \"../../../components/Widget/index\";\n\nfunction ProjectCard(props) {\n\n  return (\n    <Widget styleName=\"gx-card-full gx-dot-arrow-hover\">\n      <div className=\"gx-media gx-align-items-center gx-flex-nowrap\">\n        <div className=\"gx-px-3 gx-build-box-lay\">\n        </div>\n        <div className=\"gx-media-body gx-py-3 gx-pr-4 gx-build-box-lay-content\">\n        <div className=\"gx-px-3 gx-build-box-lay\">\n        <p>\n          <img style={{maxHeight:'60px', minHeight:'50px'}} alt=\"...\" src={props.imageLink} className=\"\"/>\n        </p>\n        </div>\n\n          <Badge className=\"gx-badge-radius-sm gx-mb-2\" count={props.date} style={{backgroundColor: '#52c41a'}}/>\n          <h1 style={{marginTop:'15px'}} className=\"h1 gx-text-truncate gx-mb-1\">{props.name}</h1>\n\n          <h1 className=\"h4 gx-text-truncate gx-mb-1 gx-text-grey\">{props.company}</h1>\n          <p style={{marginTop:'25px'}}><Progress percent={props.progress} status=\"active\"/></p>\n          <Link to={\"/stark/projectView/\"+props.uniqueId}>\n          <div className=\"gx-dot-arrow\">\n            <div className=\"gx-bg-primary gx-hover-arrow\">\n              <i className=\"icon icon-long-arrow-right gx-text-white\"/>\n            </div>\n            <div className=\"gx-dot\">\n              <i className=\"icon icon-ellipse-v gx-text-primary\"/>\n            </div>\n          </div>\n          </Link>\n        </div>\n      </div>\n    </Widget>\n  );\n}\n\nexport default ProjectCard;\n","import React from \"react\";\nimport ProjectCard from \"../../components/projectCard\";\nimport {Row, Col, Button, Icon, Layout, Card, Breadcrumb} from \"antd\";\nimport {Link} from \"react-router-dom\";\nimport {PROJECTS_DATA_URL} from \"../../components/api\";\nimport axios from \"axios\";\n\nclass Dashboard extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      data: []\n    }\n  }\n\n  componentDidMount(){\n    var self = this;\n    axios.get(PROJECTS_DATA_URL, {\n    company_id: '<ENTER_COMPANY_ID_HERE>'\n    })\n    .then(function (response) {\n      if(response.status===200){\n        let __data__ = response.data;\n        let data = __data__.map(project => {\n                   return (\n                    <Col key={project.uniqueId} sm={8} xs={24}>\n                    <ProjectCard uniqueId={project.uniqueId} imageLink={project.avatar_link} date={project.clientName} name={project.projectName} company={project.clientName} progress={project.percentage}/>\n                    </Col>\n                 );\n        });\n        self.setState({data: data});\n      }\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  render(){\n  return (\n    <Layout>\n    <Card className=\"gx-card\" title=\"All Projects\">\n      <Breadcrumb>\n      <Breadcrumb.Item>Home</Breadcrumb.Item>\n      <Breadcrumb.Item><span className=\"gx-link\">Dashboard</span></Breadcrumb.Item>\n      </Breadcrumb>\n    </Card>\n    <Row>\n        {this.state.data}\n    </Row>\n    <Link to=\"/stark/create\">\n      <Button block type=\"primary\" shape=\"round\"> <Icon type=\"right-circle\" theme=\"filled\"/>  Solve a new problem</Button>\n    </Link>\n    </Layout>\n  );\n};\n};\nexport default Dashboard;\n"],"sourceRoot":""}