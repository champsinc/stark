{"version":3,"sources":["components/Widget/index.js","routes/components/piCard/index.js","routes/components/dcCard/index.js","routes/components/projectOverviewGrid/index.js","components/Metrics/EcommerceStatus.js","components/Metrics/IconWithTextCard.js","routes/Dashboard/Project_Details/index.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","antd__WEBPACK_IMPORTED_MODULE_1__","Widget","_ref","title","children","styleName","cover","extra","actions","a","createElement","className","concat","defaultProps","columns","dataIndex","render","text","record","react_default","name","transfer","badge","count","style","backgroundColor","color","PICard","props","table","dataSource","data","pagination","size","DCCard","cardTitle","row","col","lg","md","sm","xs","totalCount","cardSubTitle","es6","width","height","collectedData","margin","top","right","left","bottom","dataKey","id","colorId","x1","y1","x2","y2","offset","stopColor","color1","stopOpacity","color2","strokeWidth","fill","fillOpacity","OGrid","card","Grid","EcommerceStatus","icon","subTitle","colorTitle","colorSubTitle","connect","themeType","settings","iconColor","cardColor","THEME_TYPE_DARK","fontSize","key","status","Label","Counter","ppData","ProjectDetails","layout","projectOverviewGrid","piCard","Metrics_EcommerceStatus","es_button","block","type","shape","es_icon","theme","dcCard","Metrics_IconWithTextCard","React","Component"],"mappings":"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","file":"static/js/13.2681fa0e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Card} from \"antd\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Widget = ({title, children, styleName, cover, extra, actions}) => {\r\n\r\n  return (\r\n    <Card title={title} actions={actions} cover={cover} className={`gx-card-widget ${styleName}`} extra={extra}>\r\n      {children}\r\n    </Card>\r\n  )\r\n};\r\n\r\nexport default Widget;\r\nWidget.defaultProps = {\r\n  styleName: '',\r\n};\r\n\r\nWidget.propTypes = {\r\n  title: PropTypes.node,\r\n  extra: PropTypes.node,\r\n  cover: PropTypes.node,\r\n  actions: PropTypes.node,\r\n  children: PropTypes.node.isRequired\r\n};\r\n","import React from \"react\";\nimport {Table, Badge} from \"antd\";\nimport Widget from \"components/Widget/index\";\n\nconst columns = [\n  {\n    title: 'Problem Identified',\n    dataIndex: 'image',\n    render: (text, record) => {\n      return <div className=\"gx-flex-row gx-align-items-center\">\n        <p className=\"gx-mb-0\">{record.name}</p>\n      </div>\n    },\n  },\n  {\n    title: 'When?',\n    dataIndex: 'transfer',\n    render: (text, record) => {\n      return <span className=\"gx-text-grey\">{record.transfer}</span>\n    },\n\n  },\n  {\n    title: 'Status',\n    dataIndex: 'status',\n    render: (text, record) => {\n      return <span className=\"gx-text-primary gx-pointer\">\n      <Badge count={text} style={{backgroundColor: record.color, color:'#fff'}}/>\n      </span>\n    },\n  },\n];\n\nconst PICard = (props) => {\n  return (\n    <Widget\n      title={\n        <h2 className=\"h4 gx-text-capitalize gx-mb-0\">\n          Problems Identified</h2>\n      } extra={\n      <p className=\"gx-text-primary gx-mb-0 gx-pointer gx-d-none gx-d-sm-block\">\n        <i className=\"icon icon-add-circle gx-fs-lg gx-d-inline-flex gx-vertical-align-middle\"/> Add A Problem</p>\n    }>\n      <div className=\"gx-table-responsive\">\n        <Table className=\"gx-table-no-bordered\" columns={columns} dataSource={props.data} pagination={false}\n               size=\"small\"/>\n      </div>\n      <p className=\"gx-text-primary gx-mb-0 gx-pointer gx-d-block gx-d-sm-none gx-mb-0 gx-mt-3\">\n        <i className=\"icon icon-add-circle gx-fs-lg gx-d-inline-flex gx-vertical-align-middle\"/> Add A Problem</p>\n    </Widget>\n  );\n};\n\nexport default PICard;\n","import React from \"react\";\nimport {Area, AreaChart, ResponsiveContainer, Tooltip, XAxis, YAxis} from \"recharts\";\nimport {Col, Row} from \"antd\";\n\nimport Widget from \"components/Widget/index\";\n\nconst DCCard = (props) => {\n  return (\n    <Widget styleName={`gx-card-full`}>\n      <div className=\"gx-d-flex gx-px-4 gx-pt-4 gx-pb-2\">\n        <h2 className=\"h4 gx-text-capitalize gx-mb-0\">\n          {props.cardTitle}</h2>\n        <p className=\"gx-ml-auto gx-text-primary\"> Label Wise Distribution <i className=\"icon icon-line-chart gx-fs-sm\"/></p>\n      </div>\n      <Row>\n        <Col lg={12} md={12} sm={24} xs={24}>\n          <div className=\"gx-actchart gx-pb-5 gx-pl-4\">\n            <h2 className=\"gx-fs-xxxl gx-font-weight-medium gx-mb-1 gx-text-black\">{props.totalCount}</h2>\n            <p className=\"gx-mb-0\">{props.cardSubTitle}</p>\n          </div>\n        </Col>\n        <Col lg={12} md={12} sm={24} xs={24}>\n          <ResponsiveContainer width=\"100%\" height={80}>\n            <AreaChart data={props.collectedData}\n                       margin={{top: 0, right: 0, left: 0, bottom: 0}} >\n                       <XAxis dataKey=\"Label\" />\n                       <YAxis/>\n              <Tooltip/>\n              <defs>\n                <linearGradient id={props.colorId} x1=\"0\" y1=\"0\" x2=\"1\" y2=\"0\">\n                  <stop offset=\"5%\" stopColor={props.color1} stopOpacity={0.9}/>\n                  <stop offset=\"95%\" stopColor={props.color2} stopOpacity={0.9}/>\n                </linearGradient>\n              </defs>\n              <Area dataKey=\"Counter\" strokeWidth={0} fill={\"url(#\"+props.colorId+\")\"}fillOpacity={1}/>\n            </AreaChart>\n          </ResponsiveContainer>\n        </Col>\n      </Row>\n    </Widget>\n  );\n};\n\nexport default DCCard;\n","import React from \"react\";\nimport {Card} from \"antd\";\n\nconst OGrid = () => {\n  return (\n    <Card title=\"Project Overview\">\n      <Card.Grid>Project Completeness</Card.Grid>\n      <Card.Grid>User's Progress</Card.Grid>\n      <Card.Grid>User Clicks Saved</Card.Grid>\n      <Card.Grid>Estimated Working Hours Saved</Card.Grid>\n      <Card.Grid>Last Training Instance Date</Card.Grid>\n      <Card.Grid>Overall Model Accuracy</Card.Grid>\n      <Card.Grid>Deployment Status</Card.Grid>\n      <Card.Grid>API Status</Card.Grid>\n    </Card>\n  );\n};\n\nexport default OGrid;\n","import React from \"react\";\r\n\r\nimport Widget from \"components/Widget/index\";\r\n\r\nconst EcommerceStatus = ({icon, title, subTitle, color, colorTitle, colorSubTitle}) => {\r\n  return (\r\n    <Widget styleName={`gx-card-full gx-py-4 gx-px-2 gx-bg-${color}`}>\r\n      <div className=\"gx-flex-row gx-justify-content-center gx-mb-3 gx-mb-sm-4\">\r\n          <span\r\n            className={`gx-size-80 gx-border gx-border-${colorTitle} gx-text-${colorTitle} gx-flex-row gx-justify-content-center gx-align-items-center gx-rounded-circle`}>\r\n            <i className={`icon icon-${icon} gx-fs-xlxl`}/></span>\r\n      </div>\r\n      <div className=\"gx-text-center\">\r\n        <h2 className={`gx-fs-xxxl gx-font-weight-medium gx-text-${colorTitle}`}>{title}</h2>\r\n        <p className={`gx-mb-0 gx-mb-sm-3 gx-text-${colorSubTitle}`}>{subTitle}</p>\r\n      </div>\r\n    </Widget>\r\n  );\r\n};\r\n\r\nexport default EcommerceStatus;\r\n","import React from \"react\";\r\n\r\nimport Widget from \"components/Widget/index\";\r\nimport {connect} from \"react-redux\";\r\nimport {THEME_TYPE_DARK} from \"../../constants/ThemeSetting\";\r\n\r\nconst IconWithTextCard = (props) => {\r\n  const {icon, title, subTitle} = props;\r\n  let {iconColor} = props;\r\n  let {cardColor} = props;\r\n  if (props.themeType === THEME_TYPE_DARK) {\r\n    iconColor = \"white\";\r\n  }\r\n\r\n  return (\r\n    <Widget styleName={`gx-card-full gx-p-3 gx-bg-${cardColor} gx-text-white`}>\r\n      <div className=\"gx-media gx-align-items-center gx-flex-nowrap\">\r\n        <div className=\"gx-mr-lg-4 gx-mr-3\">\r\n          <i className={`icon icon-${icon} gx-fs-xlxl gx-text-${iconColor} gx-d-flex`}\r\n             style={{fontSize: 45}}/>\r\n        </div>\r\n        <div className=\"gx-media-body\">\r\n          <h1 className=\"gx-fs-xxxl gx-font-weight-medium gx-mb-1 gx-text-white\">{title}</h1>\r\n          <p className=\"gx-text-white gx-mb-0\">{subTitle}</p>\r\n        </div>\r\n      </div>\r\n    </Widget>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({settings}) => {\r\n  const {themeType} = settings;\r\n  return {themeType}\r\n};\r\nexport default connect(mapStateToProps, null)(IconWithTextCard);\r\n","import React from \"react\";\nimport PICard from \"../../components/piCard\";\nimport DCCard from \"../../components/dcCard\";\nimport OGrid from \"../../components/projectOverviewGrid\";\nimport EcommerceStatus from \"../../../components/Metrics/EcommerceStatus.js\";\nimport IconWithTextCard from \"../../../components/Metrics/IconWithTextCard.js\";\nimport {Row, Col, Layout, Card, Button, Icon} from \"antd\";\nimport Widget from \"components/Widget/index\";\n\nconst data = [\n  {\n    key: '1',\n    name: 'Potholes (P)',\n    transfer: '2 hrs. ago',\n    status: 'Completed',\n    color: 'green'\n  },\n  {\n    key: '2',\n    name: 'Manholes (M)',\n    transfer: '17 days ago',\n    status: 'In Progress',\n    color: 'orange'\n  },\n  {\n    key: '3',\n    name: 'Road Markings (R)',\n    transfer: '1 month ago',\n    status: 'In Progress',\n    color: 'orange'\n  },\n  {\n    key: '4',\n    name: 'Large Objects (L)',\n    transfer: '1 month ago',\n    status: 'Not Started',\n    color: 'red'\n  }\n];\n\nconst collectedData = [\n  {Label: 'P', Counter: 1000},\n  {Label: 'M', Counter: 9000},\n  {Label: 'R', Counter: 2900}\n];\n\nconst ppData = [\n  {Label: 'P', Counter: 800},\n  {Label: 'M', Counter: 7410},\n  {Label: 'R', Counter: 2000}\n];\n\nclass ProjectDetails extends React.Component {\n  render(){\n  return (\n    <Layout>\n    <OGrid/>\n    <Row>\n      <Col sm={12} xs={24}>\n        <PICard data={data}/>\n        <Row>\n            <Col sm={12} xs={24}>\n              <EcommerceStatus icon=\"components\" title=\"DarkFlow\" subTitle=\"Source: @thtrieu on GitHub\" color=\"orange\" colorTitle=\"geekblue\" colorSubTitle=\"geekblue\"/>\n            </Col>\n            <Col sm={12} xs={24}>\n              <EcommerceStatus icon=\"culture-calendar\" title=\"TensorFlow\" subTitle=\"Source: @tensorflow on GitHub\" color=\"geekblue\" colorTitle=\"pink\" colorSubTitle=\"pink\"/>\n            </Col>\n        </Row>\n\n        <Card title=\"Deployment\">\n          <Row>\n              <Col sm={8} xs={24}>\n                <Button block type=\"primary\" shape=\"round\"> <Icon type=\"link\"/>URL</Button>\n              </Col>\n              <Col sm={8} xs={24}>\n                <Button block type=\"primary\" shape=\"round\"> <Icon type=\"database\" theme=\"filled\"/>Database</Button>\n              </Col>\n              <Col sm={8} xs={24}>\n                <Button block type=\"primary\" shape=\"round\"> <Icon type=\"api\" theme=\"filled\"/>API</Button>\n              </Col>\n          </Row>\n         </Card>\n    </Col>\n    <Col sm={12} xs={24}>\n    <DCCard collectedData = {collectedData} totalCount = {12900} cardTitle = {\"Data Collection\"} cardSubTitle = {\"Total Image Count\"} colorId=\"color1\" color1=\"#845EC2\" color2=\"#FF55AA\"/>\n    <DCCard collectedData = {ppData} totalCount = {10210} cardTitle = {\"Pre Processed Data\"} cardSubTitle = {\"After Pre-Processing Count\"} colorId=\"color2\" color1=\"#001A7C\" color2=\"#B0ADE4\"/>\n    <Widget\n      title={\n        <h2 className=\"h4 gx-text-capitalize gx-mb-0\">\n          Training</h2>\n      }>\n    <IconWithTextCard title=\"3\" subTitle=\"Model Iterations\" icon=\"visits\" iconColor=\"white\" cardColor=\"cyan\"/>\n    <IconWithTextCard title=\"1995\" subTitle=\"Check Points Created\" icon=\"modal\" iconColor=\"white\" cardColor=\"red\"/>\n    </Widget>\n    </Col>\n    </Row>\n    </Layout>\n  );\n};\n};\nexport default ProjectDetails;\n"],"sourceRoot":""}