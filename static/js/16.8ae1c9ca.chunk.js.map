{"version":3,"sources":["routes/components/api/index.js","routes/components/selectProblem/index.js","routes/components/uploadPicture/index.js","routes/Dashboard/Project_Details/Data_Collection/index.js"],"names":["__webpack_require__","d","__webpack_exports__","CREATE_NEW_PROJECT","DATA_COLLECTION_URL","DATA_DISPLAY_URL","PROJECTS_DATA_URL","VALIDATE_PROJECT_ID","DELETE_IMAGE_URL","DELETE_PROJECT","PROJECT_DASHBOARD_STATS","INITIATE_TRAINING_PROCESS","TRAINING_PARAMETERS_SETUP","BEGIN_TRAINING","STOP_TRAINING","CHECK_TRAINING_ON","CONTINUE_TRAINING","TRAINING_SUMMARY","TRAINING_LOGS","RESET_TRAINING","SIGNUP","LOGIN","Option","Select","ProblemSelector","props","react_default","a","createElement","card","className","title","es_select","mode","showSearch","style","width","placeholder","optionFilterProp","onChange","value","length","problemIsSelected","problemValue","concat","onFocus","console","log","onBlur","filterOption","input","option","children","toLowerCase","indexOf","registerPlugin","FilePondPluginImageExifOrientation","FilePondPluginImagePreview","FilePondPluginFileValidateSize","FilePondPluginFileValidateType","file_names","UploadPicture","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onLoad","e","includes","temp_filename_array","split","push","state","files","uniqueId","_this2","session","tags","react_filepond","ref","pond","allowFileSizeValidation","maxFileSize","acceptedFileTypes","allowMultiple","labelFileProcessingComplete","maxFiles","allowRevert","labelIdle","server","url","process","onload","oninit","handleInit","onupdatefiles","fileItems","setState","map","fileItem","file","key","src","origin","Component","MediaUpload","val","problemSelected","valid","location","validated","window","href","match","params","id","breadcrumb","Item","selectProblem","display","uploadPicture","Link","to","es_button","block","type","shape","icon","theme","React"],"mappings":"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","file":"static/js/16.8ae1c9ca.chunk.js","sourcesContent":["export const CREATE_NEW_PROJECT = \"https://wegmaniac.ga/global_scripts/new_project.php\";\nexport const DATA_COLLECTION_URL = \"https://wegmaniac.ga/global_scripts/file_upload.php\";\nexport const DATA_DISPLAY_URL = \"https://wegmaniac.ga/global_scripts/media_gallery_links.php\";\nexport const PROJECTS_DATA_URL = \"https://wegmaniac.ga/global_scripts/all_projects_data.php\";\nexport const VALIDATE_PROJECT_ID = \"https://wegmaniac.ga/global_scripts/check_projectid.php\";\nexport const DELETE_IMAGE_URL = \"https://wegmaniac.ga/global_scripts/remove_media_file.php\";\nexport const DELETE_PROJECT = \"https://wegmaniac.ga/global_scripts/delete_project.php\";\nexport const PROJECT_DASHBOARD_STATS = \"https://wegmaniac.ga/global_scripts/dashboard_stats.php\";\nexport const INITIATE_TRAINING_PROCESS = \"https://wegmaniac.ga/training_scripts/init_darkflow.php\";\nexport const TRAINING_PARAMETERS_SETUP = \"https://wegmaniac.ga/training_scripts/darkflow_parameters.php\";\nexport const BEGIN_TRAINING = \"https://wegmaniac.ga/training_scripts/begin_training.php\";\nexport const STOP_TRAINING = \"https://wegmaniac.ga/training_scripts/stop_training.php\";\nexport const CHECK_TRAINING_ON = \"https://wegmaniac.ga/training_scripts/check_training.php\";\nexport const CONTINUE_TRAINING = \"https://wegmaniac.ga/training_scripts/continue_training.php\";\nexport const TRAINING_SUMMARY = \"https://wegmaniac.ga/training_scripts/training_summary.php\";\nexport const TRAINING_LOGS = \"https://wegmaniac.ga/training_scripts/get_logs.php\";\nexport const RESET_TRAINING = \"https://wegmaniac.ga/training_scripts/reset_training.php\";\nexport const SIGNUP = \"https://wegmaniac.ga/global_scripts/new_user.php\";\nexport const LOGIN = \"https://wegmaniac.ga/global_scripts/new_user.php\";\nexport const VALIDATE_LOGGED_IN_SESSION = \"https://wegmaniac.ga/global_scripts/new_user.php\";\n","import React from \"react\";\nimport {Card, Select} from \"antd\";\n\nconst Option = Select.Option;\n\n\nconst ProblemSelector = (props) => {\n  function handleChange(value) {\n    //console.log(`selected ${value}`);\n    if(value.length===0){\n      props.problemIsSelected('none');\n    }\n    else{\n      props.problemIsSelected('block');\n    }\n    props.problemValue(`${value}`);\n  }\n\n  function handleBlur() {\n    console.log('blur');\n  }\n\n  function handleFocus() {\n    console.log('focus');\n  }\n\n  return (\n    <Card className=\"gx-card\" title=\"Uploading for?\">\n      <Select\n        mode=\"multiple\"\n        showSearch\n        style={{width: '100%'}}\n        placeholder=\"Select one of the problems you identified\"\n        optionFilterProp=\"children\"\n        onChange={handleChange}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n        filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n      >\n        <Option value=\"potholes\">Potholes</Option>\n        <Option value=\"manholes\">Manholes</Option>\n        <Option value=\"road markings\">Road Markings</Option>\n        <Option value=\"large objects\">Large Objects</Option>\n      </Select>\n    </Card>\n  );\n};\n\nexport default ProblemSelector;\n","import React, { Component } from \"react\";\nimport {DATA_COLLECTION_URL} from \"../api\";\n// Import React FilePond\nimport { FilePond, File, registerPlugin } from \"react-filepond\";\n// Import FilePond styles\nimport \"filepond/dist/filepond.min.css\";\n// Import the Image EXIF Orientation and Image Preview plugins\n// Note: These need to be installed separately\nimport FilePondPluginImageExifOrientation from \"filepond-plugin-image-exif-orientation\";\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\nimport FilePondPluginFileValidateSize from \"filepond-plugin-file-validate-size\";\nimport FilePondPluginFileValidateType from \"filepond-plugin-file-validate-type\";\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\n// Register the plugins\nregisterPlugin(\n  FilePondPluginImageExifOrientation,\n  FilePondPluginImagePreview,\n  FilePondPluginFileValidateSize,\n  FilePondPluginFileValidateType,\n);\nvar file_names = [];\n// Our app\nclass UploadPicture extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // Set initial files\n      files: [\"\"],\n      uniqueId: props.uniqueId\n      //enableNext: props.enableNext\n    };\n  }\n\n  handleInit() {\n    console.log(\"IMClassify\");\n  }\n\n  onLoad = e => {\n    if (e.includes(\"Success\")) {\n      var temp_filename_array = e.split(\"_\");\n      file_names.push(temp_filename_array[1]);\n      //self.state.enableNext();\n    }\n  };\n\n  render(props) {\n    var session = this.state.uniqueId;\n    var tags = this.props.problemValue;\n    return (\n      <div className=\"App\">\n        {/* Pass FilePond properties as attributes */}\n        <FilePond\n          className=\"filepond-bg\"\n          ref={ref => (this.pond = ref)}\n          allowFileSizeValidation={true}\n          maxFileSize={\"2MB\"}\n          acceptedFileTypes={[\n            \"image/png\",\n            \"image/jpg\",\n            \"image/jpeg\",\n            \"video/mp4\",\n            \"video/avi\"\n          ]}\n          allowMultiple={true}\n          labelFileProcessingComplete={\"Upload Complete\"}\n          maxFiles={9}\n          allowRevert={false}\n          labelIdle='Drag & Drop your files or <span class=\"filepond--label-action\">Browse</span><br/> <i>Acceptable file types: .png, .jpg, .jpeg, .mp4, .avi</i>'\n          server={{\n            url: DATA_COLLECTION_URL+\"?uniqueId=\"+session+\"&tags=\"+tags,\n            process: {\n              onload: this.onLoad\n            }\n          }}\n          oninit={() => this.handleInit()}\n          onupdatefiles={fileItems => {\n            // Set current file objects to this.state\n            this.setState({\n              files: fileItems.map(fileItem => fileItem.file)\n            });\n          }}\n        >\n          {/* Update current files  */}\n          {this.state.files.map(file => (\n            <File key={file} src={file} origin=\"local\" />\n          ))}\n        </FilePond>\n      </div>\n    );\n  }\n}\n\nexport default UploadPicture;\n","import React from \"react\";\nimport ProblemSelector from \"../../../components/selectProblem\";\nimport UploadPicture from \"../../../components/uploadPicture\";\nimport {Link} from \"react-router-dom\";\nimport {Button, Icon, Card, Breadcrumb} from \"antd\";\n\nclass MediaUpload extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      problemSelected: 'none',\n      problemValue: '',\n    }\n\n    try {\n      var valid = props.location.state.validated;\n      console.log(valid);\n    }\n    catch(e){\n      return window.location.href = '/stark/validation/'+props.match.params.id+'/uploads';\n    }\n\n  }\n\n  problemIsSelected = (val) => {\n    this.setState({\n      problemSelected: val\n    })\n  };\n  problemValue = (val) => {\n    this.setState({\n      problemValue: val\n    })\n  };\n\n render(props){\n    return (\n    <div>\n    <Breadcrumb>\n    <Breadcrumb.Item>Home</Breadcrumb.Item>\n    <Breadcrumb.Item><span className=\"gx-link\">Media Uploads</span></Breadcrumb.Item>\n    </Breadcrumb>\n    <br/>\n    <ProblemSelector problemIsSelected={this.problemIsSelected} problemValue={this.problemValue}/>\n    <Card className=\"gx-card\" title=\"Upload Media Files\" style={{display:this.state.problemSelected}}>\n    <UploadPicture uniqueId={this.props.match.params.id} problemValue = {this.state.problemValue}/>\n    </Card>\n    <Link to={\"/stark/mediaView/\"+this.props.match.params.id}>\n      <Button block type=\"primary\" shape=\"round\"> <Icon type=\"right-circle\" theme=\"filled\"/>Go to project's collection!</Button>\n    </Link>\n    </div>\n  );\n};\n};\nexport default MediaUpload;\n"],"sourceRoot":""}