{"version":3,"sources":["routes/components/uploadAvatar/index.js","routes/Dashboard/Create_Project/index.js"],"names":["beforeUpload","file","isVal","type","message","error","isLt2M","size","Avatar","state","loading","handleChange","info","status","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","getBase64","originFileObj","imageUrl","_this","setState","uploadButton","react_default","a","createElement","icon","this","className","card","title","upload","name","listType","showUploadList","action","onChange","src","alt","React","Component","FormItem","Form","Item","formItemLayout","labelCol","xs","span","sm","wrapperCol","md","lg","CreateProject","props","es_form","Object","assign","label","hasFeedback","validateStatus","input","placeholder","id","uploadAvatar","Link","to","es_button","block","shape","theme"],"mappings":"2NASA,SAASA,EAAaC,GACpB,IAAMC,EAAsB,eAAdD,EAAKE,MAAuC,cAAdF,EAAKE,KAC5CD,GACHE,IAAQC,MAAM,qCAEhB,IAAMC,EAASL,EAAKM,KAAO,KAAO,KAAO,EAIzC,OAHKD,GACHF,IAAQC,MAAM,gCAETH,GAASI,MA+CHE,6MA3CbC,MAAQ,CACNC,SAAS,KAEXC,aAAe,SAACC,GACW,cAArBA,EAAKX,KAAKY,OAIW,SAArBD,EAAKX,KAAKY,QA3BlB,SAAmBC,EAAKC,GACtB,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,iBAAiB,OAAQ,kBAAMH,EAASC,EAAOG,UACtDH,EAAOI,cAAcN,GA0BjBO,CAAUT,EAAKX,KAAKqB,cAAe,SAAAC,GAAQ,OAAIC,EAAKC,SAAS,CAC3DF,WACAb,SAAS,MAPXc,EAAKC,SAAS,CAACf,SAAS,6EAa1B,IAAMgB,EACJC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM3B,KAAM4B,KAAKtB,MAAMC,QAAU,UAAY,SAC7CiB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,mBAAf,WAGET,EAAWQ,KAAKtB,MAAMc,SAC5B,OACEI,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMD,UAAU,UAAUE,MAAM,IAC9BP,EAAAC,EAAAC,cAACM,EAAA,EAAD,CACEC,KAAK,SACLC,SAAS,eACTL,UAAU,kBACVM,gBAAgB,EAChBC,OAAO,wCACPvC,aAAcA,EACdwC,SAAUT,KAAKpB,cAEdY,EAAWI,EAAAC,EAAAC,cAAA,OAAKY,IAAKlB,EAAUmB,IAAI,KAAOhB,WArChCiB,IAAMC,oBChBrBC,EAAWC,IAAKC,KAEhBC,EAAiB,CACrBC,SAAU,CACRC,GAAI,CAACC,KAAM,IACXC,GAAI,CAACD,KAAM,IAEbE,WAAY,CACVH,GAAI,CAACC,KAAM,IACXC,GAAI,CAACD,KAAM,IACXG,GAAI,CAACH,KAAM,IACXI,GAAI,CAACJ,KAAM,MAwCAK,UAnCO,SAACC,GACrB,OACE9B,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMD,UAAU,UAAUE,MAAM,sBAC9BP,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,KACA/B,EAAAC,EAAAC,cAACgB,EAADc,OAAAC,OAAA,GACMZ,EADN,CAEEa,MAAM,eACNC,aAAW,EACXC,eAAe,YAEfpC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAOC,YAAY,gCAAgCC,GAAG,aAEtDvC,EAAAC,EAAAC,cAACgB,EAADc,OAAAC,OAAA,GACMZ,EADN,CAEEa,MAAM,cACNC,aAAW,EACXC,eAAe,YAEfpC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAOC,YAAY,wBAAwBC,GAAG,YAEhDvC,EAAAC,EAAAC,cAACgB,EAADc,OAAAC,OAAA,GACIZ,EADJ,CAEAa,MAAM,SACNC,aAAW,IAETnC,EAAAC,EAAAC,cAACsC,EAAD,QAGJxC,EAAAC,EAAAC,cAACuC,EAAA,EAAD,CAAMC,GAAG,kBACP1C,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CAAQC,OAAK,EAACpE,KAAK,UAAUqE,MAAM,SAAnC,IAA4C7C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM3B,KAAK,eAAesE,MAAM,WAA5E","file":"static/js/15.d19f8237.chunk.js","sourcesContent":["import React from \"react\";\nimport {Card, Icon, message, Upload} from \"antd\";\n\nfunction getBase64(img, callback) {\n  const reader = new FileReader();\n  reader.addEventListener('load', () => callback(reader.result));\n  reader.readAsDataURL(img);\n}\n\nfunction beforeUpload(file) {\n  const isVal = file.type === 'image/jpeg' || file.type === 'image/png';\n  if (!isVal) {\n    message.error('You can only upload JPG/PNG file!');\n  }\n  const isLt2M = file.size / 1024 / 1024 < 2;\n  if (!isLt2M) {\n    message.error('Image must smaller than 2MB!');\n  }\n  return isVal && isLt2M;\n}\n\nclass Avatar extends React.Component {\n  state = {\n    loading: false,\n  };\n  handleChange = (info) => {\n    if (info.file.status === 'uploading') {\n      this.setState({loading: true});\n      return;\n    }\n    if (info.file.status === 'done') {\n      // Get this url from response in real world.\n      getBase64(info.file.originFileObj, imageUrl => this.setState({\n        imageUrl,\n        loading: false,\n      }));\n    }\n  };\n\n  render() {\n    const uploadButton = (\n      <div>\n        <Icon type={this.state.loading ? 'loading' : 'plus'}/>\n        <div className=\"ant-upload-text\">Upload</div>\n      </div>\n    );\n    const imageUrl = this.state.imageUrl;\n    return (\n      <Card className=\"gx-card\" title=\"\">\n        <Upload\n          name=\"avatar\"\n          listType=\"picture-card\"\n          className=\"avatar-uploader\"\n          showUploadList={false}\n          action=\"//jsonplaceholder.typicode.com/posts/\"\n          beforeUpload={beforeUpload}\n          onChange={this.handleChange}\n        >\n          {imageUrl ? <img src={imageUrl} alt=\"\"/> : uploadButton}\n        </Upload>\n      </Card>\n    );\n  }\n}\n\nexport default Avatar;\n","import React from \"react\";\nimport {Card, Form, Input, Button, Icon} from \"antd\";\nimport Avatar from \"../../components/uploadAvatar\";\nimport {Link} from \"react-router-dom\";\n\nconst FormItem = Form.Item;\n\nconst formItemLayout = {\n  labelCol: {\n    xs: {span: 24},\n    sm: {span: 5},\n  },\n  wrapperCol: {\n    xs: {span: 24},\n    sm: {span: 18},\n    md: {span: 16},\n    lg: {span: 12},\n  },\n};\n\n\nconst CreateProject = (props) => {\n  return (\n    <Card className=\"gx-card\" title=\"Create New Project\">\n      <Form>\n      <FormItem\n        {...formItemLayout}\n        label=\"Project Name\"\n        hasFeedback\n        validateStatus=\"success\"\n      >\n        <Input placeholder=\"Enter a name for your project\" id=\"project\"/>\n      </FormItem>\n        <FormItem\n          {...formItemLayout}\n          label=\"Client Name\"\n          hasFeedback\n          validateStatus=\"success\"\n        >\n          <Input placeholder=\"Enter a client's name\" id=\"client\"/>\n        </FormItem>\n        <FormItem\n        {...formItemLayout}\n        label=\"Avatar\"\n        hasFeedback\n          >\n          <Avatar/>\n        </FormItem>\n      </Form>\n      <Link to=\"/stark/uploads\">\n        <Button block type=\"primary\" shape=\"round\"> <Icon type=\"right-circle\" theme=\"filled\"/>Create Now!</Button>\n      </Link>\n    </Card>\n  );\n};\n\nexport default CreateProject;\n"],"sourceRoot":""}